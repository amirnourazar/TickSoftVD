

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2003 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; º Licensed to: Mark Stamp, San Jose State University,	1 user,	academic, 11/2003 º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	C:\Documents and Settings\Fiona\My Documents\CS	298_Metamorphic	virus\HMM\Cygwin\gdk-pixbuf-csource.exe
; Format      :	Portable executable for	IBM PC (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00000B40 (   2880.)
; Section size in file		: 00000C00 (   3072.)
; Offset to raw	data for section: 00000400
; Flags	60000020: Text Executable Readable
; Alignment	: 16 bytes ?

		model flat

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 401000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

		public start
start		proc near

var_8		= dword	ptr -8
var_2		= word ptr -2

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		and	esp, 0FFFFFFF0h
		mov	eax, ds:dword_404000
		test	eax, eax
		jz	short loc_401013
		int	3		; Trap to Debugger

loc_401013:				; CODE XREF: start+10j
		fnstcw	[ebp+var_2]
		movzx	eax, [ebp+var_2]
		and	eax, 0FFFFF0C0h
		mov	[ebp+var_2], ax
		movzx	eax, [ebp+var_2]
		or	eax, 33Fh
		mov	[ebp+var_2], ax
		fldcw	[ebp+var_2]
		mov	[esp+8+var_8], offset sub_4012E0
		call	sub_401860
		leave
		retn
start		endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401050	proc near		; CODE XREF: sub_4012E0+22Bp
					; sub_4012E0+26Fp

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 48h
		mov	[ebp+var_4], edi
		mov	edi, eax
		mov	eax, dword_402008
		mov	[ebp+var_C], ebx
		lea	ebx, [ebp+var_38]
		mov	[ebp+var_8], esi
		mov	[esp+48h+var_44], edx
		mov	[esp+48h+var_40], eax
		mov	[esp+48h+var_48], ebx
		call	gdk_pixdata_from_pixbuf
		mov	esi, eax
		mov	ecx, ds:dword_404030
		mov	eax, dword_402004
		mov	edx, ds:dword_404020
		or	eax, ecx
		test	edx, edx
		jz	short loc_401097
		or	eax, 10000h

loc_401097:				; CODE XREF: sub_401050+40j
		mov	[esp+48h+var_40], eax
		mov	eax, dword_402000
		mov	[esp+48h+var_48], ebx
		mov	[esp+48h+var_44], eax
		call	gdk_pixdata_to_csource
		mov	eax, [eax]
		mov	[esp+48h+var_48], edi
		mov	[esp+48h+var_40], eax
		mov	eax, offset aS	; "%s\n"
		mov	[esp+48h+var_44], eax
		call	g_fprintf
		mov	[esp+48h+var_48], esi
		call	g_free
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
sub_401050	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4010E0	proc near		; CODE XREF: sub_4012E0+105p
					; sub_4012E0+46Dp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		test	edx, edx
		mov	ebx, eax
		jnz	loc_4011C7
		mov	[esp+18h+var_18], ebx
		mov	ecx, offset aSVersion ;	"%s version "
		mov	eax, offset aGdkPixbufCsour ; "gdk-pixbuf-csource"
		mov	[esp+18h+var_14], ecx
		mov	[esp+18h+var_10], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, 6
		mov	edx, 0Ah
		mov	[esp+18h+var_C], eax
		mov	eax, 2
		mov	[esp+18h+var_10], eax
		mov	eax, offset aU_U_U ; "%u.%u.%u"
		mov	[esp+18h+var_8], edx
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset asc_403036 ; "\n"
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aGdkPixbufCsour ; "gdk-pixbuf-csource"
		mov	[esp+18h+var_10], eax
		mov	eax, offset aSComesWithAbso ; "%s comes	with ABSOLUTELY	NO WARRANTY.\n"
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	ecx, offset aGdkPixbufCsour ; "gdk-pixbuf-csource"
		mov	edx, offset aYouMayRedistri ; "You may redistribute copies of %s under"...
		mov	[esp+18h+var_10], ecx
		mov	[esp+18h+var_14], edx
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aTheGnuLesserGe ; "the GNU Lesser General Public License w"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aGtk ; "Gtk+"
		mov	[esp+18h+var_10], eax
		mov	eax, offset aSSourcePackage ; "%s source package. Sources, examples an"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aHttpWww_gtk_or ; "http://www.gtk.org"
		mov	[esp+18h+var_10], eax
		mov	eax, offset aInformationAre ; "information are available at %s\n"
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4011C7:				; CODE XREF: sub_4010E0+Bj
		mov	[esp+18h+var_18], ebx
		mov	ecx, offset aUsageSOptionsI ; "Usage: %s [options] [image]\n"
		mov	eax, offset aGdkPixbufCsour ; "gdk-pixbuf-csource"
		mov	[esp+18h+var_14], ecx
		mov	[esp+18h+var_10], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	edx, offset aGdkPixbufCsour ; "gdk-pixbuf-csource"
		mov	eax, offset aSOptionsBuildL ; "	      %s [options] --build-list	[[name"...
		mov	[esp+18h+var_10], edx
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aStreamGenerate ; "	 --stream		    generate p"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aStructGenerate ; "	 --struct		    generate G"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aMacrosGenerate ; "	 --macros		    generate i"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aRleUseOneByteR ; "	 --rle			    use	one by"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aRawProvideRawI ; "	 --raw			    provide ra"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	ecx, offset aExternGenerate ; "	 --extern		    generate e"...
		mov	[esp+18h+var_14], ecx
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	edx, offset aStaticGenerate ; "	 --static		    generate s"...
		mov	[esp+18h+var_14], edx
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aDecoderProvide ; "	 --decoder		    provide rl"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aNameIdentifier ; "	 --name=identifier	    C macro/va"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aBuildListParse ; "	 --build-list		    parse (nam"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aHHelpShowThisH ; "	 -h, --help		    show this "...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aVVersionPrintV ; "	 -v, --version		    print vers"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		mov	[esp+18h+var_18], ebx
		mov	eax, offset aGFatalWarnings ; "	 --g-fatal-warnings	    make warni"...
		mov	[esp+18h+var_14], eax
		call	g_fprintf
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_4010E0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4012E0	proc near		; DATA XREF: start+33o

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	eax, 10h
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		and	esp, 0FFFFFFF0h
		call	sub_401830
		call	__main
		mov	[ebp+var_10], 0
		mov	ebx, 1
		call	g_type_init
		mov	eax, [ebp+arg_0]
		cmp	ebx, eax
		mov	[ebp+var_14], eax
		jnb	short loc_40135C
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401320:				; CODE XREF: sub_4012E0+7Aj
		cld
		mov	edx, [ebp+arg_4]
		mov	ecx, 9
		mov	esi, offset aMacros ; "--macros"
		mov	edx, [edx+ebx*4]
		mov	edi, edx
		mov	[ebp+var_1C], edx
		repe cmpsb
		jnz	loc_4013F7
		mov	eax, 2
		mov	ds:dword_404030, eax

loc_401348:				; CODE XREF: sub_4012E0+18Cj
					; sub_4012E0+300j ...
		mov	ecx, [ebp+arg_4]
		lea	esi, [ebx+1]
		mov	dword ptr [ecx+ebx*4], 0

loc_401355:				; CODE XREF: sub_4012E0+140j
					; sub_4012E0+16Bj ...
		cmp	esi, [ebp+var_14]
		mov	ebx, esi

loc_40135A:				; CODE XREF: sub_4012E0+363j
					; sub_4012E0+444j
		jb	short loc_401320

loc_40135C:				; CODE XREF: sub_4012E0+34j
		mov	ebx, 1
		xor	edx, edx
		cmp	ebx, [ebp+var_14]
		jb	short loc_40138B
		jmp	short loc_4013C0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_401370:				; CODE XREF: sub_4012E0+ADj
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+ebx*4]
		test	eax, eax
		jz	short loc_401385
		mov	[ecx+edx*4], eax
		inc	edx
		mov	dword ptr [ecx+ebx*4], 0

loc_401385:				; CODE XREF: sub_4012E0+98j
					; sub_4012E0+B7j
		inc	ebx
		cmp	ebx, [ebp+var_14]
		jnb	short loc_4013B0

loc_40138B:				; CODE XREF: sub_4012E0+86j
					; sub_4012E0+BFj
		test	edx, edx
		jnz	short loc_401370
		mov	eax, [ebp+arg_4]
		mov	esi, [eax+ebx*4]
		test	esi, esi
		jnz	short loc_401385
		mov	edx, ebx
		inc	ebx
		cmp	ebx, [ebp+var_14]
		jb	short loc_40138B
		jmp	short loc_4013B0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_4013B0:				; CODE XREF: sub_4012E0+A9j
					; sub_4012E0+C1j
		test	edx, edx
		jz	short loc_4013C0
		mov	[ebp+arg_0], edx
		mov	esi, esi
		lea	edi, [edi+0]

loc_4013C0:				; CODE XREF: sub_4012E0+88j
					; sub_4012E0+D2j
		mov	ecx, ds:dword_404010
		test	ecx, ecx
		jnz	loc_4014A9
		cmp	[ebp+arg_0], 2
		jz	loc_401526
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	edx, 1
		call	sub_4010E0

loc_4013EA:				; CODE XREF: sub_4012E0+2F1j
		lea	esp, [ebp-0Ch]
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4013F7:				; CODE XREF: sub_4012E0+58j
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aStruct ; "--struct"
		mov	ecx, 9
		repe cmpsb
		jnz	short loc_401425
		mov	eax, 1
		mov	ds:dword_404030, eax

loc_401413:				; CODE XREF: sub_4012E0+241j
					; sub_4012E0+2B8j
		mov	eax, [ebp+arg_4]
		lea	esi, [ebx+1]
		mov	dword ptr [eax+ebx*4], 0
		jmp	loc_401355
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401425:				; CODE XREF: sub_4012E0+127j
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aStream ; "--stream"
		mov	ecx, 9
		repe cmpsb
		jnz	short loc_401450
		xor	eax, eax
		mov	ds:dword_404030, eax

loc_40143E:				; CODE XREF: sub_4012E0+1C7j
		mov	edx, [ebp+arg_4]
		lea	esi, [ebx+1]
		mov	dword ptr [edx+ebx*4], 0
		jmp	loc_401355
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401450:				; CODE XREF: sub_4012E0+155j
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aRle ; "--rle"
		mov	ecx, 6
		repe cmpsb
		jnz	short loc_401471
		mov	eax, 1
		mov	dword_402008, eax
		jmp	loc_401348
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401471:				; CODE XREF: sub_4012E0+180j
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aRaw ; "--raw"
		mov	ecx, 6
		repe cmpsb
		jz	loc_40151A
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aExtern ; "--extern"
		mov	ecx, 9
		repe cmpsb
		jnz	loc_40156A
		and	dword_402004, 0FFFFFDFFh
		jmp	short loc_40143E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4014A9:				; CODE XREF: sub_4012E0+E8j
		mov	[ebp+var_18], 0
		mov	edi, [ebp+arg_4]
		mov	esi, [ebp+arg_0]
		add	edi, 4
		sub	esi, 2
		jmp	short loc_4014D6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_4014C0:				; CODE XREF: sub_4012E0+206j
		mov	dword_402000, edx

loc_4014C6:				; CODE XREF: sub_4012E0+238j
		xor	eax, eax
		add	edi, 4
		cmp	[ebp+var_18], 0
		setz	al
		dec	esi
		mov	[ebp+var_18], eax

loc_4014D6:				; CODE XREF: sub_4012E0+1DCj
		cmp	esi, 0FFFFFFFFh
		jz	loc_401560
		mov	eax, [ebp+var_18]
		mov	edx, [edi]
		test	eax, eax
		jz	short loc_4014C0
		mov	[esp+38h+var_38], edx
		lea	eax, [ebp+var_10]
		mov	[esp+38h+var_34], eax
		call	gdk_pixbuf_new_from_file
		test	eax, eax
		mov	ebx, eax
		jz	loc_40159D
		call	__getreent
		mov	eax, [eax+8]
		mov	edx, ebx
		call	sub_401050
		mov	[esp+38h+var_38], ebx
		call	g_object_unref
		jmp	short loc_4014C6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40151A:				; CODE XREF: sub_4012E0+1A1j
		xor	eax, eax
		mov	dword_402008, eax
		jmp	loc_401413
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401526:				; CODE XREF: sub_4012E0+F2j
		mov	ecx, [ebp+arg_4]
		lea	eax, [ebp+var_10]
		mov	edx, [ecx+4]
		mov	[esp+38h+var_34], eax
		mov	[esp+38h+var_38], edx
		call	gdk_pixbuf_new_from_file
		test	eax, eax
		mov	ebx, eax
		jz	loc_4015E5
		call	__getreent
		mov	eax, [eax+8]
		mov	edx, ebx
		call	sub_401050
		mov	[esp+38h+var_38], ebx
		call	g_object_unref
		lea	esi, [esi+0]

loc_401560:				; CODE XREF: sub_4012E0+1F9j
		lea	esp, [ebp+var_C]
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40156A:				; CODE XREF: sub_4012E0+1B7j
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aStatic ; "--static"
		mov	ecx, 9
		repe cmpsb
		jz	short loc_4015D6
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aDecoder ; "--decoder"
		mov	ecx, 0Ah
		repe cmpsb
		jnz	short loc_4015FC
		mov	eax, 1
		mov	ds:dword_404020, eax
		jmp	loc_401413
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40159D:				; CODE XREF: sub_4012E0+21Bj
		call	__getreent
		mov	edx, [ebp+var_10]
		mov	edx, [edx+8]
		mov	[esp+38h+var_2C], edx
		mov	edx, [edi]

loc_4015AE:				; CODE XREF: sub_4012E0+31Aj
		mov	[esp+38h+var_30], edx
		mov	edx, offset aFailedToLoadSS ; "failed to load \"%s\": %s\n"
		mov	[esp+38h+var_34], edx
		mov	eax, [eax+0Ch]
		mov	[esp+38h+var_38], eax
		call	g_fprintf
		mov	eax, [ebp+var_10]
		mov	[esp+38h+var_38], eax
		call	g_error_free
		jmp	loc_4013EA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4015D6:				; CODE XREF: sub_4012E0+29Aj
		or	dword_402004, 200h
		jmp	loc_401348
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4015E5:				; CODE XREF: sub_4012E0+25Fj
		call	__getreent
		mov	edx, [ebp+var_10]
		mov	edx, [edx+8]
		mov	[esp+38h+var_2C], edx
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx+4]
		jmp	short loc_4015AE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4015FC:				; CODE XREF: sub_4012E0+2ACj
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aName ; "--name"
		mov	ecx, 7
		repe cmpsb
		jz	short loc_40161F
		mov	edi, [ebp+var_1C]
		mov	esi, offset aName_0 ; "--name="
		mov	ecx, 7
		repe cmpsb
		jnz	short loc_401648

loc_40161F:				; CODE XREF: sub_4012E0+32Cj
		mov	edx, [ebp+var_1C]
		cmp	byte ptr [edx+6], 3Dh
		jz	loc_401729
		lea	esi, [ebx+1]
		cmp	esi, [ebp+var_14]
		jb	short loc_40166A

loc_401634:				; CODE XREF: sub_4012E0+3ADj
					; sub_4012E0+45Ej
		cmp	esi, [ebp+var_14]
		mov	edx, [ebp+arg_4]
		mov	dword ptr [edx+ebx*4], 0
		mov	ebx, esi
		jmp	loc_40135A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401648:				; CODE XREF: sub_4012E0+33Dj
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aBuildList ; "--build-list"
		mov	ecx, 0Dh
		repe cmpsb
		jnz	short loc_40168F
		mov	edi, 1
		mov	ds:dword_404010, edi
		jmp	loc_401348
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40166A:				; CODE XREF: sub_4012E0+352j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+ebx*4+4]
		mov	[esp+38h+var_38], eax
		call	g_strdup
		mov	dword_402000, eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+ebx*4], 0
		mov	ebx, esi
		lea	esi, [ebx+1]
		jmp	short loc_401634
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40168F:				; CODE XREF: sub_4012E0+378j
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset asc_403506 ; "-h"
		mov	ecx, 3
		repe cmpsb
		jz	loc_401768
		mov	edi, [ebp+var_1C]
		mov	esi, offset aHelp ; "--help"
		mov	ecx, 7
		repe cmpsb
		jz	loc_401768
		cld
		mov	edi, [ebp+var_1C]
		mov	esi, offset aV	; "-v"
		mov	ecx, 3
		repe cmpsb
		jz	short loc_401743
		mov	edi, [ebp+var_1C]
		mov	esi, offset aVersion ; "--version"
		mov	ecx, 0Ah
		repe cmpsb
		jz	short loc_401743
		cld
		mov	esi, [ebp+var_1C]
		mov	edi, offset aGFatalWarnin_0 ; "--g-fatal-warnings"
		mov	ecx, 13h
		repe cmpsb
		setnbe	dl
		setb	al
		cmp	dl, al
		lea	esi, [ebx+1]
		jnz	loc_401355
		mov	[esp+38h+var_38], 5
		call	g_log_set_always_fatal
		or	eax, 18h
		mov	[esp+38h+var_38], eax
		call	g_log_set_always_fatal
		cmp	esi, [ebp+var_14]
		mov	ecx, [ebp+arg_4]
		mov	dword ptr [ecx+ebx*4], 0
		mov	ebx, esi
		jmp	loc_40135A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401729:				; CODE XREF: sub_4012E0+346j
		mov	eax, edx
		lea	esi, [ebx+1]
		add	eax, 7
		mov	[esp+38h+var_38], eax
		call	g_strdup
		mov	dword_402000, eax
		jmp	loc_401634
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401743:				; CODE XREF: sub_4012E0+3EAj
					; sub_4012E0+3FBj
		call	__getreent
		mov	eax, [eax+0Ch]
		xor	edx, edx
		call	sub_4010E0
		mov	edx, [ebp+arg_4]
		mov	dword ptr [edx+ebx*4], 0

loc_40175C:				; CODE XREF: sub_4012E0+4A4j
		mov	[esp+38h+var_38], 0
		call	exit

loc_401768:				; CODE XREF: sub_4012E0+3BFj
					; sub_4012E0+3D4j
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	edx, 1
		call	sub_4010E0
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+ebx*4], 0
		jmp	short loc_40175C
sub_4012E0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION gdk_pixbuf_new_from_file.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION gdk_pixdata_to_csource. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION gdk_pixdata_from_pixbuf. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_object_unref. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_type_init. PRESS KEYPAD	"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_log_set_always_fatal. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_strdup.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_error_free. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_free. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_fprintf. PRESS KEYPAD "+" TO EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_401830	proc near		; CODE XREF: sub_4012E0+11p
		push	ecx
		mov	ecx, esp
		add	ecx, 8

loc_401836:				; CODE XREF: sub_401830+1Bj
		cmp	eax, 1000h
		jb	short loc_40184D
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		jmp	short loc_401836
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40184D:				; CODE XREF: sub_401830+Bj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		jmp	eax
sub_401830	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401860	proc near		; CODE XREF: start+3Ap

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_C2		= dword	ptr -0C2h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_4], esi
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_8], ebx
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	sub_4018F0
		sub	esp, 8
		test	eax, eax
		jz	short loc_401891
		mov	[esp+18h+var_18], 0

loc_40188B:				; CODE XREF: sub_401860+56j
		call	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)

loc_401891:				; CODE XREF: sub_401860+22j
		sub	esp, 0C0h
		lea	ebx, [esp+0D8h+var_C2+1]
		and	ebx, 0FFFFFFF0h
		mov	dword ptr [ebx], 0
		mov	[esp+0D8h+var_D4], ebx
		mov	[esp+0D8h+var_D8], esi
		call	sub_4018F0
		sub	esp, 8
		mov	[esp+0D8h+var_D8], ebx
		jmp	short loc_40188B
sub_401860	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION exit. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __getreent. PRESS	KEYPAD "+" TO EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4018F0	proc near		; CODE XREF: sub_401860+18p
					; sub_401860+4Bp

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		push	ebx
		sub	esp, 4		; lpModuleName
		mov	ebx, [ebp+arg_4]
		test	ebx, ebx
		jz	loc_4019F3

loc_401904:				; CODE XREF: sub_4018F0+11Fj
		mov	dword ptr [ebx+4], 0A8h
		xor	ecx, ecx
		mov	edx, 84h
		mov	dword ptr [ebx+8], 3EDh
		test	eax, eax
		mov	dword ptr [ebx+0Ch], 12h
		mov	[ebx+80h], ecx
		mov	[ebx+84h], edx
		mov	dword ptr [ebx+2Ch], offset dword_401B30
		mov	dword ptr [ebx+30h], offset dword_401B38
		mov	dword ptr [ebx+14h], offset unk_404044
		jnz	loc_4019E1
		mov	eax, ds:_impure_ptr
		mov	[ebx+10h], eax

loc_401951:				; CODE XREF: sub_4018F0+FEj
		mov	dword ptr [ebx+78h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [ebx+48h], offset sub_401B00
		mov	dword ptr [ebx+4Ch], offset sub_401AF0
		mov	[ebx+28h], eax
		mov	eax, [ebp+0]
		mov	dword ptr [ebx+50h], offset sub_401AE0
		mov	dword ptr [ebx+54h], offset sub_401AD0
		mov	dword ptr [ebx+24h], offset unk_404040
		mov	[ebx], eax
		mov	dword ptr [ebx+18h], offset loc_401AC0
		mov	dword ptr [ebx+1Ch], offset loc_401AB0
		mov	dword ptr [ebx+20h], offset loc_401AA0
		mov	dword ptr [ebx+44h], offset loc_401A90
		mov	[esp+8+var_8], 0
		call	GetModuleHandleA
		mov	[ebx+7Ch], eax
		sub	esp, 4
		mov	dword ptr [ebx+34h], offset dword_402000
		mov	dword ptr [ebx+38h], offset unk_402010
		mov	dword ptr [ebx+3Ch], offset dword_404000
		mov	dword ptr [ebx+40h], 404070h
		call	sub_401A60
		mov	eax, 1

loc_4019DA:				; CODE XREF: sub_4018F0+116j
		mov	ebx, [ebp+var_4]
		leave
		retn	8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4019E1:				; CODE XREF: sub_4018F0+53j
		mov	edx, [ebx+0A4h]
		mov	eax, ds:_impure_ptr
		mov	[eax], edx
		jmp	loc_401951
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4019F3:				; CODE XREF: sub_4018F0+Ej
		mov	[esp+8+var_8], 8
		call	cygwin_internal
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 0FFFFFFFFh
		jz	short loc_4019DA
		mov	ebx, edx
		mov	eax, 1
		jmp	loc_401904
sub_4018F0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401A30	proc near		; CODE XREF: sub_401A60+1Fp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	ecx, [ebp+arg_0]
		push	esi
		mov	esi, [ebp+arg_8]
		push	ebx
		mov	ebx, [ebp+arg_4]
		jmp	short loc_401A4C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401A40:				; CODE XREF: sub_401A30+1Ej
		mov	edx, [ecx+4]
		mov	eax, [ecx]
		add	ecx, 8
		add	edx, esi
		add	[edx], eax

loc_401A4C:				; CODE XREF: sub_401A30+Ej
		cmp	ecx, ebx
		jb	short loc_401A40
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_401A30	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401A60	proc near		; CODE XREF: sub_4018F0+E0p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	edx, 400000h
		mov	ebp, esp
		mov	eax, offset unk_403530
		sub	esp, 0Ch
		mov	[esp+0Ch+var_4], edx
		mov	[esp+0Ch+var_8], eax
		mov	[esp+0Ch+var_C], offset	unk_403530
		call	sub_401A30
		leave
		retn
sub_401A60	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401A90:				; DATA XREF: sub_4018F0+ABo
		jmp	ds:calloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401AA0:				; DATA XREF: sub_4018F0+A4o
		jmp	ds:realloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401AB0:				; DATA XREF: sub_4018F0+9Do
		jmp	ds:free
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401AC0:				; DATA XREF: sub_4018F0+96o
		jmp	ds:malloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401AD0	proc near		; DATA XREF: sub_4018F0+86o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401AD0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401AE0	proc near		; DATA XREF: sub_4018F0+7Fo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401AE0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401AF0	proc near		; DATA XREF: sub_4018F0+72o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401AF0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401B00	proc near		; DATA XREF: sub_4018F0+6Bo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401B00	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
dword_401B30	dd 0FFFFFFFFh, 0	; DATA XREF: sub_4018F0+3Eo
dword_401B38	dd 0FFFFFFFFh, 31h dup(0) ; DATA XREF: sub_4018F0+45o
_text		ends

; Section 2. (virtual address 00002000)
; Virtual size			: 00000010 (	 16.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00001000
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 402000h
dword_402000	dd 403000h		; DATA XREF: sub_401050+4Br
					; sub_4012E0+1E0w ...
dword_402004	dd 600h			; DATA XREF: sub_401050+31r
					; sub_4012E0+1BDw ...
dword_402008	dd 1			; DATA XREF: sub_401050+Br
					; sub_4012E0+187w ...
		db    0	;
		db    0	;
		db    0	;
		db    0	;
unk_402010	db    0	;		; DATA XREF: sub_4018F0+CBo
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_data		ends

; Section 3. (virtual address 00003000)
; Virtual size			: 00000530 (   1328.)
; Section size in file		: 00000600 (   1536.)
; Offset to raw	data for section: 00001200
; Flags	40000040: Data Readable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 403000h
aMy_pixbuf	db 'my_pixbuf',0
aS		db '%s',0Ah,0           ; DATA XREF: sub_401050+65o
aSVersion	db '%s version ',0      ; DATA XREF: sub_4010E0+14o
aGdkPixbufCsour	db 'gdk-pixbuf-csource',0 ; DATA XREF: sub_4010E0+19o
					; sub_4010E0+6Bo ...
aU_U_U		db '%u.%u.%u',0         ; DATA XREF: sub_4010E0+45o
asc_403036	db 0Ah,0		; DATA XREF: sub_4010E0+5Ao
aSComesWithAbso	db '%s comes with ABSOLUTELY NO WARRANTY.',0Ah,0 ; DATA XREF: sub_4010E0+74o
		align 4
aYouMayRedistri	db 'You may redistribute copies of %s under the terms of',0Ah,0
					; DATA XREF: sub_4010E0+8Ao
		align 4
aTheGnuLesserGe	db 'the GNU Lesser General Public License which can be found in '
					; DATA XREF: sub_4010E0+9Fo
		db 'the',0Ah,0
aGtk		db 'Gtk+',0             ; DATA XREF: sub_4010E0+B0o
		align 4
aSSourcePackage	db '%s source package. Sources, examples and contact',0Ah,0
					; DATA XREF: sub_4010E0+B9o
aHttpWww_gtk_or	db 'http://www.gtk.org',0 ; DATA XREF: sub_4010E0+CAo
		align 4
aInformationAre	db 'information are available at %s',0Ah,0 ; DATA XREF: sub_4010E0+D3o
aUsageSOptionsI	db 'Usage: %s [options] [image]',0Ah,0 ; DATA XREF: sub_4010E0+EAo
		align 4
aSOptionsBuildL	db '       %s [options] --build-list [[name image]...]',0Ah,0
					; DATA XREF: sub_4010E0+109o
aStreamGenerate	db '  --stream                   generate pixbuf data stream',0Ah
					; DATA XREF: sub_4010E0+11Eo
		db 0
		align 4
aStructGenerate	db '  --struct                   generate GdkPixdata structure',0Ah
					; DATA XREF: sub_4010E0+12Fo
		db 0
aMacrosGenerate	db '  --macros                   generate image size/pixel macro'
					; DATA XREF: sub_4010E0+140o
		db 's',0Ah,0
		align 4
aRleUseOneByteR	db '  --rle                      use one byte run-length-encodin'
					; DATA XREF: sub_4010E0+151o
		db 'g',0Ah,0
		align 4
aRawProvideRawI	db '  --raw                      provide raw image data copy',0Ah
					; DATA XREF: sub_4010E0+162o
		db 0
		align 4
aExternGenerate	db '  --extern                   generate extern symbols',0Ah,0
					; DATA XREF: sub_4010E0+173o
		align 4
aStaticGenerate	db '  --static                   generate static symbols',0Ah,0
					; DATA XREF: sub_4010E0+184o
		align 4
aDecoderProvide	db '  --decoder                  provide rle decoder',0Ah,0
					; DATA XREF: sub_4010E0+195o
		align 4
aNameIdentifier	db '  --name=identifier          C macro/variable name',0Ah,0
					; DATA XREF: sub_4010E0+1A6o
aBuildListParse	db '  --build-list               parse (name, image) pairs',0Ah,0
					; DATA XREF: sub_4010E0+1B7o
aHHelpShowThisH	db '  -h, --help                 show this help message',0Ah,0
					; DATA XREF: sub_4010E0+1C8o
		align 4
aVVersionPrintV	db '  -v, --version              print version informations',0Ah
					; DATA XREF: sub_4010E0+1D9o
		db 0
		align 4
aGFatalWarnings	db '  --g-fatal-warnings         make warnings fatal (abort)',0Ah
					; DATA XREF: sub_4010E0+1EAo
		db 0
aMacros		db '--macros',0         ; DATA XREF: sub_4012E0+49o
aStruct		db '--struct',0         ; DATA XREF: sub_4012E0+11Bo
aStream		db '--stream',0         ; DATA XREF: sub_4012E0+149o
aRle		db '--rle',0            ; DATA XREF: sub_4012E0+174o
aRaw		db '--raw',0            ; DATA XREF: sub_4012E0+195o
aExtern		db '--extern',0         ; DATA XREF: sub_4012E0+1ABo
aStatic		db '--static',0         ; DATA XREF: sub_4012E0+28Eo
aDecoder	db '--decoder',0        ; DATA XREF: sub_4012E0+2A0o
aFailedToLoadSS	db 'failed to load "%s": %s',0Ah,0 ; DATA XREF: sub_4012E0+2D2o
aName		db '--name',0           ; DATA XREF: sub_4012E0+320o
aName_0		db '--name=',0          ; DATA XREF: sub_4012E0+331o
aBuildList	db '--build-list',0     ; DATA XREF: sub_4012E0+36Co
asc_403506	db '-h',0               ; DATA XREF: sub_4012E0+3B3o
aHelp		db '--help',0           ; DATA XREF: sub_4012E0+3C8o
aV		db '-v',0               ; DATA XREF: sub_4012E0+3DEo
aVersion	db '--version',0        ; DATA XREF: sub_4012E0+3EFo
aGFatalWarnin_0	db '--g-fatal-warnings',0 ; DATA XREF: sub_4012E0+401o
unk_403530	db    0	;		; DATA XREF: sub_401A60+8o
					; sub_401A60+18o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_rdata		ends

; Section 4. (virtual address 00004000)
; Virtual size			: 00000070 (	112.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0000080: Bss Readable Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 404000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_404000	dd ?			; DATA XREF: start+9r sub_4018F0+D2o
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404010	dd ?			; DATA XREF: sub_4012E0+E0r
					; sub_4012E0+37Fw
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404020	dd ?			; DATA XREF: sub_401050+36r
					; sub_4012E0+2B3w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404030	dd ?			; DATA XREF: sub_401050+2Br
					; sub_4012E0+63w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
unk_404040	db    ?	;		; DATA XREF: sub_4018F0+8Do
		db    ?	;
		db    ?	;
		db    ?	;
unk_404044	db    ?	;		; DATA XREF: sub_4018F0+4Co
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
_bss		ends

;
; Imports from cyggdk_pixbuf-2.0-0
;
; Section 5. (virtual address 00005000)
; Virtual size			: 00000390 (	912.)
; Section size in file		: 00000400 (   1024.)
; Offset to raw	data for section: 00001800
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Externs
; _idata
		extrn __imp_gdk_pixbuf_new_from_file:dword
					; DATA XREF: gdk_pixbuf_new_from_filer
		extrn __imp_gdk_pixdata_from_pixbuf:dword
					; DATA XREF: gdk_pixdata_from_pixbufr
		extrn __imp_gdk_pixdata_to_csource:dword
					; DATA XREF: gdk_pixdata_to_csourcer


;
; Imports from cygwin1
;
		extrn __imp___getreent:dword ; DATA XREF: __getreentr
		extrn __imp___main:dword ; DATA	XREF: __mainr
		extrn _impure_ptr:dword	; DATA XREF: sub_4018F0+59r
					; sub_4018F0+F7r
; void *__cdecl	calloc(size_t,size_t)
		extrn calloc:dword	; DATA XREF: .text:00401A90r
		extrn __imp_cygwin_internal:dword ; DATA XREF: cygwin_internalr
; dll_crt0(per_process *)
		extrn dll_crt0__FP11per_process:dword ;	DATA XREF: sub_401860+2Br
					; .text:00401A20r
; void __cdecl _imp_exit(int)
		extrn __imp_exit:dword	; DATA XREF: exitr
; void __cdecl free(void *)
		extrn free:dword	; DATA XREF: .text:00401AB0r
; void *__cdecl	malloc(size_t)
		extrn malloc:dword	; DATA XREF: .text:00401AC0r
; void *__cdecl	realloc(void *,size_t)
		extrn realloc:dword	; DATA XREF: .text:00401AA0r


;
; Imports from cygglib-2.0-0
;
		extrn __imp_g_error_free:dword ; DATA XREF: g_error_freer
		extrn __imp_g_fprintf:dword ; DATA XREF: g_fprintfr
		extrn __imp_g_free:dword ; DATA	XREF: g_freer
		extrn __imp_g_log_set_always_fatal:dword
					; DATA XREF: g_log_set_always_fatalr
		extrn __imp_g_strdup:dword ; DATA XREF:	g_strdupr


;
; Imports from cyggobject-2.0-0
;
		extrn __imp_g_object_unref:dword ; DATA	XREF: g_object_unrefr
		extrn __imp_g_type_init:dword ;	DATA XREF: g_type_initr


;
; Imports from KERNEL32
;
; HMODULE __stdcall __imp_GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp_GetModuleHandleA:dword ; DATA XREF:	GetModuleHandleAr



		end start
