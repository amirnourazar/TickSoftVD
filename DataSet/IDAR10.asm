

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2003 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; º Licensed to: Mark Stamp, San Jose State University,	1 user,	academic, 11/2003 º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	C:\Documents and Settings\Fiona\My Documents\CS	298_Metamorphic	virus\HMM\Cygwin\dump.exe
; Format      :	Portable executable for	IBM PC (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00000BF0 (   3056.)
; Section size in file		: 00000C00 (   3072.)
; Offset to raw	data for section: 00000400
; Flags	60000020: Text Executable Readable
; Alignment	: 16 bytes ?

		model flat

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 401000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

		public start
start		proc near

var_8		= dword	ptr -8
var_2		= word ptr -2

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		and	esp, 0FFFFFFF0h
		mov	eax, ds:dword_404000
		test	eax, eax
		jz	short loc_401013
		int	3		; Trap to Debugger

loc_401013:				; CODE XREF: start+10j
		fnstcw	[ebp+var_2]
		movzx	eax, [ebp+var_2]
		and	eax, 0FFFFF0C0h
		mov	[ebp+var_2], ax
		movzx	eax, [ebp+var_2]
		or	eax, 33Fh
		mov	[ebp+var_2], ax
		fldcw	[ebp+var_2]
		mov	[esp+8+var_8], offset sub_401250
		call	sub_401840
		leave
		retn
start		endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401050	proc near		; CODE XREF: sub_401250+132p
					; sub_401250+337p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ecx, offset aSVersionS ; "%s version %s\n"
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, eax
		mov	[esp+18h+var_10], edx
		mov	eax, offset a0_1_1 ; "0.1.1"
		mov	[esp+18h+var_14], ecx
		mov	[esp+18h+var_18], ebx
		mov	[esp+18h+var_C], eax
		call	fprintf
		mov	[esp+18h+var_C], ebx
		mov	edx, 3Ah
		mov	eax, 1
		mov	[esp+18h+var_10], edx
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], offset aPrintsAHexdump ; "  Prints a hexdump of stdin	or specifie"...
		call	fwrite
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_401050	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4010A0	proc near		; CODE XREF: sub_4010A0+28p
					; sub_4010A0+7Ep ...

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	[ebp+var_C], ebx
		cmp	edx, 1
		mov	ebx, eax
		mov	[ebp+var_8], esi
		mov	esi, edx
		mov	[ebp+var_4], edi
		mov	edi, [ebp+arg_0]
		jle	short loc_4010CD
		test	ebx, ebx
		lea	edx, [edx-1]
		js	short loc_401115
		mov	[esp+10h+var_10], edi
		sar	eax, 4
		call	sub_4010A0

loc_4010CD:				; CODE XREF: sub_4010A0+19j
					; sub_4010A0+83j
		test	ebx, ebx
		lea	edx, dword_404020[edi+esi]
		mov	eax, ebx
		js	short loc_4010F6
		and	eax, 0FFFFFFF0h
		sub	ebx, eax
		movzx	eax, ds:byte_403053[ebx]
		mov	[edx-1], al
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4010F6:				; CODE XREF: sub_4010A0+38j
		lea	eax, [ebx+0Fh]
		and	eax, 0FFFFFFF0h
		sub	ebx, eax
		movzx	eax, ds:byte_403053[ebx]
		mov	[edx-1], al
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401115:				; CODE XREF: sub_4010A0+20j
		mov	[esp+10h+var_10], edi
		lea	eax, [ebx+0Fh]
		sar	eax, 4
		call	sub_4010A0
		jmp	short loc_4010CD
sub_4010A0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401130	proc near		; CODE XREF: sub_401250+3B4p
					; sub_401250+4FAp

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		push	edi
		mov	edi, eax
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 0Ch
		mov	[esp+18h+var_18], edi
		mov	ds:dword_404070, eax
		call	getc
		mov	esi, eax

loc_40114C:				; CODE XREF: sub_401130+E5j
		xor	ebx, ebx
		mov	esi, esi

loc_401150:				; CODE XREF: sub_401130+2Bj
		mov	byte ptr ds:dword_404020[ebx], 20h
		inc	ebx
		cmp	ebx, 31h
		jle	short loc_401150
		mov	ebx, 32h
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401170:				; CODE XREF: sub_401130+4Bj
		mov	byte ptr ds:dword_404020[ebx], 0
		inc	ebx
		cmp	ebx, 4Fh
		jle	short loc_401170
		mov	[esp+18h+var_18], 0
		mov	eax, ds:dword_404070
		mov	edx, 8
		call	sub_4010A0
		cmp	esi, 0FFFFFFFFh
		jz	loc_40121A
		xor	ebx, ebx
		mov	esi, esi

loc_4011A0:				; CODE XREF: sub_401130+C3j
		mov	edx, ebx
		mov	eax, esi
		shr	edx, 1Fh
		lea	edx, [ebx+edx]
		and	eax, 0FFh
		sar	edx, 1
		lea	edx, [edx+ebx*2+0Ah]
		mov	[esp+18h+var_18], edx
		mov	edx, 2
		call	sub_4010A0
		mov	ds:byte_404052[ebx], 2Eh
		mov	eax, ds:_ctype_
		mov	edx, esi
		and	edx, 7Fh
		test	byte ptr [eax+edx+1], 97h
		jz	short loc_4011E0
		mov	ds:byte_404052[ebx], dl

loc_4011E0:				; CODE XREF: sub_401130+A8j
		mov	[esp+18h+var_18], edi
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		jz	short loc_4011F5
		inc	ebx
		cmp	ebx, 0Fh
		jle	short loc_4011A0

loc_4011F5:				; CODE XREF: sub_401130+BDj
		mov	eax, ds:dword_404070
		test	eax, eax
		jz	short loc_401202
		test	al, al
		jz	short loc_401222

loc_401202:				; CODE XREF: sub_401130+CCj
					; sub_401130+116j
		mov	[esp+18h+var_18], offset dword_404020
		call	puts
		add	ds:dword_404070, 10h
		jmp	loc_40114C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40121A:				; CODE XREF: sub_401130+66j
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401222:				; CODE XREF: sub_401130+D0j
		mov	[esp+18h+var_18], offset unk_403064
		call	puts
		mov	[esp+18h+var_18], offset aAddr0123456789 ; "  Addr     0 1  2 3	 4 5  6	7  8 9	A B"...
		call	puts
		mov	[esp+18h+var_18], offset asc_4030AC ; "--------	 ---- ---- ----	---- ---- ----"...
		call	puts
		jmp	short loc_401202
sub_401130	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401250	proc near		; DATA XREF: start+33o

var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= byte ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_A8		= dword	ptr -0A8h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	eax, 10h
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 10Ch
		mov	esi, [ebp+arg_4]
		and	esp, 0FFFFFFF0h
		call	sub_401810
		call	__main
		xor	eax, eax
		lea	ebx, [ebp+var_A8]
		xor	edi, edi
		mov	[ebp+var_EC], eax
		mov	eax, 8Ch
		mov	[esp+118h+var_110], eax
		mov	eax, offset off_402000
		mov	[esp+118h+var_118], ebx
		mov	[esp+118h+var_114], eax
		call	memcpy
		mov	[ebp+var_DC], ebx
		xor	eax, eax
		xor	ecx, ecx
		mov	[ebp+var_E8], eax
		mov	eax, 4
		mov	ebx, offset aHelpOptions ; "Help options"
		mov	[ebp+var_E0], eax
		mov	eax, [ebp+var_EC]
		mov	[ebp+var_D0], ecx
		mov	ecx, 7
		mov	[ebp+var_D8], edi
		lea	edi, [ebp+var_CC]
		cld
		mov	[ebp+var_E4], 0
		mov	[ebp+var_D4], ebx
		rep stosd
		mov	eax, [esi]
		mov	[esp+118h+var_118], eax
		call	strdup
		mov	ds:dword_404010, eax
		test	eax, eax
		jz	loc_401754
		mov	[esp+118h+var_110], esi
		xor	eax, eax
		mov	[esp+118h+var_108], eax
		lea	eax, [ebp+var_E8]
		mov	[esp+118h+var_10C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+118h+var_118], 0
		mov	[esp+118h+var_114], eax
		call	poptGetContext
		mov	edi, eax
		mov	eax, offset aOption___Files ; "[OPTION...] [files...]"
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], edi
		call	poptSetOtherOptionHelp
		lea	esi, [esi+0]

loc_401340:				; CODE XREF: sub_401250+11Bj
					; sub_401250+323j
		mov	[esp+118h+var_118], edi
		call	poptGetNextOpt
		test	eax, eax
		jle	loc_4015AF
		cmp	eax, 75h
		jz	loc_401613
		jg	loc_401570
		cmp	eax, 3Fh
		jz	loc_401650
		cmp	eax, 6Ch
		jnz	short loc_401340
		call	__getreent
		mov	ebx, [eax+0Ch]
		mov	esi, 3Fh
		mov	edx, ds:dword_404010
		mov	eax, ebx
		call	sub_401050
		mov	[esp+118h+var_10C], ebx
		mov	eax, 3Eh
		mov	[esp+118h+var_110], eax
		mov	eax, 1
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], offset aThisProgramIsF ; "This program is free software; you can "...
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	eax, 3Ch
		mov	[esp+118h+var_110], eax
		mov	eax, 1
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], offset aModifyItUnderT ; "modify it	under the terms	of the GNU Ge"...
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	ecx, 1
		mov	[esp+118h+var_114], ecx
		mov	[esp+118h+var_110], esi
		mov	esi, 1
		mov	[esp+118h+var_118], offset aAsPublishedByT ; "as published by the Free Software	Found"...
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	edx, 37h
		mov	eax, 1
		mov	[esp+118h+var_110], edx
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], offset aOfTheLicenseOr ; "of the License, or (at your option) any"...
		call	fwrite
		mov	[esp+118h+var_114], ebx
		mov	[esp+118h+var_118], 0Ah
		call	fputc
		mov	[esp+118h+var_10C], ebx
		mov	eax, 40h
		mov	[esp+118h+var_110], eax
		mov	eax, 1
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], offset aThisProgramIsD ; "This program is distributed in the hope"...
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	eax, 3Fh
		mov	[esp+118h+var_110], eax
		mov	eax, 1
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], offset aButWithoutAnyW ; "but WITHOUT ANY WARRANTY;	without	even "...
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	eax, 3Eh
		mov	[esp+118h+var_114], esi
		mov	esi, 2Eh
		mov	[esp+118h+var_110], eax
		mov	[esp+118h+var_118], offset aMerchantabilit ; "MERCHANTABILITY or FITNESS FOR A PARTIC"...
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	ecx, 2Dh
		mov	edx, 1
		mov	[esp+118h+var_110], ecx
		mov	[esp+118h+var_114], edx
		mov	[esp+118h+var_118], offset aGnuGeneralPubl ; "GNU General Public License for more det"...
		call	fwrite
		mov	[esp+118h+var_114], ebx
		mov	[esp+118h+var_118], 0Ah
		call	fputc
		mov	[esp+118h+var_10C], ebx
		mov	eax, 42h
		mov	[esp+118h+var_110], eax
		mov	eax, 1
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], offset aYouShouldHaveR ; "You should have received a copy of the "...
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	eax, 3Ch
		mov	[esp+118h+var_110], eax
		mov	eax, 1
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], offset aAlongWithThisP ; "along with this program; if not, write "...
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	eax, 4Ch
		mov	[esp+118h+var_110], eax
		mov	eax, 1
		mov	[esp+118h+var_114], eax
		mov	[esp+118h+var_118], offset aFoundationInc_ ; "Foundation, Inc.,	59 Temple Place	- Sui"...
		call	fwrite
		mov	[esp+118h+var_114], ebx
		mov	[esp+118h+var_118], 0Ah
		call	fputc
		mov	[esp+118h+var_10C], ebx
		mov	ebx, 1
		mov	[esp+118h+var_110], esi
		mov	[esp+118h+var_114], ebx
		mov	[esp+118h+var_118], offset aSeeTheCopyingF ; "See the COPYING file for license inform"...
		call	fwrite

loc_40154A:				; CODE XREF: sub_401250+47Bj
		mov	[esp+118h+var_118], edi
		call	poptFreeContext
		mov	eax, ds:dword_404010
		mov	[esp+118h+var_118], eax
		call	free
		mov	eax, [ebp+var_EC]
		lea	esp, [ebp+var_C]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_401570:				; CODE XREF: sub_401250+109j
		cmp	eax, 76h
		jnz	loc_401340
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	edx, ds:dword_404010
		call	sub_401050
		mov	[esp+118h+var_118], edi
		call	poptFreeContext
		mov	eax, ds:dword_404010
		mov	[esp+118h+var_118], eax
		call	free
		mov	eax, [ebp+var_EC]
		lea	esp, [ebp+var_C]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4015AF:				; CODE XREF: sub_401250+FAj
		cmp	eax, 0FFFFFFFFh
		jl	loc_4016EA
		mov	[esp+118h+var_118], edi
		call	poptGetArgs
		test	eax, eax
		mov	esi, eax
		jz	loc_401742

loc_4015CA:				; CODE XREF: sub_401250+3C1j
					; sub_401250+495j
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_40162D
		mov	eax, offset aRb	; "rb"
		mov	[esp+118h+var_114], eax
		mov	eax, [esi]
		mov	[esp+118h+var_118], eax
		call	_fopen64
		mov	ebx, eax
		mov	eax, [esi]
		mov	[esp+118h+var_118], offset aS ;	"%s:\n"
		mov	[esp+118h+var_114], eax
		call	printf
		test	ebx, ebx
		jz	loc_4016D0
		mov	eax, ebx
		add	esi, 4
		call	sub_401130
		mov	[esp+118h+var_118], ebx
		call	fclose
		jmp	short loc_4015CA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401613:				; CODE XREF: sub_401250+103j
		call	__getreent
		mov	eax, [eax+0Ch]
		xor	edx, edx
		mov	[esp+118h+var_110], edx
		mov	[esp+118h+var_118], edi
		mov	[esp+118h+var_114], eax
		call	poptPrintUsage

loc_40162D:				; CODE XREF: sub_401250+37Ej
					; sub_401250+4EDj ...
		mov	[esp+118h+var_118], edi
		call	poptFreeContext
		mov	eax, ds:dword_404010
		mov	[esp+118h+var_118], eax
		call	free
		mov	eax, [ebp+var_EC]
		lea	esp, [ebp+var_C]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401650:				; CODE XREF: sub_401250+112j
		call	__getreent
		mov	ebx, [eax+0Ch]
		mov	esi, 1
		mov	edx, ds:dword_404010
		mov	eax, ebx
		call	sub_401050
		mov	[esp+118h+var_114], ebx
		xor	eax, eax
		mov	[esp+118h+var_110], eax
		mov	[esp+118h+var_118], edi
		call	poptPrintHelp
		mov	[esp+118h+var_114], ebx
		mov	[esp+118h+var_118], 0Ah
		call	fputc
		mov	[esp+118h+var_10C], ebx
		mov	eax, 10h
		mov	[esp+118h+var_110], eax
		mov	[esp+118h+var_114], esi
		mov	[esp+118h+var_118], offset aOtherArguments ; "Other arguments\n"
		call	fwrite
		mov	[esp+118h+var_10C], ebx
		mov	ecx, 1
		mov	ebx, 3Fh
		mov	[esp+118h+var_110], ebx
		mov	[esp+118h+var_114], ecx
		mov	[esp+118h+var_118], offset aFiles___DumpEa ; "	[files...]	dump each file specif"...
		call	fwrite
		jmp	loc_40154A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4016D0:				; CODE XREF: sub_401250+3A9j
		mov	eax, [esi]
		add	esi, 4
		mov	[esp+118h+var_118], offset aCanTOpenS ;	"*** Can't open %s!!\n"
		mov	[esp+118h+var_114], eax
		call	printf
		jmp	loc_4015CA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4016EA:				; CODE XREF: sub_401250+362j
		mov	[esp+118h+var_118], eax
		call	poptStrerror
		mov	[esp+118h+var_118], edi
		mov	ecx, 1
		mov	esi, eax
		mov	[esp+118h+var_114], ecx
		call	poptBadOption
		mov	ebx, eax
		call	__getreent
		mov	[esp+118h+var_108], esi
		mov	[esp+118h+var_10C], ebx
		mov	edx, ds:dword_404010
		mov	[esp+118h+var_110], edx
		mov	edx, offset aSBadArgumentSS ; "%s: bad argument	%s: %s\n"
		mov	[esp+118h+var_114], edx
		mov	eax, [eax+0Ch]
		mov	[esp+118h+var_118], eax
		call	fprintf
		mov	eax, 2
		mov	[ebp+var_EC], eax
		jmp	loc_40162D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401742:				; CODE XREF: sub_401250+374j
		call	__getreent
		mov	eax, [eax+4]
		call	sub_401130
		jmp	loc_40162D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401754:				; CODE XREF: sub_401250+A9j
		call	__getreent
		mov	edx, [esi]
		mov	[esp+118h+var_110], edx
		mov	edx, offset aSMemoryAllocat ; "%s: memory allocation error\n"
		mov	[esp+118h+var_114], edx
		mov	eax, [eax+0Ch]
		mov	[esp+118h+var_118], eax
		call	fprintf
		mov	[esp+118h+var_118], 1
		call	exit
		nop
sub_401250	endp

; [00000006 BYTES: COLLAPSED FUNCTION poptPrintHelp. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION poptPrintUsage. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION poptFreeContext. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION poptGetArgs. PRESS KEYPAD	"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION poptStrerror. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION poptBadOption. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION poptGetNextOpt. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION poptSetOtherOptionHelp. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION poptGetContext. PRESS KEYPAD "+" TO EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_401810	proc near		; CODE XREF: sub_401250+17p
		push	ecx
		mov	ecx, esp
		add	ecx, 8

loc_401816:				; CODE XREF: sub_401810+1Bj
		cmp	eax, 1000h
		jb	short loc_40182D
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		jmp	short loc_401816
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40182D:				; CODE XREF: sub_401810+Bj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		jmp	eax
sub_401810	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401840	proc near		; CODE XREF: start+3Ap

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_C2		= dword	ptr -0C2h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_4], esi
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_8], ebx
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	sub_401980
		sub	esp, 8
		test	eax, eax
		jz	short loc_401871
		mov	[esp+18h+var_18], 0

loc_40186B:				; CODE XREF: sub_401840+56j
		call	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)

loc_401871:				; CODE XREF: sub_401840+22j
		sub	esp, 0C0h
		lea	ebx, [esp+0D8h+var_C2+1]
		and	ebx, 0FFFFFFF0h
		mov	dword ptr [ebx], 0
		mov	[esp+0D8h+var_D4], ebx
		mov	[esp+0D8h+var_D8], esi
		call	sub_401980
		sub	esp, 8
		mov	[esp+0D8h+var_D8], ebx
		jmp	short loc_40186B
sub_401840	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fputc. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION memcpy. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fwrite. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION puts. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION getc. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION free. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fclose. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _fopen64.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION exit. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __getreent. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fprintf. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strdup. PRESS KEYPAD "+" TO EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401980	proc near		; CODE XREF: sub_401840+18p
					; sub_401840+4Bp

var_18		= dword	ptr -18h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h	; lpModuleName
		mov	ebx, [ebp+arg_4]
		mov	esi, [ebp+arg_0]
		test	ebx, ebx
		jz	loc_401A6A
		mov	dword ptr [ebx+4], 0A8h
		xor	eax, eax
		mov	ecx, 96h
		mov	dword ptr [ebx+8], 3EDh
		mov	dword ptr [ebx+0Ch], 13h
		mov	[ebx+80h], eax
		mov	[ebx+84h], ecx
		mov	dword ptr [ebx+2Ch], offset dword_401BE0
		mov	dword ptr [ebx+30h], offset dword_401BE8
		mov	dword ptr [ebx+14h], offset unk_404084
		mov	eax, ds:_impure_ptr
		mov	[ebx+10h], eax

loc_4019DB:				; CODE XREF: sub_401980+14Bj
		mov	dword ptr [ebx+78h], 0
		mov	eax, [ebp+0]
		mov	[ebx+28h], esi
		mov	dword ptr [ebx+48h], offset sub_401BB0
		mov	dword ptr [ebx+4Ch], offset sub_401BA0
		mov	dword ptr [ebx+50h], offset sub_401B90
		mov	dword ptr [ebx+54h], offset sub_401B80
		mov	dword ptr [ebx+24h], offset unk_404080
		mov	[ebx], eax
		mov	dword ptr [ebx+18h], offset loc_401B70
		mov	dword ptr [ebx+1Ch], offset free
		mov	dword ptr [ebx+20h], offset loc_401B60
		mov	dword ptr [ebx+44h], offset loc_401B50
		mov	[esp+18h+var_18], 0
		call	GetModuleHandleA
		mov	[ebx+7Ch], eax
		sub	esp, 4
		mov	dword ptr [ebx+34h], offset off_402000
		mov	dword ptr [ebx+38h], offset unk_402090
		mov	dword ptr [ebx+3Ch], offset dword_404000
		mov	dword ptr [ebx+40h], 4040B0h
		call	sub_401B20
		mov	eax, 1

loc_401A61:				; CODE XREF: sub_401980+FDj
		lea	esp, [ebp+var_8]
		pop	ebx
		pop	esi
		pop	ebp
		retn	8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401A6A:				; CODE XREF: sub_401980+10j
		mov	[esp+18h+var_18], 8
		call	cygwin_internal
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 0FFFFFFFFh
		jz	short loc_401A61
		mov	dword ptr [edx+4], 0A8h
		mov	ebx, edx
		mov	eax, 96h
		mov	dword ptr [edx+8], 3EDh
		mov	dword ptr [edx+0Ch], 13h
		xor	edx, edx
		mov	[ebx+80h], edx
		mov	edx, [ebx+0A4h]
		mov	[ebx+84h], eax
		mov	dword ptr [ebx+2Ch], offset dword_401BE0
		mov	dword ptr [ebx+30h], offset dword_401BE8
		mov	dword ptr [ebx+14h], offset unk_404084
		mov	eax, ds:_impure_ptr
		mov	[eax], edx
		jmp	loc_4019DB
sub_401980	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		jmp	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:__imp__fopen64
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401AF0	proc near		; CODE XREF: sub_401B20+1Fp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	ecx, [ebp+arg_0]
		push	esi
		mov	esi, [ebp+arg_8]
		push	ebx
		mov	ebx, [ebp+arg_4]
		jmp	short loc_401B0C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B00:				; CODE XREF: sub_401AF0+1Ej
		mov	edx, [ecx+4]
		mov	eax, [ecx]
		add	ecx, 8
		add	edx, esi
		add	[edx], eax

loc_401B0C:				; CODE XREF: sub_401AF0+Ej
		cmp	ecx, ebx
		jb	short loc_401B00
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_401AF0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401B20	proc near		; CODE XREF: sub_401980+D7p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	edx, 400000h
		mov	ebp, esp
		mov	eax, offset unk_403530
		sub	esp, 0Ch
		mov	[esp+0Ch+var_4], edx
		mov	[esp+0Ch+var_8], eax
		mov	[esp+0Ch+var_C], offset	unk_403530
		call	sub_401AF0
		leave
		retn
sub_401B20	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401B50:				; DATA XREF: sub_401980+A2o
		jmp	ds:calloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401B60:				; DATA XREF: sub_401980+9Bo
		jmp	ds:realloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401B70:				; DATA XREF: sub_401980+8Do
		jmp	ds:malloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401B80	proc near		; DATA XREF: sub_401980+7Do
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401B80	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401B90	proc near		; DATA XREF: sub_401980+76o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401B90	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401BA0	proc near		; DATA XREF: sub_401980+6Fo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401BA0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401BB0	proc near		; DATA XREF: sub_401980+68o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401BB0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
dword_401BE0	dd 0FFFFFFFFh, 0	; DATA XREF: sub_401980+3Eo
					; sub_401980+12Fo
dword_401BE8	dd 0FFFFFFFFh, 5 dup(0)	; DATA XREF: sub_401980+45o
					; sub_401980+136o
_text		ends

; Section 2. (virtual address 00002000)
; Virtual size			: 00000090 (	144.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00001000
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 402000h
off_402000	dd offset aHelp		; DATA XREF: sub_401250+3Ao
					; sub_401980+BBo
					; "help"
		db  3Fh	; ?
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Fh	; ?
		db    0	;
		db    0	;
		db    0	;
		db 0F4h	; ô
		db  30h	; 0
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Bh	;
		db  31h	; 1
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  75h	; u
		db    0	;
		db    0	;
		db    0	;
		db  11h	;
		db  31h	; 1
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Dh	; -
		db  31h	; 1
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  76h	; v
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  31h	; 1
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  51h	; Q
		db  31h	; 1
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  6Ch	; l
		db    0	;
		db    0	;
		db    0	;
		db  59h	; Y
		db  31h	; 1
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
unk_402090	db    0	;		; DATA XREF: sub_401980+C2o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_data		ends

; Section 3. (virtual address 00003000)
; Virtual size			: 00000530 (   1328.)
; Section size in file		: 00000600 (   1536.)
; Offset to raw	data for section: 00001200
; Flags	40000040: Data Readable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 403000h
a0_1_1		db '0.1.1',0            ; DATA XREF: sub_401050+12o
aSVersionS	db '%s version %s',0Ah,0 ; DATA XREF: sub_401050+1o
		align 4
aPrintsAHexdump	db '  Prints a hexdump of stdin or specified files to stdout',0Ah
					; DATA XREF: sub_401050+3Do
		db 0Ah,0
byte_403053	db 30h			; DATA XREF: sub_4010A0+3Fr
					; sub_4010A0+5Er
a123456789abcde	db '123456789abcdef',0
unk_403064	db    0	;		; DATA XREF: sub_401130+F2o
		db    0	;
		db    0	;
		db    0	;
aAddr0123456789	db '  Addr     0 1  2 3  4 5  6 7  8 9  A B  C D  E F 0 2 4 6 8 '
					; DATA XREF: sub_401130+FEo
		db 'A C E ',0
		align 4
asc_4030AC	db '--------  ---- ---- ---- ---- ---- ---- ---- ---- ----------'
					; DATA XREF: sub_401130+10Ao
		db '------',0
aHelp		db 'help',0             ; DATA XREF: .data:00402000o
aShowThisHelpMe	db 'Show this help message',0
aUsage		db 'usage',0
aDisplayBriefUs	db 'Display brief usage message',0
aVersion	db 'version',0
aDisplayVersion	db 'Display version information',0
aLicense	db 'license',0
aDisplayLicensi	db 'Display licensing information',0
aHelpOptions	db 'Help options',0     ; DATA XREF: sub_401250+60o
aOption___Files	db '[OPTION...] [files...]',0 ; DATA XREF: sub_401250+D8o
		align 4
aThisProgramIsF	db 'This program is free software; you can redistribute it and/o'
					; DATA XREF: sub_401250+14Do
		db 'r',0Ah,0
		align 4
aModifyItUnderT	db 'modify it under the terms of the GNU General Public License',0Ah
					; DATA XREF: sub_401250+16Fo
		db 0
		align 4
aAsPublishedByT	db 'as published by the Free Software Foundation; either version'
					; DATA XREF: sub_401250+191o
		db ' 2',0Ah,0
aOfTheLicenseOr	db 'of the License, or (at your option) any later version.',0Ah,0
					; DATA XREF: sub_401250+1B3o
aThisProgramIsD	db 'This program is distributed in the hope that it will be usef'
					; DATA XREF: sub_401250+1E5o
		db 'ul,',0Ah,0
		align 4
aButWithoutAnyW	db 'but WITHOUT ANY WARRANTY; without even the implied warranty '
					; DATA XREF: sub_401250+207o
		db 'of',0Ah,0
aMerchantabilit	db 'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See th'
					; DATA XREF: sub_401250+229o
		db 'e',0Ah,0
		align 4
aGnuGeneralPubl	db 'GNU General Public License for more details.',0Ah,0
					; DATA XREF: sub_401250+24Bo
		align 4
aYouShouldHaveR	db 'You should have received a copy of the GNU General Public Li'
					; DATA XREF: sub_401250+27Do
		db 'cense',0Ah,0
		align 4
aAlongWithThisP	db 'along with this program; if not, write to the Free Software',0Ah
					; DATA XREF: sub_401250+29Fo
		db 0
		align 4
aFoundationInc_	db 'Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  0'
					; DATA XREF: sub_401250+2C1o
		db '2111-1307, USA.',0Ah,0
		align 4
aSeeTheCopyingF	db 'See the COPYING file for license information.',0Ah,0
					; DATA XREF: sub_401250+2EEo
aRb		db 'rb',0               ; DATA XREF: sub_401250+380o
aS		db '%s:',0Ah,0          ; DATA XREF: sub_401250+397o
aOtherArguments	db 'Other arguments',0Ah,0 ; DATA XREF: sub_401250+44Do
aFiles___DumpEa	db '  [files...]      dump each file specified; if none, use std'
					; DATA XREF: sub_401250+46Fo
		db 'in',0Ah,0
aCanTOpenS	db '*** Can',27h,'t open %s!!',0Ah,0 ; DATA XREF: sub_401250+485o
aSBadArgumentSS	db '%s: bad argument %s: %s',0Ah,0 ; DATA XREF: sub_401250+4CEo
aSMemoryAllocat	db '%s: memory allocation error',0Ah,0 ; DATA XREF: sub_401250+50Fo
		align 4
unk_403530	db    0	;		; DATA XREF: sub_401B20+8o
					; sub_401B20+18o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_rdata		ends

; Section 4. (virtual address 00004000)
; Virtual size			: 000000B0 (	176.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0000080: Bss Readable Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 404000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_404000	dd ?			; DATA XREF: start+9r sub_401980+C9o
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404010	dd ?			; DATA XREF: sub_401250+A2w
					; sub_401250+12Ar ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404020	dd ?			; DATA XREF: sub_4010A0+2Fr
					; sub_401130+20w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_404052	db ?			; DATA XREF: sub_401130+92w
					; sub_401130+AAw
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404070	dd ?			; DATA XREF: sub_401130+10w
					; sub_401130+54r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
unk_404080	db    ?	;		; DATA XREF: sub_401980+84o
		db    ?	;
		db    ?	;
		db    ?	;
unk_404084	db    ?	;		; DATA XREF: sub_401980+4Co
					; sub_401980+13Do
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
_bss		ends

;
; Imports from cygwin1
;
; Section 5. (virtual address 00005000)
; Virtual size			: 00000400 (   1024.)
; Section size in file		: 00000400 (   1024.)
; Offset to raw	data for section: 00001800
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Externs
; _idata
		extrn __imp___getreent:dword ; DATA XREF: __getreentr
		extrn __imp___main:dword ; DATA	XREF: __mainr
		extrn _ctype_:dword	; DATA XREF: sub_401130+99r
		extrn __imp__fopen64:dword ; DATA XREF:	_fopen64r
					; .text:00401AE0r
		extrn _impure_ptr:dword	; DATA XREF: sub_401980+53r
					; sub_401980+144r
; void *__cdecl	calloc(size_t,size_t)
		extrn calloc:dword	; DATA XREF: .text:00401B50r
		extrn __imp_cygwin_internal:dword ; DATA XREF: cygwin_internalr
; dll_crt0(per_process *)
		extrn dll_crt0__FP11per_process:dword ;	DATA XREF: sub_401840+2Br
					; .text:00401AD0r
; void __cdecl _imp_exit(int)
		extrn __imp_exit:dword	; DATA XREF: exitr
		extrn __imp_fclose:dword ; DATA	XREF: fcloser
		extrn __imp_fprintf:dword ; DATA XREF: fprintfr
		extrn __imp_fputc:dword	; DATA XREF: fputcr
; void __cdecl _imp_free(void *)
		extrn __imp_free:dword	; DATA XREF: freer
		extrn __imp_fwrite:dword ; DATA	XREF: fwriter
		extrn __imp_getc:dword	; DATA XREF: getcr
; void *__cdecl	malloc(size_t)
		extrn malloc:dword	; DATA XREF: .text:00401B70r
; void *__cdecl	_imp_memcpy(void *,const void *,size_t)
		extrn __imp_memcpy:dword ; DATA	XREF: memcpyr
		extrn __imp_printf:dword ; DATA	XREF: printfr
		extrn __imp_puts:dword	; DATA XREF: putsr
; void *__cdecl	realloc(void *,size_t)
		extrn realloc:dword	; DATA XREF: .text:00401B60r
; char *__cdecl	_imp_strdup(const char *)
		extrn __imp_strdup:dword ; DATA	XREF: strdupr


;
; Imports from cygpopt-0
;
		extrn __imp_poptBadOption:dword	; DATA XREF: poptBadOptionr
		extrn __imp_poptFreeContext:dword ; DATA XREF: poptFreeContextr
		extrn __imp_poptGetArgs:dword ;	DATA XREF: poptGetArgsr
		extrn __imp_poptGetContext:dword ; DATA	XREF: poptGetContextr
		extrn __imp_poptGetNextOpt:dword ; DATA	XREF: poptGetNextOptr
		extrn __imp_poptPrintHelp:dword	; DATA XREF: poptPrintHelpr
		extrn __imp_poptPrintUsage:dword ; DATA	XREF: poptPrintUsager
		extrn __imp_poptSetOtherOptionHelp:dword
					; DATA XREF: poptSetOtherOptionHelpr
		extrn __imp_poptStrerror:dword ; DATA XREF: poptStrerrorr


;
; Imports from KERNEL32
;
; HMODULE __stdcall __imp_GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp_GetModuleHandleA:dword ; DATA XREF:	GetModuleHandleAr



		end start
