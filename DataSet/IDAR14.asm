

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2003 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; º Licensed to: Mark Stamp, San Jose State University,	1 user,	academic, 11/2003 º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	C:\Documents and Settings\Fiona\My Documents\CS	298_Metamorphic	virus\HMM\Cygwin\fitstopnm.exe
; Format      :	Portable executable for	IBM PC (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00001468 (   5224.)
; Section size in file		: 00001600 (   5632.)
; Offset to raw	data for section: 00000400
; Flags	60000020: Text Executable Readable
; Alignment	: 16 bytes ?


unicode		macro page,string,zero
		irpc c,<string>
		db '&c', page
		endm
		ifnb <zero>
		dw zero
		endif
endm

		model flat

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 401000h
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

		public start
start		proc near

var_8		= dword	ptr -8
var_2		= word ptr -2

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		and	esp, 0FFFFFFF0h
		mov	eax, ds:dword_404000
		test	eax, eax
		jz	short loc_401013
		int	3		; Trap to Debugger

loc_401013:				; CODE XREF: start+10j
		fnstcw	[ebp+var_2]
		movzx	eax, [ebp+var_2]
		and	eax, 0FFFFF0C0h
		mov	[ebp+var_2], ax
		movzx	eax, [ebp+var_2]
		or	eax, 33Fh
		mov	[ebp+var_2], ax
		fldcw	[ebp+var_2]
		mov	[esp+8+var_8], offset sub_401250
		call	sub_402090
		leave
		retn
start		endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401050	proc near		; CODE XREF: sub_401250+538p
					; sub_401250+BCBp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_18		= qword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[ebp+var_4], edi
		cmp	edx, 8
		mov	edi, eax
		mov	[ebp+var_C], ebx
		mov	[ebp+var_8], esi
		jz	short loc_4010D2
		jle	short loc_401093
		cmp	edx, 10h
		jz	loc_4011BB
		cmp	edx, 20h
		jz	loc_401161

loc_40107A:				; CODE XREF: sub_401050+4Bj
		mov	[esp+28h+var_28], offset aStrangeBitpixI ; "Strange bitpix in read_value"
		call	pm_error
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401093:				; CODE XREF: sub_401050+16j
		cmp	edx, 0FFFFFFC0h
		jz	short loc_401100
		cmp	edx, 0FFFFFFE0h
		jnz	short loc_40107A

loc_40109D:				; CODE XREF: sub_401050+166j
		xor	esi, esi
		nop

loc_4010A0:				; CODE XREF: sub_401050+6Bj
		mov	[esp+28h+var_28], edi
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jz	loc_401150

loc_4010B3:				; CODE XREF: sub_401050+10Cj
		mov	byte ptr [ebp+esi+var_18], bl
		inc	esi
		cmp	esi, 3
		jle	short loc_4010A0
		fld	dword ptr [ebp+var_18]
		mov	edi, [ebp+arg_0]
		fstp	qword ptr [edi]
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4010D2:				; CODE XREF: sub_401050+14j
		mov	[esp+28h+var_28], eax
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jz	loc_401209

loc_4010E5:				; CODE XREF: sub_401050+1C5j
		push	ebx

loc_4010E6:				; CODE XREF: sub_401050+1A3j
					; sub_401050+1DCj
		fild	[esp+2Ch+var_2C]
		add	esp, 4
		mov	esi, [ebp+arg_0]
		fstp	qword ptr [esi]

loc_4010F1:				; CODE XREF: sub_401050+F8j
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_401100:				; CODE XREF: sub_401050+46j
		xor	esi, esi
		jmp	short loc_40110E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401104:				; CODE XREF: sub_401050+CBj
		mov	byte ptr [ebp+esi+var_18], bl
		inc	esi
		cmp	esi, 7
		jg	short loc_401140

loc_40110E:				; CODE XREF: sub_401050+B2j
					; sub_401050+E1j
		mov	[esp+28h+var_28], edi
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jnz	short loc_401104
		mov	[esp+28h+var_28], offset aEofReadError ; "EOF /	read error"
		call	pm_error
		mov	byte ptr [ebp+esi+var_18], bl
		inc	esi
		cmp	esi, 7
		jle	short loc_40110E
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401140:				; CODE XREF: sub_401050+BCj
		fld	[ebp+var_18]
		mov	esi, [ebp+arg_0]
		fstp	qword ptr [esi]
		jmp	short loc_4010F1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_401150:				; CODE XREF: sub_401050+5Dj
		mov	[esp+28h+var_28], offset aEofReadError ; "EOF /	read error"
		call	pm_error
		jmp	loc_4010B3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401161:				; CODE XREF: sub_401050+24j
		xor	esi, esi
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401170:				; CODE XREF: sub_401050+137j
		mov	[esp+28h+var_28], edi
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jz	short loc_4011F8

loc_40117F:				; CODE XREF: sub_401050+1B4j
		mov	byte ptr [ebp+esi+var_18], bl
		inc	esi
		cmp	esi, 3
		jle	short loc_401170
		movzx	edx, byte ptr [ebp+var_18]
		movzx	eax, byte ptr [ebp+var_18+1]
		movzx	ebx, byte ptr [ebp+var_18+2]
		movzx	ecx, byte ptr [ebp+var_18+3]
		mov	esi, edx
		shl	esi, 18h
		shl	eax, 10h
		or	esi, eax
		shl	ebx, 8
		or	esi, ebx
		or	esi, ecx
		push	esi
		mov	edx, [ebp+arg_0]
		fild	[esp+2Ch+var_2C]
		add	esp, 4
		fstp	qword ptr [edx]
		jmp	loc_40109D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4011BB:				; CODE XREF: sub_401050+1Bj
		mov	[esp+28h+var_28], eax
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jz	short loc_40123F

loc_4011CA:				; CODE XREF: sub_401050+1FBj
		mov	byte ptr [ebp+var_18], bl
		mov	[esp+28h+var_28], edi
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jz	short loc_401231

loc_4011DC:				; CODE XREF: sub_401050+1EDj
		movzx	eax, byte ptr [ebp+var_18]
		mov	byte ptr [ebp+var_18+1], bl
		test	al, al
		js	short loc_40121A
		movzx	edx, al
		movzx	ebx, bl
		shl	edx, 8
		or	edx, ebx
		push	edx
		jmp	loc_4010E6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4011F8:				; CODE XREF: sub_401050+12Dj
		mov	[esp+28h+var_28], offset aEofReadError ; "EOF /	read error"
		call	pm_error
		jmp	loc_40117F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401209:				; CODE XREF: sub_401050+8Fj
		mov	[esp+28h+var_28], offset aEofReadError ; "EOF /	read error"
		call	pm_error
		jmp	loc_4010E5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40121A:				; CODE XREF: sub_401050+195j
		movzx	edx, al
		shl	edx, 8
		movzx	eax, bl
		or	edx, eax
		or	edx, 0FFFF0000h
		push	edx
		jmp	loc_4010E6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401231:				; CODE XREF: sub_401050+18Aj
		mov	[esp+28h+var_28], offset aEofReadError ; "EOF /	read error"
		call	pm_error
		jmp	short loc_4011DC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40123F:				; CODE XREF: sub_401050+178j
		mov	[esp+28h+var_28], offset aEofReadError ; "EOF /	read error"
		call	pm_error
		jmp	loc_4011CA
sub_401050	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401250	proc near		; DATA XREF: start+33o

var_240		= qword	ptr -240h
var_238		= dword	ptr -238h
var_234		= qword	ptr -234h
var_22C		= qword	ptr -22Ch
var_224		= dword	ptr -224h
var_220		= dword	ptr -220h
var_214		= dword	ptr -214h
var_210		= qword	ptr -210h
var_208		= qword	ptr -208h
var_1F8		= qword	ptr -1F8h
var_1DC		= dword	ptr -1DCh
var_1D8		= dword	ptr -1D8h
var_1D4		= dword	ptr -1D4h
var_1D0		= qword	ptr -1D0h
var_1C4		= dword	ptr -1C4h
var_1C0		= qword	ptr -1C0h
var_1B8		= qword	ptr -1B8h
var_1B0		= qword	ptr -1B0h
var_1A8		= qword	ptr -1A8h
var_19C		= dword	ptr -19Ch
var_198		= dword	ptr -198h
var_194		= dword	ptr -194h
var_190		= dword	ptr -190h
var_18C		= dword	ptr -18Ch
var_188		= dword	ptr -188h
var_184		= dword	ptr -184h
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_170		= qword	ptr -170h
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_160		= qword	ptr -160h
var_154		= word ptr -154h
var_152		= word ptr -152h
var_150		= qword	ptr -150h
var_148		= qword	ptr -148h
var_13C		= dword	ptr -13Ch
var_138		= qword	ptr -138h
var_130		= qword	ptr -130h
var_128		= qword	ptr -128h
var_120		= qword	ptr -120h
var_111		= qword	ptr -111h
var_108		= qword	ptr -108h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F4		= dword	ptr -0F4h
var_E0		= qword	ptr -0E0h
var_D8		= qword	ptr -0D8h
var_D0		= qword	ptr -0D0h
var_C8		= qword	ptr -0C8h
var_B8		= dword	ptr -0B8h
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= qword	ptr -40h
var_38		= qword	ptr -38h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	eax, 10h
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 22Ch
		mov	esi, [ebp+arg_4]
		and	esp, 0FFFFFFF0h
		call	sub_402060
		call	__main
		mov	dword ptr [esp+238h+var_234], esi
		xor	edx, edx
		xor	edi, edi
		mov	[ebp+var_184], edi
		xor	ebx, ebx
		xor	ecx, ecx
		mov	[ebp+var_188], ebx
		lea	eax, [ebp+arg_0]
		mov	ebx, 1
		mov	[ebp+var_190], edx
		xor	edi, edi
		mov	[ebp+var_18C], ecx
		mov	[esp+238h+var_238], eax
		call	pnm_init
		mov	[ebp+var_FC], edi
		mov	edx, [ebp+arg_0]
		cmp	ebx, edx
		jge	loc_4018B1
		mov	eax, [esi+4]
		cmp	byte ptr [eax],	2Dh
		jz	loc_40182B

loc_4012C4:				; CODE XREF: sub_401250+5DFj
					; sub_401250+646j
		cmp	ebx, edx
		jge	loc_4018B1
		mov	esi, [esi+ebx*4]
		inc	ebx

loc_4012D0:				; CODE XREF: sub_401250+666j
		cmp	ebx, edx
		jz	short loc_4012E0
		mov	[esp+238h+var_238], offset aImageNScanmaxP ; "[-image N] [-scanmax] [-printmax]	[-min"...
		call	pm_usage

loc_4012E0:				; CODE XREF: sub_401250+82j
		mov	[esp+238h+var_238], esi
		call	pm_openr_seekable
		mov	[ebp+var_164], eax
		fldz
		xor	esi, esi
		mov	[ebp+var_198], esi
		lea	ebx, [ebp+var_B8]
		fstp	[ebp+var_30]
		fld1
		mov	[ebp+var_58], 0
		fstp	[ebp+var_28]
		fld	ds:dbl_4032C0
		fstp	[ebp+var_40]
		fld	ds:dbl_4032C8
		fstp	[ebp+var_38]

loc_40131F:				; CODE XREF: sub_401250+2C0j
		mov	eax, 23h
		mov	[ebp+var_214], eax
		jmp	loc_401490
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_401330:				; CODE XREF: sub_401250+288j
		mov	[esp+238h+var_238], ebx
		lea	esi, [ebp+var_58]
		mov	edi, offset aBitpixD ; "BITPIX = %d"
		mov	dword ptr [esp+238h+var_234], edi
		add	esi, 4
		mov	dword ptr [esp+238h+var_234+4],	esi
		call	sscanf
		dec	eax
		jz	loc_401500
		mov	[esp+238h+var_238], ebx
		lea	edx, [ebp+var_58]
		mov	eax, offset aNaxisD ; "NAXIS = %d"
		mov	dword ptr [esp+238h+var_234], eax
		add	edx, 8
		mov	dword ptr [esp+238h+var_234+4],	edx
		call	sscanf
		dec	eax
		jz	loc_401500
		mov	[esp+238h+var_238], ebx
		lea	edi, [ebp+var_58]
		mov	ecx, offset aNaxis1D ; "NAXIS1 = %d"
		mov	dword ptr [esp+238h+var_234], ecx
		add	edi, 0Ch
		mov	dword ptr [esp+238h+var_234+4],	edi
		call	sscanf
		dec	eax
		jz	loc_401500
		mov	[esp+238h+var_238], ebx
		lea	eax, [ebp+var_58]
		mov	esi, offset aNaxis2D ; "NAXIS2 = %d"
		mov	dword ptr [esp+238h+var_234], esi
		add	eax, 10h
		mov	dword ptr [esp+238h+var_234+4],	eax
		call	sscanf
		dec	eax
		jz	loc_401500
		mov	[esp+238h+var_238], ebx
		lea	ecx, [ebp+var_58]
		mov	edx, offset aNaxis3D ; "NAXIS3 = %d"
		mov	dword ptr [esp+238h+var_234], edx
		add	ecx, 14h
		mov	dword ptr [esp+238h+var_234+4],	ecx
		call	sscanf
		dec	eax
		jz	loc_401500
		mov	[esp+238h+var_238], ebx
		lea	esi, [ebp+var_58]
		mov	edi, offset aDataminLf ; "DATAMIN = %lf"
		mov	dword ptr [esp+238h+var_234], edi
		add	esi, 18h
		mov	dword ptr [esp+238h+var_234+4],	esi
		call	sscanf
		dec	eax
		jz	loc_401500
		mov	[esp+238h+var_238], ebx
		lea	edx, [ebp+var_58]
		mov	eax, offset aDatamaxLf ; "DATAMAX = %lf"
		mov	dword ptr [esp+238h+var_234], eax
		add	edx, 20h
		mov	dword ptr [esp+238h+var_234+4],	edx
		call	sscanf
		dec	eax
		jz	loc_401500
		mov	[esp+238h+var_238], ebx
		lea	edi, [ebp+var_58]
		mov	ecx, offset aBzeroLf ; "BZERO =	%lf"
		mov	dword ptr [esp+238h+var_234], ecx
		add	edi, 28h
		mov	dword ptr [esp+238h+var_234+4],	edi
		call	sscanf
		dec	eax
		jz	loc_401500
		mov	[esp+238h+var_238], ebx
		lea	eax, [ebp+var_58]
		mov	esi, offset aBscaleLf ;	"BSCALE	= %lf"
		mov	dword ptr [esp+238h+var_234], esi
		add	eax, 30h
		mov	dword ptr [esp+238h+var_234+4],	eax
		call	sscanf
		dec	eax
		jz	loc_401500
		cld
		mov	edx, offset aEnd ; "END	"
		mov	ecx, 4
		mov	esi, ebx
		mov	edi, edx
		repe cmpsb
		jnz	loc_401500
		dec	[ebp+var_214]
		mov	eax, 1
		mov	[ebp+var_198], eax
		js	loc_401508

loc_401490:				; CODE XREF: sub_401250+DAj
					; sub_401250+2B6j
		mov	[esp+238h+var_238], ebx
		mov	edi, [ebp+var_164]
		mov	ecx, 50h
		mov	dword ptr [esp+238h+var_234+4],	ecx
		mov	edx, 1
		mov	dword ptr [esp+238h+var_234], edx
		mov	dword ptr [esp+238h+var_22C], edi
		call	fread
		test	eax, eax
		jz	loc_4018A0

loc_4014BC:				; CODE XREF: sub_401250+65Cj
		mov	[esp+238h+var_238], ebx
		lea	eax, [ebp+var_111]
		mov	esi, offset aSimpleC ; "SIMPLE = %c"
		mov	dword ptr [esp+238h+var_234+4],	eax
		mov	dword ptr [esp+238h+var_234], esi
		call	sscanf
		dec	eax
		jnz	loc_401330
		movzx	ecx, byte ptr [ebp+var_111]
		cmp	cl, 54h
		setz	dl
		cmp	cl, 74h
		setz	al
		or	eax, edx
		test	al, 1
		jz	short loc_401500
		mov	[ebp+var_58], 1
		mov	esi, esi

loc_401500:				; CODE XREF: sub_401250+FCj
					; sub_401250+11Ej ...
		dec	[ebp+var_214]
		jns	short loc_401490

loc_401508:				; CODE XREF: sub_401250+23Aj
		mov	edi, [ebp+var_198]
		test	edi, edi
		jz	loc_40131F
		mov	ebx, [ebp+var_58]
		test	ebx, ebx
		jz	loc_401B11

loc_401521:				; CODE XREF: sub_401250+8CDj
		mov	edx, [ebp+var_50]
		lea	esi, [edx-2]
		cmp	esi, 1
		ja	loc_401AF9

loc_401530:				; CODE XREF: sub_401250+8BCj
		mov	eax, [ebp+var_4C]
		cmp	edx, 2
		mov	ecx, [ebp+var_48]
		mov	[ebp+var_178], eax
		mov	[ebp+var_174], ecx
		jz	loc_401ADE
		mov	ebx, [ebp+var_44]
		mov	[ebp+var_17C], ebx

loc_401554:				; CODE XREF: sub_401250+8A4j
		mov	esi, [ebp+var_17C]
		cmp	[ebp+var_FC], esi
		jle	short loc_40158F
		cmp	[ebp+var_17C], 1
		mov	eax, offset aS	; "s"
		jg	short loc_401575
		mov	eax, 4030F2h

loc_401575:				; CODE XREF: sub_401250+31Ej
		mov	dword ptr [esp+238h+var_234+4],	eax
		mov	ecx, [ebp+var_17C]
		mov	[esp+238h+var_238], 4030F3h
		mov	dword ptr [esp+238h+var_234], ecx
		call	pm_error

loc_40158F:				; CODE XREF: sub_401250+310j
		cmp	[ebp+var_17C], 3
		setnz	al
		xor	edx, edx
		cmp	[ebp+var_17C], 1
		setnle	dl
		test	eax, edx
		jz	short loc_4015B7
		mov	edi, [ebp+var_FC]
		test	edi, edi
		jz	loc_401B8A

loc_4015B7:				; CODE XREF: sub_401250+357j
					; sub_401250+946j
		xor	ebx, ebx
		cmp	[ebp+var_17C], 3
		mov	[ebp+var_194], ebx
		jz	loc_401B22

loc_4015CC:				; CODE XREF: sub_401250+8DAj
					; sub_401250+8EBj
		cld
		mov	ecx, 0Eh
		mov	eax, [ebp+var_188]
		fld	ds:dbl_4032C0
		lea	ebx, [ebp+var_F8]
		mov	edi, ebx
		fld	ds:dbl_4032C8
		fxch	st(1)
		test	eax, eax
		lea	esi, [ebp+var_58]
		rep movsd
		fst	[ebp+var_1A8]
		fxch	st(1)
		fst	[ebp+var_1B0]
		mov	edx, [ebp+var_FC]
		fld	[ebp+var_111+1]
		fld	[ebp+var_108]
		mov	[ebp+var_19C], edx
		jz	loc_401ACC
		fxch	st(1)
		fstp	[ebp+var_1A8]

loc_401629:				; CODE XREF: sub_401250+87Ej
		mov	eax, [ebp+var_18C]
		test	eax, eax
		jz	loc_401AC5
		fstp	[ebp+var_1B0]

loc_40163D:				; CODE XREF: sub_401250+877j
		fld	[ebp+var_1A8]
		fcomp	st(2)
		fnstsw	ax
		sahf
		jnz	short loc_401656
		fld	[ebp+var_E0]
		fstp	[ebp+var_1A8]

loc_401656:				; CODE XREF: sub_401250+3F8j
		fld	[ebp+var_1B0]
		fcomp	st(1)
		fnstsw	ax
		sahf
		jnz	short loc_40166F
		fld	[ebp+var_D8]
		fstp	[ebp+var_1B0]

loc_40166F:				; CODE XREF: sub_401250+411j
		fld	[ebp+var_1A8]
		fcomp	st(2)
		fnstsw	ax
		fstp	st(1)
		sahf
		jz	loc_401B40
		fld	[ebp+var_1B0]
		fcompp	st(1), st
		fnstsw	ax
		sahf
		jnz	loc_4019A6

loc_401693:				; CODE XREF: sub_401250+8F2j
		fld	[ebp+var_C8]
		mov	esi, 4
		mov	edx, [ebp+var_164]
		fld	[ebp+var_D0]
		fxch	st(1)
		mov	dword ptr [esp+238h+var_234+4],	esi
		mov	edi, [ebp+var_F4]
		lea	ecx, [ebp+var_13C]
		fstp	[ebp+var_1B8]
		mov	dword ptr [esp+238h+var_234], ecx
		fstp	[ebp+var_1C0]
		mov	[esp+238h+var_238], edx
		call	pm_tell2
		mov	[esp+238h+var_238], offset aScanningFileFo ; "Scanning file for	scaling	parameters"
		call	pm_message
		cmp	edi, 20h
		jz	loc_401B6A
		ja	loc_401B47
		cmp	edi, 8
		jz	loc_401BE7
		cmp	edi, 10h
		jz	loc_401C50

loc_401701:				; CODE XREF: sub_401250+903j
		mov	dword ptr [esp+238h+var_234], edi
		mov	[esp+238h+var_238], offset aUnusualBitsPer ; "unusual bits per pixel (%u), can't read"...
		call	pm_error

loc_401711:				; CODE XREF: sub_401250+915j
		fld	[ebp+var_1D0]
		mov	ebx, 1
		mov	eax, [ebp+var_17C]
		mov	[ebp+var_1C4], ebx
		cmp	[ebp+var_1C4], eax
		fchs
		fld	[ebp+var_1D0]
		ja	loc_401905
		cmp	[ebp+var_174], 0
		jbe	loc_401827

loc_401749:				; CODE XREF: sub_401250+5D1j
		mov	ebx, [ebp+var_174]
		cmp	[ebp+var_178], 0
		jbe	loc_4017E8

loc_40175C:				; CODE XREF: sub_401250+592j
		mov	esi, [ebp+var_178]
		jmp	short loc_40176B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401764:				; CODE XREF: sub_401250+57Fj
		fstp	st(2)

loc_401766:				; CODE XREF: sub_401250+567j
		dec	esi
		jz	short loc_4017D6

loc_401769:				; CODE XREF: sub_401250+584j
		fxch	st(1)

loc_40176B:				; CODE XREF: sub_401250+512j
		fstp	[ebp+var_1F8]
		mov	eax, [ebp+var_164]
		lea	edx, [ebp+var_148]
		mov	[esp+238h+var_238], edx
		mov	edx, edi
		fstp	[ebp+var_208]
		call	sub_401050
		fld	[ebp+var_1F8]
		mov	eax, [ebp+var_19C]
		mov	ecx, [ebp+var_194]
		cmp	[ebp+var_1C4], eax
		fld	[ebp+var_208]
		setz	al
		test	ecx, ecx
		setnz	dl
		or	eax, edx
		test	al, 1
		jz	short loc_401766
		fld	[ebp+var_148]
		fcom	st(1)
		fnstsw	ax
		sahf
		jbe	short loc_4017CA
		fstp	st(1)
		fld	st

loc_4017CA:				; CODE XREF: sub_401250+574j
		fcom	st(2)
		fnstsw	ax
		sahf
		jb	short loc_401764
		fstp	st
		dec	esi
		jnz	short loc_401769

loc_4017D6:				; CODE XREF: sub_401250+517j
		dec	ebx
		jz	short loc_4017ED

loc_4017D9:				; CODE XREF: sub_401250+59Bj
		fxch	st(1)
		cmp	[ebp+var_178], 0
		ja	loc_40175C

loc_4017E8:				; CODE XREF: sub_401250+506j
		fxch	st(1)
		dec	ebx
		jnz	short loc_4017D9

loc_4017ED:				; CODE XREF: sub_401250+587j
					; sub_401250+5D9j
		fld	[ebp+var_1B8]
		fcomp	ds:dbl_4032E8
		fnstsw	ax
		sahf
		jnb	short loc_401800
		fxch	st(1)

loc_401800:				; CODE XREF: sub_401250+5ACj
		inc	[ebp+var_1C4]
		mov	eax, [ebp+var_17C]
		cmp	[ebp+var_1C4], eax
		ja	loc_401907
		fxch	st(1)
		cmp	[ebp+var_174], 0
		ja	loc_401749

loc_401827:				; CODE XREF: sub_401250+4F3j
		fxch	st(1)
		jmp	short loc_4017ED
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40182B:				; CODE XREF: sub_401250+6Ej
					; sub_401250+644j
		cmp	byte ptr [eax+1], 0
		jz	loc_4012C4
		mov	[esp+238h+var_238], eax
		mov	ecx, 2
		mov	edx, offset aImage ; "-image"
		mov	dword ptr [esp+238h+var_234+4],	ecx
		mov	dword ptr [esp+238h+var_234], edx
		call	pm_keymatch
		test	eax, eax
		jz	short loc_4018BB
		inc	ebx
		cmp	ebx, [ebp+arg_0]
		jz	short loc_40187A
		lea	edi, [ebp+var_FC]
		mov	eax, offset aD	; "%d"
		mov	dword ptr [esp+238h+var_234+4],	edi

loc_401868:				; CODE XREF: sub_401250+6B0j
		mov	dword ptr [esp+238h+var_234], eax
		mov	eax, [esi+ebx*4]
		mov	[esp+238h+var_238], eax
		call	sscanf
		dec	eax
		jz	short loc_401886

loc_40187A:				; CODE XREF: sub_401250+607j
					; sub_401250+6A5j ...
		mov	[esp+238h+var_238], offset aImageNScanmaxP ; "[-image N] [-scanmax] [-printmax]	[-min"...
		call	pm_usage

loc_401886:				; CODE XREF: sub_401250+628j
					; sub_401250+9C1j ...
		mov	edx, [ebp+arg_0]
		inc	ebx
		cmp	ebx, edx
		jge	short loc_4018B1
		mov	eax, [esi+ebx*4]
		cmp	byte ptr [eax],	2Dh
		jz	short loc_40182B
		jmp	loc_4012C4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_4018A0:				; CODE XREF: sub_401250+266j
		mov	[esp+238h+var_238], offset aErrorReadingHe ; "error reading header"
		call	pm_error
		jmp	loc_4014BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4018B1:				; CODE XREF: sub_401250+62j
					; sub_401250+76j ...
		mov	esi, offset asc_40317F ; "-"
		jmp	loc_4012D0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4018BB:				; CODE XREF: sub_401250+601j
		mov	ecx, 3
		mov	edx, offset aMax ; "-max"
		mov	dword ptr [esp+238h+var_234+4],	ecx
		mov	dword ptr [esp+238h+var_234], edx
		mov	eax, [esi+ebx*4]
		mov	[esp+238h+var_238], eax
		call	pm_keymatch
		test	eax, eax
		jz	loc_401B9B
		inc	ebx
		mov	edi, 1
		lea	eax, [ebp+var_108]
		cmp	ebx, [ebp+arg_0]
		mov	[ebp+var_18C], edi
		jz	short loc_40187A

loc_4018F7:				; CODE XREF: sub_401250+987j
		mov	dword ptr [esp+238h+var_234+4],	eax
		mov	eax, offset aLf	; "%lf"
		jmp	loc_401868
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401905:				; CODE XREF: sub_401250+4E6j
		fxch	st(1)

loc_401907:				; CODE XREF: sub_401250+5C2j
		fld	[ebp+var_1B8]
		mov	[esp+238h+var_238], offset aScanResultsMin ; "Scan results: min=%f max=%f"
		mov	ebx, 4
		lea	esi, [ebp+var_13C]
		fld	[ebp+var_1B8]
		fxch	st(1)
		fmulp	st(3), st
		fmulp	st(1), st
		fxch	st(1)
		fadd	[ebp+var_1C0]
		fxch	st(1)
		fadd	[ebp+var_1C0]
		fxch	st(1)
		fst	[ebp+var_130]
		fstp	[esp+238h+var_234]
		fst	[ebp+var_138]
		fstp	[esp+238h+var_22C]
		call	pm_message
		mov	dword ptr [esp+238h+var_234+4],	ebx
		mov	edi, [ebp+var_164]
		mov	dword ptr [esp+238h+var_234], esi
		mov	[esp+238h+var_238], edi
		call	pm_seek2
		fld	[ebp+var_1A8]
		fcomp	ds:dbl_4032C0
		fnstsw	ax
		sahf
		jnz	short loc_401989
		fld	[ebp+var_130]
		fstp	[ebp+var_1A8]

loc_401989:				; CODE XREF: sub_401250+72Bj
		fld	[ebp+var_1B0]
		fcomp	ds:dbl_4032C8
		fnstsw	ax
		sahf
		jnz	short loc_4019A6
		fld	[ebp+var_138]
		fstp	[ebp+var_1B0]

loc_4019A6:				; CODE XREF: sub_401250+43Dj
					; sub_401250+748j
		fld	[ebp+var_1A8]
		mov	ecx, [ebp+var_54]
		fld	[ebp+var_1B0]
		fxch	st(1)
		test	ecx, ecx
		fstp	[ebp+var_120]
		fst	[ebp+var_128]
		js	loc_401B72
		fstp	st
		fld	[ebp+var_128]
		fld	[ebp+var_120]
		fld	ds:flt_4032D4
		fld	st(2)
		fsub	st, st(2)
		fcom	st(1)
		fnstsw	ax
		sahf
		jbe	loc_401AD7
		fstp	st

loc_4019F0:				; CODE XREF: sub_401250+889j
		fld1
		fcom	st(1)
		fnstsw	ax
		sahf
		jbe	short loc_4019FD
		fstp	st(1)
		fld	st

loc_4019FD:				; CODE XREF: sub_401250+7A7j
		fxch	st(1)
		fnstcw	[ebp+var_152]
		movzx	esi, [ebp+var_152]
		or	si, 0C00h
		mov	[ebp+var_154], si
		fldcw	[ebp+var_154]
		fistp	[ebp+var_160]
		fldcw	[ebp+var_152]
		mov	edi, dword ptr [ebp+var_160]
		mov	[ebp+var_168], edi

loc_401A36:				; CODE XREF: sub_401250+935j
		fst	[ebp+var_170]
		fld	st(2)
		fsub	st, st(2)
		fcomp	ds:dbl_4032E8
		fnstsw	ax
		sahf
		jz	loc_401AD3
		mov	ebx, [ebp+var_168]
		xor	ecx, ecx
		push	ecx
		push	ebx
		fild	[esp+240h+var_240]
		add	esp, 8
		fstp	[ebp+var_170]
		fld	st(2)
		fsub	st, st(2)
		fdivp	st(1), st
		fmul	[ebp+var_170]
		fstp	[ebp+var_170]

loc_401A77:				; CODE XREF: sub_401250+885j
		mov	edx, [ebp+var_190]
		test	edx, edx
		jz	loc_401C5B
		fxch	st(1)
		fstp	[esp+238h+var_22C]
		fstp	[esp+238h+var_234]
		mov	[esp+238h+var_238], offset aFF ; "%f %f\n"
		call	printf

loc_401A9B:				; CODE XREF: sub_401250+AF9j
		mov	edi, [ebp+var_164]
		mov	[esp+238h+var_238], edi
		call	pm_close
		call	__getreent
		mov	eax, [eax+8]
		mov	[esp+238h+var_238], eax
		call	pm_close
		mov	[esp+238h+var_238], 0
		call	exit

loc_401AC5:				; CODE XREF: sub_401250+3E1j
		fstp	st
		jmp	loc_40163D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401ACC:				; CODE XREF: sub_401250+3CBj
		fstp	st(1)
		jmp	loc_401629
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401AD3:				; CODE XREF: sub_401250+7F9j
		fstp	st
		jmp	short loc_401A77
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401AD7:				; CODE XREF: sub_401250+798j
		fstp	st(1)
		jmp	loc_4019F0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401ADE:				; CODE XREF: sub_401250+2F5j
		mov	edi, 1
		mov	edx, 1
		mov	[ebp+var_FC], edi
		mov	[ebp+var_17C], edx
		jmp	loc_401554
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401AF9:				; CODE XREF: sub_401250+2DAj
		mov	dword ptr [esp+238h+var_234], edx
		mov	[esp+238h+var_238], offset aWarningFitsFil ; "Warning: FITS file has %d	axes"
		call	pm_message
		mov	edx, [ebp+var_50]
		jmp	loc_401530
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B11:				; CODE XREF: sub_401250+2CBj
		mov	[esp+238h+var_238], offset aFitsFileIsNotI ; "FITS file	is not in simple format, can'"...
		call	pm_error
		jmp	loc_401521
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B22:				; CODE XREF: sub_401250+376j
		mov	esi, [ebp+var_FC]
		test	esi, esi
		jnz	loc_4015CC
		mov	ecx, 1
		mov	[ebp+var_194], ecx
		jmp	loc_4015CC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B40:				; CODE XREF: sub_401250+42Cj
		fstp	st
		jmp	loc_401693
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B47:				; CODE XREF: sub_401250+499j
		cmp	edi, 0FFFFFFC0h
		jz	loc_401BDC
		cmp	edi, 0FFFFFFE0h
		jnz	loc_401701
		fld	ds:flt_4032E0

loc_401B5F:				; CODE XREF: sub_401250+920j
					; sub_401250+992j ...
		fstp	[ebp+var_1D0]
		jmp	loc_401711
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B6A:				; CODE XREF: sub_401250+493j
		fld	ds:dbl_4032D8
		jmp	short loc_401B5F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B72:				; CODE XREF: sub_401250+775j
		fld	[ebp+var_120]
		mov	edx, 0FFh
		fld1
		mov	[ebp+var_168], edx
		jmp	loc_401A36
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B8A:				; CODE XREF: sub_401250+361j
		mov	[esp+238h+var_238], offset aNeedToSpecifyA ; "need to specify a	plane using the	-imag"...
		call	pm_error
		jmp	loc_4015B7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B9B:				; CODE XREF: sub_401250+68Aj
		mov	ecx, 3
		mov	edx, offset aMin ; "-min"
		mov	dword ptr [esp+238h+var_234+4],	ecx
		mov	dword ptr [esp+238h+var_234], edx
		mov	eax, [esi+ebx*4]
		mov	[esp+238h+var_238], eax
		call	pm_keymatch
		test	eax, eax
		jz	short loc_401BF2
		inc	ebx
		mov	edi, 1
		cmp	ebx, [ebp+arg_0]
		mov	[ebp+var_188], edi
		jz	loc_40187A
		lea	eax, [ebp+var_111+1]
		jmp	loc_4018F7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401BDC:				; CODE XREF: sub_401250+8FAj
		fld	ds:dbl_4032C8
		jmp	loc_401B5F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401BE7:				; CODE XREF: sub_401250+4A2j
		fld	ds:flt_4032D0
		jmp	loc_401B5F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401BF2:				; CODE XREF: sub_401250+96Aj
		mov	ecx, offset aScanmax ; "-scanmax"
		mov	edi, 2
		mov	dword ptr [esp+238h+var_234+4],	edi
		mov	dword ptr [esp+238h+var_234], ecx
		mov	edx, [esi+ebx*4]
		mov	[esp+238h+var_238], edx
		call	pm_keymatch
		test	eax, eax
		jnz	loc_401886
		mov	ecx, 2
		mov	edx, offset aNoraw ; "-noraw"
		mov	dword ptr [esp+238h+var_234+4],	ecx
		mov	dword ptr [esp+238h+var_234], edx
		mov	eax, [esi+ebx*4]
		mov	[esp+238h+var_238], eax
		call	pm_keymatch
		test	eax, eax
		jz	loc_40202A
		mov	edi, 1
		mov	[ebp+var_184], edi
		jmp	loc_401886
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_401C50:				; CODE XREF: sub_401250+4ABj
		fld	ds:flt_4032D4
		jmp	loc_401B5F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401C5B:				; CODE XREF: sub_401250+82Fj
		fstp	st
		fstp	st
		cmp	[ebp+var_194], 1
		mov	edx, 0Ch
		mov	ecx, [ebp+var_174]
		mov	dword ptr [esp+238h+var_234+4],	edx
		mov	esi, [ebp+var_178]
		sbb	edi, edi
		mov	dword ptr [esp+238h+var_234], ecx
		add	edi, 5033h
		mov	[ebp+var_1D8], edi
		mov	[esp+238h+var_238], esi
		call	pm_allocarray
		cmp	[ebp+var_1D8], 5033h
		mov	[ebp+var_180], eax
		setnz	bl
		xor	eax, eax
		cmp	[ebp+var_1D8], 5036h
		setnz	al
		test	ebx, eax
		jz	loc_401EC9
		cmp	[ebp+var_1D8], 5032h
		setnz	bl
		xor	eax, eax
		cmp	[ebp+var_1D8], 5035h
		setnz	al
		test	ebx, eax
		jz	short loc_401D4E
		mov	[esp+238h+var_238], offset aCanTHappen ; "can't happen"
		call	pm_error

loc_401CEB:				; CODE XREF: sub_401250+B17j
					; sub_401250+C90j
		call	__getreent
		mov	ebx, [ebp+var_168]
		mov	ecx, [ebp+var_184]
		mov	esi, [ebp+var_1D8]
		mov	dword ptr [esp+238h+var_22C+4],	ebx
		mov	edi, [ebp+var_174]
		mov	edx, [ebp+var_178]
		mov	[esp+238h+var_224], esi
		mov	ebx, [ebp+var_180]
		mov	dword ptr [esp+238h+var_22C], edi
		mov	dword ptr [esp+238h+var_234+4],	edx
		mov	[esp+238h+var_220], ecx
		mov	dword ptr [esp+238h+var_234], ebx
		mov	ecx, [eax+8]
		mov	[esp+238h+var_238], ecx
		call	pnm_writepnm
		mov	[esp+238h+var_238], ebx
		mov	esi, [ebp+var_174]
		mov	dword ptr [esp+238h+var_234], esi
		call	pm_freearray
		jmp	loc_401A9B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401D4E:				; CODE XREF: sub_401250+A8Dj
		mov	[esp+238h+var_238], offset aWritingPgmFile ; "writing PGM file"
		mov	ebx, 1
		call	pm_message

loc_401D5F:				; CODE XREF: sub_401250+C4Dj
		mov	eax, [ebp+var_FC]
		cmp	ebx, eax
		jg	short loc_401CEB
		cmp	ebx, eax
		jz	loc_401EA2
		mov	dword ptr [esp+238h+var_234], ebx
		mov	esi, [ebp+var_17C]
		mov	[esp+238h+var_238], offset aSkippingImageP ; "skipping image plane %d of %d"
		mov	dword ptr [esp+238h+var_234+4],	esi

loc_401D86:				; CODE XREF: sub_401250+C74j
		call	pm_message

loc_401D8B:				; CODE XREF: sub_401250+C59j
		xor	edi, edi

loc_401D8D:				; CODE XREF: sub_401250+C47j
		cmp	edi, [ebp+var_174]
		jge	loc_401E9C
		mov	edx, [ebp+var_178]
		test	edx, edx
		jle	loc_401E96
		mov	esi, [ebp+var_178]
		xor	eax, eax
		mov	[ebp+var_1D4], eax
		jmp	short loc_401E09
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401DB7:				; CODE XREF: sub_401250+BFFj
		fstp	st(1)
		fldz
		fcom	st(1)
		fnstsw	ax
		sahf
		jbe	loc_401E64

loc_401DC6:				; CODE XREF: sub_401250+C0Ej
		fstp	st(1)

loc_401DC8:				; CODE XREF: sub_401250+C16j
		fnstcw	[ebp+var_152]
		movzx	ecx, [ebp+var_152]
		or	cx, 0C00h
		cmp	ebx, [ebp+var_FC]
		mov	[ebp+var_154], cx
		fldcw	[ebp+var_154]
		fistp	[ebp+var_210]
		fldcw	[ebp+var_152]
		jz	short loc_401E6B

loc_401DFB:				; CODE XREF: sub_401250+C41j
		add	[ebp+var_1D4], 0Ch
		dec	esi
		jz	loc_401E96

loc_401E09:				; CODE XREF: sub_401250+B65j
		lea	eax, [ebp+var_150]
		mov	edx, [ebp+var_54]
		mov	[esp+238h+var_238], eax
		mov	eax, [ebp+var_164]
		call	sub_401050
		fld	[ebp+var_150]
		xor	edx, edx
		mov	ecx, [ebp+var_168]
		fmul	[ebp+var_28]
		push	edx
		push	ecx
		fild	[esp+240h+var_240]
		fxch	st(1)
		add	esp, 8
		fadd	[ebp+var_30]
		fsub	[ebp+var_120]
		fmul	[ebp+var_170]
		fcom	st(1)
		fnstsw	ax
		sahf
		jb	loc_401DB7
		fstp	st
		fldz
		fcom	st(1)
		fnstsw	ax
		sahf
		ja	loc_401DC6

loc_401E64:				; CODE XREF: sub_401250+B70j
		fstp	st
		jmp	loc_401DC8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401E6B:				; CODE XREF: sub_401250+BA9j
		mov	ecx, [ebp+var_180]
		xor	edx, edx
		mov	eax, [ecx+edi*4]
		mov	ecx, [ebp+var_1D4]
		mov	[ecx+eax+4], edx
		mov	edx, dword ptr [ebp+var_210]
		mov	dword ptr [ecx+eax], 0
		mov	[ecx+eax+8], edx
		jmp	loc_401DFB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401E96:				; CODE XREF: sub_401250+B51j
					; sub_401250+BB3j
		inc	edi
		jmp	loc_401D8D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401E9C:				; CODE XREF: sub_401250+B43j
		inc	ebx
		jmp	loc_401D5F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401EA2:				; CODE XREF: sub_401250+B1Bj
		cmp	[ebp+var_17C], 1
		jle	loc_401D8B
		mov	dword ptr [esp+238h+var_234], ebx
		mov	ecx, [ebp+var_17C]
		mov	[esp+238h+var_238], offset aReadingImagePl ; "reading image plane %d of	%d"
		mov	dword ptr [esp+238h+var_234+4],	ecx
		jmp	loc_401D86
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401EC9:				; CODE XREF: sub_401250+A69j
		mov	[esp+238h+var_238], offset aWritingPpmFile ; "writing PPM file"
		mov	edi, 1
		call	pm_message

loc_401EDA:				; CODE XREF: sub_401250+DD5j
		cmp	edi, [ebp+var_17C]
		jg	loc_401CEB
		mov	dword ptr [esp+238h+var_234], edi
		mov	esi, [ebp+var_17C]
		xor	ebx, ebx
		mov	[esp+238h+var_238], offset aReadingImagePl ; "reading image plane %d of	%d"
		mov	dword ptr [esp+238h+var_234+4],	esi
		call	pm_message
		mov	[ebp+var_1DC], ebx

loc_401F08:				; CODE XREF: sub_401250+DCFj
		mov	eax, [ebp+var_174]
		cmp	[ebp+var_1DC], eax
		jge	loc_402024
		mov	edx, [ebp+var_178]
		test	edx, edx
		jle	loc_402019
		mov	esi, [ebp+var_178]
		xor	ebx, ebx
		jmp	short loc_401F96
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401F32:				; CODE XREF: sub_401250+DADj
		fstp	st
		fldz
		fcom	st(1)
		fnstsw	ax
		sahf
		jbe	loc_402012

loc_401F41:				; CODE XREF: sub_401250+DBCj
		fstp	st(1)

loc_401F43:				; CODE XREF: sub_401250+DC4j
		fnstcw	[ebp+var_152]
		movzx	edx, [ebp+var_152]
		or	dx, 0C00h
		mov	[ebp+var_154], dx
		fldcw	[ebp+var_154]
		fistp	[ebp+var_160]
		fldcw	[ebp+var_152]
		mov	eax, dword ptr [ebp+var_160]
		mov	[ebp+edi*4+var_68], eax
		mov	edx, [ebp+var_64]
		mov	[ebx+ecx], edx
		mov	eax, [ebp+var_60]
		mov	[ebx+ecx+4], eax
		mov	edx, [ebp+var_5C]
		mov	[ebx+ecx+8], edx
		add	ebx, 0Ch
		dec	esi
		jz	loc_402019

loc_401F96:				; CODE XREF: sub_401250+CE0j
		mov	edx, [ebp+var_54]
		lea	ecx, [ebp+var_150]
		mov	eax, [ebp+var_164]
		mov	[esp+238h+var_238], ecx
		call	sub_401050
		fld	[ebp+var_150]
		mov	eax, [ebp+var_1DC]
		mov	edx, [ebp+var_180]
		fmul	[ebp+var_28]
		mov	ecx, [edx+eax*4]
		mov	eax, [ebx+ecx]
		fadd	[ebp+var_30]
		mov	[ebp+var_64], eax
		mov	edx, [ebx+ecx+4]
		fsub	[ebp+var_120]
		mov	[ebp+var_60], edx
		mov	eax, [ebx+ecx+8]
		xor	edx, edx
		push	edx
		fmul	[ebp+var_170]
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_168]
		push	eax
		fild	[esp+240h+var_240]
		add	esp, 8
		fcom	st(1)
		fnstsw	ax
		sahf
		ja	loc_401F32
		fstp	st(1)
		fldz
		fcom	st(1)
		fnstsw	ax
		sahf
		ja	loc_401F41

loc_402012:				; CODE XREF: sub_401250+CEBj
		fstp	st
		jmp	loc_401F43
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402019:				; CODE XREF: sub_401250+CD2j
					; sub_401250+D40j
		inc	[ebp+var_1DC]
		jmp	loc_401F08
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402024:				; CODE XREF: sub_401250+CC4j
		inc	edi
		jmp	loc_401EDA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40202A:				; CODE XREF: sub_401250+9E6j
		mov	ecx, 2
		mov	edx, offset aPrintmax ;	"-printmax"
		mov	dword ptr [esp+238h+var_234+4],	ecx
		mov	dword ptr [esp+238h+var_234], edx
		mov	eax, [esi+ebx*4]
		mov	[esp+238h+var_238], eax
		call	pm_keymatch
		test	eax, eax
		jz	loc_40187A
		mov	edi, 1
		mov	[ebp+var_190], edi
		jmp	loc_401886
sub_401250	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_402060	proc near		; CODE XREF: sub_401250+17p
		push	ecx
		mov	ecx, esp
		add	ecx, 8

loc_402066:				; CODE XREF: sub_402060+1Bj
		cmp	eax, 1000h
		jb	short loc_40207D
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		jmp	short loc_402066
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40207D:				; CODE XREF: sub_402060+Bj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		jmp	eax
sub_402060	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402090	proc near		; CODE XREF: start+3Ap

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_C2		= dword	ptr -0C2h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_4], esi
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_8], ebx
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	sub_402160
		sub	esp, 8
		test	eax, eax
		jz	short loc_4020C1
		mov	[esp+18h+var_18], 0

loc_4020BB:				; CODE XREF: sub_402090+56j
		call	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)

loc_4020C1:				; CODE XREF: sub_402090+22j
		sub	esp, 0C0h
		lea	ebx, [esp+0D8h+var_C2+1]
		and	ebx, 0FFFFFFF0h
		mov	dword ptr [ebx], 0
		mov	[esp+0D8h+var_D4], ebx
		mov	[esp+0D8h+var_D8], esi
		call	sub_402160
		sub	esp, 8
		mov	[esp+0D8h+var_D8], ebx
		jmp	short loc_4020BB
sub_402090	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fread. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION getc. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION exit. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __getreent. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION sscanf. PRESS KEYPAD "+" TO EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402160	proc near		; CODE XREF: sub_402090+18p
					; sub_402090+4Bp

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		push	ebx
		sub	esp, 4		; lpModuleName
		mov	ebx, [ebp+arg_4]
		test	ebx, ebx
		jz	loc_402263

loc_402174:				; CODE XREF: sub_402160+11Fj
		mov	dword ptr [ebx+4], 0A8h
		xor	ecx, ecx
		mov	edx, 84h
		mov	dword ptr [ebx+8], 3EDh
		test	eax, eax
		mov	dword ptr [ebx+0Ch], 12h
		mov	[ebx+80h], ecx
		mov	[ebx+84h], edx
		mov	dword ptr [ebx+2Ch], offset dword_402458
		mov	dword ptr [ebx+30h], offset dword_402460
		mov	dword ptr [ebx+14h], offset unk_404014
		jnz	loc_402251
		mov	eax, ds:_impure_ptr
		mov	[ebx+10h], eax

loc_4021C1:				; CODE XREF: sub_402160+FEj
		mov	dword ptr [ebx+78h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [ebx+48h], offset sub_402370
		mov	dword ptr [ebx+4Ch], offset sub_402360
		mov	[ebx+28h], eax
		mov	eax, [ebp+0]
		mov	dword ptr [ebx+50h], offset sub_402350
		mov	dword ptr [ebx+54h], offset sub_402340
		mov	dword ptr [ebx+24h], offset unk_404010
		mov	[ebx], eax
		mov	dword ptr [ebx+18h], offset loc_402330
		mov	dword ptr [ebx+1Ch], offset loc_402320
		mov	dword ptr [ebx+20h], offset loc_402310
		mov	dword ptr [ebx+44h], offset loc_402300
		mov	[esp+8+var_8], 0
		call	GetModuleHandleA
		mov	[ebx+7Ch], eax
		sub	esp, 4
		mov	dword ptr [ebx+34h], offset aStrangeBitpixI ; "Strange bitpix in read_value"
		mov	dword ptr [ebx+38h], offset aStrangeBitpixI ; "Strange bitpix in read_value"
		mov	dword ptr [ebx+3Ch], offset dword_404000
		mov	dword ptr [ebx+40h], 404040h
		call	sub_4022D0
		mov	eax, 1

loc_40224A:				; CODE XREF: sub_402160+116j
		mov	ebx, [ebp+var_4]
		leave
		retn	8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402251:				; CODE XREF: sub_402160+53j
		mov	edx, [ebx+0A4h]
		mov	eax, ds:_impure_ptr
		mov	[eax], edx
		jmp	loc_4021C1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402263:				; CODE XREF: sub_402160+Ej
		mov	[esp+8+var_8], 8
		call	cygwin_internal
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 0FFFFFFFFh
		jz	short loc_40224A
		mov	ebx, edx
		mov	eax, 1
		jmp	loc_402174
sub_402160	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4022A0	proc near		; CODE XREF: sub_4022D0+1Fp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	ecx, [ebp+arg_0]
		push	esi
		mov	esi, [ebp+arg_8]
		push	ebx
		mov	ebx, [ebp+arg_4]
		jmp	short loc_4022BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4022B0:				; CODE XREF: sub_4022A0+1Ej
		mov	edx, [ecx+4]
		mov	eax, [ecx]
		add	ecx, 8
		add	edx, esi
		add	[edx], eax

loc_4022BC:				; CODE XREF: sub_4022A0+Ej
		cmp	ecx, ebx
		jb	short loc_4022B0
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_4022A0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4022D0	proc near		; CODE XREF: sub_402160+E0p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	edx, 400000h
		mov	ebp, esp
		mov	eax, offset unk_4032F0
		sub	esp, 0Ch
		mov	[esp+0Ch+var_4], edx
		mov	[esp+0Ch+var_8], eax
		mov	[esp+0Ch+var_C], offset	unk_4032F0
		call	sub_4022A0
		leave
		retn
sub_4022D0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_402300:				; DATA XREF: sub_402160+ABo
		jmp	ds:calloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_402310:				; DATA XREF: sub_402160+A4o
		jmp	ds:realloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_402320:				; DATA XREF: sub_402160+9Do
		jmp	ds:free
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_402330:				; DATA XREF: sub_402160+96o
		jmp	ds:malloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402340	proc near		; DATA XREF: sub_402160+86o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_402340	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402350	proc near		; DATA XREF: sub_402160+7Fo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_402350	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402360	proc near		; DATA XREF: sub_402160+72o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_402360	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402370	proc near		; DATA XREF: sub_402160+6Bo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_402370	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_allocarray. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_close.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_error.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_freearray. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_keymatch. PRESS KEYPAD	"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_message. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_openr_seekable. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_seek2.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_tell2.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pm_usage.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pnm_init.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pnm_writepnm. PRESS KEYPAD "+" TO	EXPAND]
		align 4
dword_402458	dd 0FFFFFFFFh, 0	; DATA XREF: sub_402160+3Eo
dword_402460	dd 0FFFFFFFFh, 67h dup(0) ; DATA XREF: sub_402160+45o
_text		ends

; Section 2. (virtual address 00003000)
; Virtual size			: 000002F0 (	752.)
; Section size in file		: 00000400 (   1024.)
; Offset to raw	data for section: 00001A00
; Flags	40000040: Data Readable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 403000h
aStrangeBitpixI	db 'Strange bitpix in read_value',0 ; DATA XREF: sub_401050+2Ao
					; sub_402160+C4o ...
aEofReadError	db 'EOF / read error',0 ; DATA XREF: sub_401050+CDo
					; sub_401050+100o ...
		align 4
aImageNScanmaxP	db '[-image N] [-scanmax] [-printmax] [-min f] [-max f] [FITSfil'
					; DATA XREF: sub_401250+84o
					; sub_401250+62Ao
		db 'e]',0
aBitpixD	db 'BITPIX = %d',0      ; DATA XREF: sub_401250+E6o
aNaxisD		db 'NAXIS = %d',0       ; DATA XREF: sub_401250+108o
aNaxis1D	db 'NAXIS1 = %d',0      ; DATA XREF: sub_401250+12Ao
aNaxis2D	db 'NAXIS2 = %d',0      ; DATA XREF: sub_401250+14Co
aNaxis3D	db 'NAXIS3 = %d',0      ; DATA XREF: sub_401250+16Eo
aDataminLf	db 'DATAMIN = %lf',0    ; DATA XREF: sub_401250+190o
aDatamaxLf	db 'DATAMAX = %lf',0    ; DATA XREF: sub_401250+1B2o
aBzeroLf	db 'BZERO = %lf',0      ; DATA XREF: sub_401250+1D4o
aBscaleLf	db 'BSCALE = %lf',0     ; DATA XREF: sub_401250+1F6o
aEnd		db 'END ',0             ; DATA XREF: sub_401250+213o
aSimpleC	db 'SIMPLE = %c',0      ; DATA XREF: sub_401250+275o
aS:					; DATA XREF: sub_401250+319o
		unicode	0, <s>
		dw 6F00h
aNlyDPlaneSInTh	db 'nly %d plane%s in this file',0
aScanningFileFo	db 'Scanning file for scaling parameters',0 ; DATA XREF: sub_401250+484o
		align 4
aUnusualBitsPer	db 'unusual bits per pixel (%u), can',27h,'t read',0
					; DATA XREF: sub_401250+4B5o
aImage		db '-image',0           ; DATA XREF: sub_401250+5EDo
aD		db '%d',0               ; DATA XREF: sub_401250+60Fo
aErrorReadingHe	db 'error reading header',0 ; DATA XREF: sub_401250+650o
asc_40317F	db '-',0                ; DATA XREF: sub_401250+661o
aMax		db '-max',0             ; DATA XREF: sub_401250+670o
aLf		db '%lf',0              ; DATA XREF: sub_401250+6ABo
aScanResultsMin	db 'Scan results: min=%f max=%f',0 ; DATA XREF: sub_401250+6BDo
aFF		db '%f %f',0Ah,0        ; DATA XREF: sub_401250+83Fo
		align 4
aWarningFitsFil	db 'Warning: FITS file has %d axes',0 ; DATA XREF: sub_401250+8ADo
		align 4
aFitsFileIsNotI	db 'FITS file is not in simple format, can',27h,'t read',0
					; DATA XREF: sub_401250+8C1o
		align 4
aNeedToSpecifyA	db 'need to specify a plane using the -imagenum flag',0
					; DATA XREF: sub_401250+93Ao
aMin		db '-min',0             ; DATA XREF: sub_401250+950o
aScanmax	db '-scanmax',0         ; DATA XREF: sub_401250+9A2o
aNoraw		db '-noraw',0           ; DATA XREF: sub_401250+9CCo
aCanTHappen	db 'can',27h,'t happen',0 ; DATA XREF: sub_401250+A8Fo
aWritingPgmFile	db 'writing PGM file',0 ; DATA XREF: sub_401250+AFEo
aSkippingImageP	db 'skipping image plane %d of %d',0 ; DATA XREF: sub_401250+B2Bo
aReadingImagePl	db 'reading image plane %d of %d',0 ; DATA XREF: sub_401250+C69o
					; sub_401250+CA2o
aWritingPpmFile	db 'writing PPM file',0 ; DATA XREF: sub_401250+C79o
aPrintmax	db '-printmax',0        ; DATA XREF: sub_401250+DDFo
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
dbl_4032C0	dq -1.797693134862316e308 ; DATA XREF: sub_401250+BDr
					; sub_401250+388r ...
dbl_4032C8	dq 1.797693134862316e308 ; DATA	XREF: sub_401250+C6r
					; sub_401250+396r ...
flt_4032D0	dd 2.55e2		; DATA XREF: sub_401250+997r
flt_4032D4	dd 6.5535e4		; DATA XREF: sub_401250+789r
					; sub_401250+A00r
dbl_4032D8	dq 4.294967295e9	; DATA XREF: sub_401250+91Ar
flt_4032E0	dd 3.4028235e38		; DATA XREF: sub_401250+909r
		db    0	;
		db    0	;
		db    0	;
		db    0	;
dbl_4032E8	dq 0.0			; DATA XREF: sub_401250+5A3r
					; sub_401250+7F0r
unk_4032F0	db    0	;		; DATA XREF: sub_4022D0+8o
					; sub_4022D0+18o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_rdata		ends

; Section 3. (virtual address 00004000)
; Virtual size			: 00000040 (	 64.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0000080: Bss Readable Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 404000h
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
dword_404000	dd ?			; DATA XREF: start+9r sub_402160+D2o
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
unk_404010	db    ?	;		; DATA XREF: sub_402160+8Do
		db    ?	;
		db    ?	;
		db    ?	;
unk_404014	db    ?	;		; DATA XREF: sub_402160+4Co
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
_bss		ends

;
; Imports from cygwin1
;
; Section 4. (virtual address 00005000)
; Virtual size			: 0000036C (	876.)
; Section size in file		: 00000400 (   1024.)
; Offset to raw	data for section: 00001E00
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Externs
; _idata
		extrn __imp___getreent:dword ; DATA XREF: __getreentr
		extrn __imp___main:dword ; DATA	XREF: __mainr
		extrn _impure_ptr:dword	; DATA XREF: sub_402160+59r
					; sub_402160+F7r
; void *__cdecl	calloc(size_t,size_t)
		extrn calloc:dword	; DATA XREF: .text:00402300r
		extrn __imp_cygwin_internal:dword ; DATA XREF: cygwin_internalr
; dll_crt0(per_process *)
		extrn dll_crt0__FP11per_process:dword ;	DATA XREF: sub_402090+2Br
					; .text:00402290r
; void __cdecl _imp_exit(int)
		extrn __imp_exit:dword	; DATA XREF: exitr
		extrn __imp_fread:dword	; DATA XREF: freadr
; void __cdecl free(void *)
		extrn free:dword	; DATA XREF: .text:00402320r
		extrn __imp_getc:dword	; DATA XREF: getcr
; void *__cdecl	malloc(size_t)
		extrn malloc:dword	; DATA XREF: .text:00402330r
		extrn __imp_printf:dword ; DATA	XREF: printfr
; void *__cdecl	realloc(void *,size_t)
		extrn realloc:dword	; DATA XREF: .text:00402310r
		extrn __imp_sscanf:dword ; DATA	XREF: sscanfr


;
; Imports from KERNEL32
;
; HMODULE __stdcall __imp_GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp_GetModuleHandleA:dword ; DATA XREF:	GetModuleHandleAr


;
; Imports from cygnetpbm-10
;
		extrn __imp_pm_allocarray:dword	; DATA XREF: pm_allocarrayr
		extrn __imp_pm_close:dword ; DATA XREF:	pm_closer
		extrn __imp_pm_error:dword ; DATA XREF:	pm_errorr
		extrn __imp_pm_freearray:dword ; DATA XREF: pm_freearrayr
		extrn __imp_pm_keymatch:dword ;	DATA XREF: pm_keymatchr
		extrn __imp_pm_message:dword ; DATA XREF: pm_messager
		extrn __imp_pm_openr_seekable:dword ; DATA XREF: pm_openr_seekabler
		extrn __imp_pm_seek2:dword ; DATA XREF:	pm_seek2r
		extrn __imp_pm_tell2:dword ; DATA XREF:	pm_tell2r
		extrn __imp_pm_usage:dword ; DATA XREF:	pm_usager
		extrn __imp_pnm_init:dword ; DATA XREF:	pnm_initr
		extrn __imp_pnm_writepnm:dword ; DATA XREF: pnm_writepnmr



		end start
