

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2003 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; º Licensed to: Mark Stamp, San Jose State University,	1 user,	academic, 11/2003 º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	C:\Documents and Settings\Fiona\My Documents\CS	298_Metamorphic	virus\HMM\Cygwin\iconv.exe
; Format      :	Portable executable for	IBM PC (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00001070 (   4208.)
; Section size in file		: 00001200 (   4608.)
; Offset to raw	data for section: 00000400
; Flags	E0000020: Text Executable Readable Writable
; Alignment	: 16 bytes ?

		model flat

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Write/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 401000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

		public start
start		proc near

var_8		= dword	ptr -8
var_2		= word ptr -2

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		and	esp, 0FFFFFFF0h
		mov	eax, ds:dword_405000
		test	eax, eax
		jz	short loc_401013
		int	3		; Trap to Debugger

loc_401013:				; CODE XREF: start+10j
		fnstcw	[ebp+var_2]
		movzx	eax, [ebp+var_2]
		and	eax, 0FFFFF0C0h
		mov	[ebp+var_2], ax
		movzx	eax, [ebp+var_2]
		or	eax, 33Fh
		mov	[ebp+var_2], ax
		fldcw	[ebp+var_2]
		mov	[esp+8+var_8], offset loc_4015B0
		call	sub_401C90
		leave
		retn
start		endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401050	proc near		; CODE XREF: .text:00401687p
					; .text:004017A0p ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_28], offset aUsageIconvCSFF ; "Usage: iconv [-c] [-s] [-f fromcode] [-"...
		mov	[ebp+var_C], ebx
		mov	[ebp+var_8], esi
		mov	esi, eax
		mov	[ebp+var_4], edi
		call	j_libintl_gettext
		mov	[esp+28h+var_28], offset aOrIconvL ; "or:    iconv -l"
		mov	edi, eax
		call	j_libintl_gettext
		test	esi, esi
		mov	ebx, eax
		jz	short loc_4010B0
		call	j___getreent
		mov	eax, [eax+0Ch]

loc_401089:				; CODE XREF: sub_401050+68j
		mov	[esp+28h+var_1C], ebx
		mov	edx, offset aSS	; "%s\n%s\n"
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], edx
		mov	[esp+28h+var_28], eax
		call	j_fprintf
		mov	[esp+28h+var_28], esi
		call	j_exit
		lea	esi, [esi+0]

loc_4010B0:				; CODE XREF: sub_401050+2Fj
		call	j___getreent
		mov	eax, [eax+8]
		jmp	short loc_401089
sub_401050	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4010C0	proc near		; DATA XREF: .text:00401A2Bo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0Ch
		xor	ebx, ebx
		mov	esi, [ebp+arg_0]
		mov	edi, [ebp+arg_4]
		jmp	short loc_4010EB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4010D3:				; CODE XREF: sub_4010C0+31j
					; sub_4010C0+4Bj
		call	j___getreent
		mov	eax, [eax+8]
		mov	[esp+18h+var_14], eax
		mov	eax, [edi+ebx*4]
		inc	ebx
		mov	[esp+18h+var_18], eax
		call	j_fputs

loc_4010EB:				; CODE XREF: sub_4010C0+11j
		cmp	ebx, esi
		jnb	short loc_401110
		test	ebx, ebx
		jz	short loc_4010D3
		call	j___getreent
		mov	eax, [eax+8]
		mov	[esp+18h+var_18], 20h
		mov	[esp+18h+var_14], eax
		call	j_putc
		jmp	short loc_4010D3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_401110:				; CODE XREF: sub_4010C0+2Dj
		call	j___getreent
		mov	eax, [eax+8]
		mov	[esp+18h+var_18], 0Ah
		mov	[esp+18h+var_14], eax
		call	j_putc
		add	esp, 0Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_4010C0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401140	proc near		; CODE XREF: .text:004017E8p
					; .text:0040194Dp

var_304C	= dword	ptr -304Ch
var_3048	= dword	ptr -3048h
var_3044	= dword	ptr -3044h
var_3040	= dword	ptr -3040h
var_303C	= dword	ptr -303Ch
var_3038	= dword	ptr -3038h
var_3034	= dword	ptr -3034h
var_3030	= dword	ptr -3030h
var_302C	= dword	ptr -302Ch
var_3028	= dword	ptr -3028h
var_3024	= dword	ptr -3024h
var_3020	= dword	ptr -3020h
var_301C	= dword	ptr -301Ch
var_3018	= dword	ptr -3018h
var_2018	= dword	ptr -2018h
var_1018	= dword	ptr -1018h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		push	eax
		mov	eax, 3068h
		call	sub_401C60
		mov	[ebp+var_3040],	edx
		mov	eax, [ebp+var_10]
		xor	ecx, ecx
		mov	[ebp+var_3048],	ecx
		xor	ebx, ebx
		lea	edi, [ebp+var_3018]
		mov	[esp+10h+var_10], edx
		mov	[ebp+var_303C],	eax
		mov	[ebp+var_3044],	ebx
		call	j__fileno
		mov	[esp+10h+var_10], eax
		mov	edx, 10000h
		mov	[esp+10h+var_C], edx
		call	j__setmode
		xor	eax, eax
		mov	[esp+10h], eax
		xor	eax, eax
		mov	[esp+10h+var_4], eax
		xor	eax, eax
		mov	[esp+10h+var_8], eax
		xor	eax, eax
		mov	[esp+10h+var_C], eax
		mov	eax, [ebp+var_303C]
		mov	[esp+10h+var_10], eax
		call	j_libiconv
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_4011C0:				; CODE XREF: sub_401140+F9j
					; sub_401140+294j ...
		mov	edx, [ebp+var_3040]
		mov	eax, 1000h
		mov	[esp+10h+var_8], eax
		mov	eax, 1
		mov	[esp+10h+var_C], eax
		lea	eax, [ebp+var_1018]
		mov	[esp+10h+var_4], edx
		mov	[esp+10h+var_10], eax
		call	j_fread
		mov	[ebp+var_304C],	eax
		test	eax, eax
		jz	loc_401372
		mov	ebx, [ebp+var_3044]
		lea	eax, [ebp+var_2018]
		xor	edx, edx
		mov	ecx, [ebp+var_304C]
		sub	eax, ebx
		add	eax, 1000h
		mov	[ebp+var_3028],	eax
		mov	eax, [ebp+var_3044]
		mov	[ebp+var_3044],	edx
		add	eax, ecx
		test	eax, eax
		mov	[ebp+var_3024],	eax
		jmp	short loc_401239
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401231:				; CODE XREF: sub_401140+194j
					; sub_401140+1F5j ...
		mov	ecx, [ebp+var_3024]
		test	ecx, ecx

loc_401239:				; CODE XREF: sub_401140+EFj
		jz	short loc_4011C0
		mov	[ebp+var_3020],	edi
		mov	eax, 1000h
		lea	edx, [ebp+var_3020]
		mov	[ebp+var_301C],	eax
		lea	eax, [ebp+var_301C]
		mov	[esp+10h], eax
		lea	eax, [ebp+var_3024]
		mov	[esp+10h+var_8], eax
		mov	eax, [ebp+var_303C]
		mov	[esp+10h+var_4], edx
		lea	edx, [ebp+var_3028]
		mov	[esp+10h+var_C], edx
		mov	[esp+10h+var_10], eax
		call	j_libiconv
		cmp	edi, [ebp+var_3020]
		mov	ebx, eax
		jz	short loc_4012D3
		call	j___errno
		mov	esi, [eax]
		call	j___getreent
		mov	eax, [eax+8]
		mov	[esp+10h+var_10], edi
		mov	[esp+10h+var_4], eax
		mov	eax, [ebp+var_3020]
		sub	eax, edi
		mov	[esp+10h+var_8], eax
		mov	eax, 1
		mov	[esp+10h+var_C], eax
		call	j_fwrite
		mov	edx, [ebp+var_3020]
		sub	edx, edi
		cmp	eax, edx
		jb	loc_401360
		call	j___errno
		mov	[eax], esi

loc_4012D3:				; CODE XREF: sub_401140+14Aj
		inc	ebx
		jnz	loc_401231
		call	j___errno
		cmp	dword ptr [eax], 8Ah
		jnz	short loc_40133A
		cmp	ds:dword_405020, 1
		jnz	loc_401413
		mov	eax, 1
		mov	edx, [ebp+var_303C]
		mov	esi, 1
		mov	[ebp+var_302C],	eax
		lea	eax, [ebp+var_302C]
		mov	[esp+10h+var_8], eax
		mov	eax, 4
		mov	[esp+10h+var_C], eax
		mov	[esp+10h+var_10], edx
		call	j_libiconvctl
		mov	[ebp+var_3048],	esi
		mov	eax, 2
		mov	ds:dword_405020, eax
		jmp	loc_401231
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40133A:				; CODE XREF: sub_401140+1A5j
		call	j___errno
		cmp	dword ptr [eax], 16h
		jz	short loc_4013B5
		call	j___errno
		cmp	dword ptr [eax], 7
		jz	loc_401231

loc_401352:				; CODE XREF: sub_401140+45Dj
		mov	ecx, ds:dword_405010
		test	ecx, ecx
		jz	loc_4014ED

loc_401360:				; CODE XREF: sub_401140+186j
					; sub_401140+248j ...
		mov	ecx, 1

loc_401365:				; CODE XREF: sub_401140+37Bj
					; sub_401140+39Bj
		add	esp, 306Ch
		mov	eax, ecx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401372:				; CODE XREF: sub_401140+B2j
		mov	esi, [ebp+var_3044]
		test	esi, esi
		jz	loc_40142D

loc_401380:				; CODE XREF: sub_401140+27Dj
					; sub_401140+28Aj ...
		mov	ebx, ds:dword_405010
		test	ebx, ebx
		jnz	short loc_401360
		mov	[esp+10h+var_10], offset aIconvSIncomple ; "iconv: %s: incomplete character or shif"...

loc_401391:				; CODE XREF: sub_401140+2E8j
					; sub_401140+3A8j
		call	j_libintl_gettext
		mov	ebx, eax
		call	j___getreent
		mov	[esp+10h+var_C], ebx
		mov	edx, [ebp+arg_0]
		mov	[esp+10h+var_8], edx
		mov	eax, [eax+0Ch]
		mov	[esp+10h+var_10], eax
		call	j_fprintf
		jmp	short loc_401360
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4013B5:				; CODE XREF: sub_401140+202j
		mov	ebx, [ebp+var_304C]
		test	ebx, ebx
		jz	short loc_401380
		mov	eax, [ebp+var_3024]
		cmp	eax, 1000h
		ja	short loc_401380
		mov	[ebp+var_3044],	eax
		test	eax, eax
		jz	loc_4011C0
		lea	edx, [ebp+var_2018]
		sub	edx, eax
		lea	ecx, [edx+1000h]

loc_4013E8:				; CODE XREF: sub_401140+2CCj
		mov	edx, [ebp+var_3028]
		lea	eax, [edx+1]
		mov	[ebp+var_3028],	eax
		movzx	eax, byte ptr [edx]
		mov	[ecx], al
		mov	eax, [ebp+var_3024]
		inc	ecx
		dec	eax
		test	eax, eax
		mov	[ebp+var_3024],	eax
		jnz	short loc_4013E8
		jmp	loc_4011C0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401413:				; CODE XREF: sub_401140+1AEj
					; sub_401140+409j
		mov	esi, ds:dword_405010
		test	esi, esi
		jnz	loc_401360
		mov	[esp+10h+var_10], offset aIconvSCannotCo ; "iconv: %s: cannot convert\n"
		jmp	loc_401391
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40142D:				; CODE XREF: sub_401140+23Aj
		lea	eax, [ebp+var_3030]
		mov	edx, 1000h
		lea	ebx, [ebp+var_3018]
		mov	[esp+10h], eax
		lea	eax, [ebp+var_3034]
		mov	[esp+10h+var_4], eax
		xor	eax, eax
		mov	[esp+10h+var_8], eax
		xor	eax, eax
		mov	[esp+10h+var_C], eax
		mov	eax, [ebp+var_303C]
		mov	[ebp+var_3034],	ebx
		mov	[ebp+var_3030],	edx
		mov	[esp+10h+var_10], eax
		call	j_libiconv
		cmp	ebx, [ebp+var_3034]
		mov	edi, eax
		jz	short loc_4014C8
		call	j___errno
		mov	esi, [eax]
		call	j___getreent
		mov	eax, [eax+8]
		mov	[esp+10h+var_10], ebx
		mov	[esp+10h+var_4], eax
		mov	eax, [ebp+var_3034]
		sub	eax, ebx
		mov	[esp+10h+var_8], eax
		mov	eax, 1
		mov	[esp+10h+var_C], eax
		call	j_fwrite
		mov	edx, [ebp+var_3034]
		mov	ecx, 1
		sub	edx, ebx
		cmp	eax, edx
		jb	loc_401365
		call	j___errno
		mov	[eax], esi

loc_4014C8:				; CODE XREF: sub_401140+33Aj
		inc	edi
		jz	short loc_401535

loc_4014CB:				; CODE XREF: sub_401140+450j
		mov	eax, [ebp+var_3040]
		mov	ecx, [ebp+var_3048]
		test	byte ptr [eax+0Ch], 40h
		jz	loc_401365
		mov	[esp+10h+var_10], offset aIconvSIOError	; "iconv: %s: I/O error\n"
		jmp	loc_401391
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4014ED:				; CODE XREF: sub_401140+21Aj
		call	j___errno
		mov	esi, [eax]
		mov	[esp+10h+var_10], offset aIconvS ; "iconv: %s: "
		call	j_libintl_gettext
		mov	ebx, eax
		call	j___getreent
		mov	[esp+10h+var_C], ebx
		mov	edx, [ebp+arg_0]
		mov	[esp+10h+var_8], edx
		mov	eax, [eax+0Ch]
		mov	[esp+10h+var_10], eax
		call	j_fprintf
		call	j___errno
		mov	[eax], esi
		mov	[esp+10h+var_10], offset unk_4040C4
		call	j_perror
		jmp	loc_401360
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401535:				; CODE XREF: sub_401140+389j
		call	j___errno
		cmp	dword ptr [eax], 8Ah
		jnz	short loc_401595
		cmp	ds:dword_405020, 1
		jnz	loc_401413
		mov	eax, 1
		mov	edx, [ebp+var_303C]
		mov	edi, 1
		mov	[ebp+var_3038],	eax
		lea	eax, [ebp+var_3038]
		mov	[esp+10h+var_8], eax
		mov	eax, 4
		mov	[esp+10h+var_C], eax
		mov	[esp+10h+var_10], edx
		call	j_libiconvctl
		mov	[ebp+var_3048],	edi
		mov	eax, 2
		mov	ds:dword_405020, eax
		jmp	loc_4014CB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401595:				; CODE XREF: sub_401140+400j
		call	j___errno
		cmp	dword ptr [eax], 16h
		jnz	loc_401352
		jmp	loc_401380
sub_401140	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_4015B0:				; DATA XREF: start+33o
		push	ebp
		mov	eax, 10h
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		and	esp, 0FFFFFFF0h
		call	sub_401C60
		call	j___main
		mov	dword ptr [ebp-10h], 0
		mov	edx, [ebp+0Ch]
		mov	edi, offset aUsrShareLocale ; "/usr/share/locale"
		mov	dword ptr [ebp-14h], 0
		mov	dword ptr [ebp-18h], 0
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_401B10
		mov	dword ptr [esp], 2
		mov	eax, offset unk_4040C4
		mov	[esp+4], eax
		call	j_setlocale
		mov	dword ptr [esp], 6
		mov	eax, offset unk_4040C4
		mov	[esp+4], eax
		call	j_setlocale
		mov	[esp+4], edi
		mov	dword ptr [esp], offset	aLibiconv ; "libiconv"
		call	j_libintl_bindtextdomain
		mov	dword ptr [esp], offset	aLibiconv ; "libiconv"
		call	j_libintl_textdomain
		mov	dword ptr [ebp-20h], 1
		mov	eax, [ebp+8]
		cmp	[ebp-20h], eax
		jge	short loc_4016B0
		mov	esi, esi
		lea	edi, [edi+0]

loc_401650:				; CODE XREF: .text:004016A3j
		cld
		mov	edx, [ebp-20h]
		mov	ecx, 3
		mov	eax, [ebp+0Ch]
		mov	edi, offset aF	; "-f"
		mov	ebx, [eax+edx*4]
		mov	esi, ebx
		repe cmpsb
		jnz	loc_401776
		mov	eax, [ebp+8]
		dec	eax
		cmp	eax, [ebp-20h]
		jz	loc_4018FB

loc_40167B:				; CODE XREF: .text:00401905j
		mov	esi, [ebp-10h]
		test	esi, esi
		jz	short loc_40168C
		mov	eax, 1
		call	sub_401050

loc_40168C:				; CODE XREF: .text:00401680j
		mov	edx, [ebp-20h]
		mov	eax, [ebp+0Ch]
		mov	edx, [eax+edx*4+4]
		mov	[ebp-10h], edx

loc_401699:				; CODE XREF: .text:004017B2j
		add	dword ptr [ebp-20h], 2

loc_40169D:				; CODE XREF: .text:004017D6j
					; .text:00401985j
		mov	edx, [ebp+8]
		cmp	[ebp-20h], edx
		jl	short loc_401650

loc_4016A5:				; CODE XREF: .text:004018AFj
		mov	ebx, [ebp-18h]
		test	ebx, ebx
		jnz	loc_401A11

loc_4016B0:				; CODE XREF: .text:00401645j
		call	j___getreent
		mov	eax, [eax+8]
		mov	[esp], eax
		call	j__fileno
		mov	[esp], eax
		mov	edx, 10000h
		mov	[esp+4], edx
		call	j__setmode
		mov	eax, [ebp-10h]
		test	eax, eax
		jz	loc_401916

loc_4016DC:				; CODE XREF: .text:0040191Dj
		mov	eax, [ebp-14h]
		test	eax, eax
		jz	loc_40190A

loc_4016E7:				; CODE XREF: .text:00401911j
		mov	eax, [ebp-10h]
		mov	edx, [ebp-14h]
		mov	[esp+4], eax
		mov	[esp], edx
		call	j_libiconv_open
		mov	[ebp-1Ch], eax
		inc	eax
		jz	loc_4019A0
		mov	eax, [ebp+8]
		cmp	[ebp-20h], eax
		jz	loc_401931
		mov	esi, 0
		jl	loc_401806

loc_40171A:				; CODE XREF: .text:00401800j
					; .text:00401954j
		mov	eax, [ebp-1Ch]
		mov	[esp], eax
		call	j_libiconv_close

loc_401725:				; CODE XREF: .text:00401A3Fj
		call	j___getreent
		mov	eax, [eax+8]
		mov	[esp], eax
		call	j_fflush
		test	eax, eax
		jnz	short loc_401747
		call	j___getreent
		mov	eax, [eax+8]
		test	byte ptr [eax+0Ch], 40h
		jz	short loc_40176E

loc_401747:				; CODE XREF: .text:00401737j
		mov	dword ptr [esp], offset	aIconvIOError ;	"iconv:	I/O error\n"
		call	j_libintl_gettext
		mov	ebx, eax
		call	j___getreent
		mov	[esp+4], ebx
		mov	esi, 1
		mov	eax, [eax+0Ch]
		mov	[esp], eax
		call	j_fprintf

loc_40176E:				; CODE XREF: .text:00401745j
		mov	[esp], esi
		call	j_exit

loc_401776:				; CODE XREF: .text:00401668j
		cld
		mov	edi, offset aT	; "-t"
		mov	ecx, 3
		mov	esi, ebx
		repe cmpsb
		jnz	short loc_4017B7
		mov	eax, [ebp+8]
		dec	eax
		cmp	eax, [ebp-20h]
		jz	loc_401922

loc_401794:				; CODE XREF: .text:0040192Cj
		mov	ebx, [ebp-14h]
		test	ebx, ebx
		jz	short loc_4017A5
		mov	eax, 1
		call	sub_401050

loc_4017A5:				; CODE XREF: .text:00401799j
		mov	eax, [ebp-20h]
		mov	edx, [ebp+0Ch]
		mov	eax, [edx+eax*4+4]
		mov	[ebp-14h], eax
		jmp	loc_401699
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4017B7:				; CODE XREF: .text:00401785j
		cld
		mov	edi, offset asc_4040F8 ; "-l"
		mov	ecx, 3
		mov	esi, ebx
		repe cmpsb
		jnz	loc_40186D
		mov	dword ptr [ebp-18h], 1

loc_4017D3:				; CODE XREF: .text:004018A6j
					; .text:004018E1j
		inc	dword ptr [ebp-20h]
		jmp	loc_40169D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_4017E0:				; CODE XREF: .text:00401824j
		mov	[esp], edi
		mov	edx, eax
		mov	eax, [ebp-1Ch]
		call	sub_401140
		mov	[esp], ebx
		or	esi, eax
		call	j_fclose

loc_4017F7:				; CODE XREF: .text:0040186Bj
		inc	dword ptr [ebp-20h]
		mov	edx, [ebp+8]
		cmp	[ebp-20h], edx
		jge	loc_40171A

loc_401806:				; CODE XREF: .text:00401714j
		mov	eax, [ebp+0Ch]
		mov	edx, [ebp-20h]
		mov	edi, [eax+edx*4]
		mov	eax, offset aR	; "r"
		mov	[esp+4], eax
		mov	[esp], edi
		call	j__fopen64
		test	eax, eax
		mov	ebx, eax
		jnz	short loc_4017E0
		call	j___errno
		mov	esi, [eax]
		mov	dword ptr [esp], offset	aIconvS	; "iconv: %s: "
		call	j_libintl_gettext
		mov	ebx, eax
		call	j___getreent
		mov	[esp+8], edi
		mov	[esp+4], ebx
		mov	eax, [eax+0Ch]
		mov	[esp], eax
		call	j_fprintf
		call	j___errno
		mov	[eax], esi
		mov	esi, 1
		mov	dword ptr [esp], offset	unk_4040C4
		call	j_perror
		jmp	short loc_4017F7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40186D:				; CODE XREF: .text:004017C6j
		cld
		mov	edi, offset aHelp ; "--help"
		mov	ecx, 7
		mov	esi, ebx
		repe cmpsb
		jz	loc_401959

loc_401882:				; CODE XREF: .text:00401969j
		cld
		mov	edi, offset aVersion ; "--version"
		mov	ecx, 0Ah
		mov	esi, ebx
		repe cmpsb
		jz	loc_401A44
		cld
		mov	edi, offset aBinary ; "--binary"
		mov	ecx, 9
		mov	esi, ebx
		repe cmpsb
		jz	loc_4017D3
		cmp	byte ptr [ebx],	2Dh
		jnz	loc_4016A5
		cmp	byte ptr [ebx+1], 0
		lea	esi, [ebx+1]
		jz	loc_40196E

loc_4018C2:				; CODE XREF: .text:0040197Cj
		movzx	eax, byte ptr [ebx+1]
		jmp	short loc_4018E7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4018C8:				; CODE XREF: .text:004018EDj
		cmp	eax, 73h
		jz	loc_401990
		mov	eax, 1
		call	sub_401050

loc_4018DB:				; CODE XREF: .text:004018F9j
					; .text:0040199Bj
		inc	esi
		movzx	eax, byte ptr [esi]
		test	al, al
		jz	loc_4017D3

loc_4018E7:				; CODE XREF: .text:004018C6j
		movsx	eax, al
		cmp	eax, 63h
		jnz	short loc_4018C8
		mov	eax, 1
		mov	ds:dword_405020, eax
		jmp	short loc_4018DB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4018FB:				; CODE XREF: .text:00401675j
		mov	eax, 1
		call	sub_401050
		jmp	loc_40167B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40190A:				; CODE XREF: .text:004016E1j
		mov	dword ptr [ebp-14h], offset aChar ; "char"
		jmp	loc_4016E7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401916:				; CODE XREF: .text:004016D6j
		mov	dword ptr [ebp-10h], offset aChar ; "char"
		jmp	loc_4016DC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401922:				; CODE XREF: .text:0040178Ej
		mov	eax, 1
		call	sub_401050
		jmp	loc_401794
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401931:				; CODE XREF: .text:00401709j
		mov	dword ptr [esp], offset	aStdin ; "(stdin)"
		call	j_libintl_gettext
		mov	ebx, eax
		call	j___getreent
		mov	edx, [eax+4]
		mov	eax, [ebp-1Ch]
		mov	[esp], ebx
		call	sub_401140
		mov	esi, eax
		jmp	loc_40171A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401959:				; CODE XREF: .text:0040187Cj
		xor	eax, eax
		call	sub_401050
		mov	edx, [ebp-20h]
		mov	eax, [ebp+0Ch]
		mov	ebx, [eax+edx*4]
		jmp	loc_401882
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40196E:				; CODE XREF: .text:004018BCj
		mov	eax, 1
		call	sub_401050
		cmp	byte ptr [ebx+1], 0
		jnz	loc_4018C2
		inc	dword ptr [ebp-20h]
		jmp	loc_40169D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_401990:				; CODE XREF: .text:004018CBj
		mov	edi, 1
		mov	ds:dword_405010, edi
		jmp	loc_4018DB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4019A0:				; CODE XREF: .text:004016FDj
		mov	dword ptr [esp], offset	aUcs4 ;	"UCS-4"
		mov	eax, [ebp-10h]
		mov	[esp+4], eax
		call	j_libiconv_open
		inc	eax
		jz	loc_401AB5
		mov	eax, offset aUcs4 ; "UCS-4"
		mov	[esp+4], eax
		mov	eax, [ebp-14h]
		mov	[esp], eax
		call	j_libiconv_open
		inc	eax
		jz	loc_401AF2
		mov	dword ptr [esp], offset	aIconvConversio	; "iconv: conversion from %s to	%s unsuppo"...
		call	j_libintl_gettext
		mov	ebx, eax
		call	j___getreent
		mov	[esp+4], ebx
		mov	edx, [ebp-14h]
		mov	[esp+0Ch], edx
		mov	edx, [ebp-10h]
		mov	[esp+8], edx
		mov	eax, [eax+0Ch]
		mov	[esp], eax
		call	j_fprintf

loc_401A05:				; CODE XREF: .text:00401ADEj
		mov	dword ptr [esp], 1
		call	j_exit

loc_401A11:				; CODE XREF: .text:004016AAj
		cmp	dword ptr [ebp-20h], 2
		mov	edx, [ebp+8]
		setnz	al
		cmp	[ebp-20h], edx
		setnz	dl
		or	eax, edx
		test	al, 1
		jnz	loc_401AE3

loc_401A2B:				; CODE XREF: .text:00401AEDj
		mov	dword ptr [esp], offset	sub_4010C0
		xor	ecx, ecx
		xor	esi, esi
		mov	[esp+4], ecx
		call	j_libiconvlist
		jmp	loc_401725
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401A44:				; CODE XREF: .text:00401891j
		mov	dword ptr [esp], offset	aIconvGnuLibico	; "iconv (GNU libiconv %d.%d)\n"
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 0A1h	; ¡
;
; Imports from cygiconv-2
;
_libiconv_version_0 dd ?
		dd 89D0B60Fh
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	esp
		and	al, 8
		sar	eax, 8
		mov	[esp+4], eax
		call	j_printf
		mov	dword ptr [esp], offset	aCopyrightCSFre	; "Copyright (C) %s Free Software Foundati"...
		mov	ecx, offset a20002002 ;	"2000-2002"
		mov	[esp+4], ecx
		call	j_printf
		mov	dword ptr [esp], offset	aThisIsFreeSoft	; "This	is free	software; see the source f"...
		call	j_libintl_gettext
		mov	[esp], eax
		call	j_printf
		mov	dword ptr [esp], offset	aWrittenByS_ ; "Written	by %s.\n"
		call	j_libintl_gettext
		mov	[esp], eax
		mov	edx, offset aBrunoHaible ; "Bruno Haible"
		mov	[esp+4], edx
		call	j_printf
		mov	dword ptr [esp], 0
		call	j_exit

loc_401AB5:				; CODE XREF: .text:004019B4j
		mov	dword ptr [esp], offset	aIconvConvers_0	; "iconv: conversion from %s unsupported\n"
		call	j_libintl_gettext
		mov	ebx, eax
		call	j___getreent
		mov	edx, [ebp-10h]

loc_401ACB:				; CODE XREF: .text:00401B08j
		mov	[esp+8], edx
		mov	[esp+4], ebx
		mov	eax, [eax+0Ch]
		mov	[esp], eax
		call	j_fprintf
		jmp	loc_401A05
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401AE3:				; CODE XREF: .text:00401A25j
		mov	eax, 1
		call	sub_401050
		jmp	loc_401A2B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401AF2:				; CODE XREF: .text:004019CFj
		mov	dword ptr [esp], offset	aIconvConvers_1	; "iconv: conversion to	%s unsupported\n"
		call	j_libintl_gettext
		mov	ebx, eax
		call	j___getreent
		mov	edx, [ebp-14h]
		jmp	short loc_401ACB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401B10	proc near		; CODE XREF: .text:004015EDp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	eax, 2Fh
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_C], ebx
		mov	ebx, [ebp+arg_0]
		mov	[ebp+var_8], esi
		mov	[ebp+var_4], edi
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	j_strrchr
		mov	[ebp+var_10], ebx
		test	eax, eax
		jz	short loc_401B3E
		inc	eax
		mov	[ebp+var_10], eax

loc_401B3E:				; CODE XREF: sub_401B10+28j
		mov	eax, [ebp+var_10]
		sub	eax, ebx
		cmp	eax, 6
		jle	short loc_401B60
		cld
		mov	esi, [ebp+var_10]
		mov	eax, 7
		mov	edi, offset a_libs ; "/.libs/"
		mov	ecx, eax
		sub	esi, 7
		repe cmpsb
		jz	short loc_401B90
		nop

loc_401B60:				; CODE XREF: sub_401B10+36j
					; sub_401B10+83j
		cld
		mov	esi, [ebp+var_10]
		mov	eax, 3
		mov	edi, offset aLt	; "lt-"
		mov	ecx, eax
		repe cmpsb
		jnz	short loc_401B7A
		mov	ebx, [ebp+var_10]
		add	ebx, 3

loc_401B7A:				; CODE XREF: sub_401B10+62j
		mov	ds:dword_405040, ebx
		mov	esi, [ebp+var_8]
		mov	ebx, [ebp+var_C]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_401B90:				; CODE XREF: sub_401B10+4Dj
		mov	ebx, [ebp+var_10]
		jmp	short loc_401B60
sub_401B10	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	byte_403000, 0
		jnz	short loc_401BB1
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401BB1:				; CODE XREF: .text:00401BADj
		call	j___getreent
		mov	edx, ds:dword_405040
		mov	[esp+8], edx
		mov	edx, offset aS	; "%s: "
		mov	[esp+4], edx
		mov	eax, [eax+0Ch]
		mov	[esp], eax
		call	j_fprintf
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_libintl_gettext. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_libintl_bindtextdomain.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_libintl_textdomain. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_libiconv_close.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_libiconv_open. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_libiconvlist. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_libiconvctl. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_libiconv. PRESS	KEYPAD "+" TO EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_401C60	proc near		; CODE XREF: sub_401140+Cp
					; .text:004015C1p
		push	ecx
		mov	ecx, esp
		add	ecx, 8

loc_401C66:				; CODE XREF: sub_401C60+1Bj
		cmp	eax, 1000h
		jb	short loc_401C7D
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		jmp	short loc_401C66
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401C7D:				; CODE XREF: sub_401C60+Bj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		jmp	eax
sub_401C60	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401C90	proc near		; CODE XREF: start+3Ap

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_C2		= dword	ptr -0C2h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_4], esi
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_8], ebx
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	sub_401E10
		sub	esp, 8
		test	eax, eax
		jz	short loc_401CC1
		mov	[esp+18h+var_18], 0

loc_401CBB:				; CODE XREF: sub_401C90+56j
		call	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)

loc_401CC1:				; CODE XREF: sub_401C90+22j
		sub	esp, 0C0h
		lea	ebx, [esp+0D8h+var_C2+1]
		and	ebx, 0FFFFFFF0h
		mov	dword ptr [ebx], 0
		mov	[esp+0D8h+var_D4], ebx
		mov	[esp+0D8h+var_D8], esi
		call	sub_401E10
		sub	esp, 8
		mov	[esp+0D8h+var_D8], ebx
		jmp	short loc_401CBB
sub_401C90	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j___main.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_fflush.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_fclose.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j__fopen64. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_setlocale. PRESS KEYPAD	"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_perror.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_fwrite.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j___errno. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_fread. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j__fileno. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j__setmode. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_fputs. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_putc. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_printf.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_exit. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j___getreent. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_fprintf. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_strrchr. PRESS KEYPAD "+" TO EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401E10	proc near		; CODE XREF: sub_401C90+18p
					; sub_401C90+4Bp

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		push	ebx
		sub	esp, 4
		mov	ebx, [ebp+arg_4]
		test	ebx, ebx
		jz	loc_401F13

loc_401E24:				; CODE XREF: sub_401E10+11Fj
		mov	dword ptr [ebx+4], 0A8h
		xor	ecx, ecx
		mov	edx, 84h
		mov	dword ptr [ebx+8], 3EDh
		test	eax, eax
		mov	dword ptr [ebx+0Ch], 12h
		mov	[ebx+80h], ecx
		mov	[ebx+84h], edx
		mov	dword ptr [ebx+2Ch], offset dword_402060
		mov	dword ptr [ebx+30h], offset dword_402068
		mov	dword ptr [ebx+14h], offset unk_405034
		jnz	loc_401F01
		mov	eax, ds:_impure_ptr
		mov	[ebx+10h], eax

loc_401E71:				; CODE XREF: sub_401E10+FEj
		mov	dword ptr [ebx+78h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [ebx+48h], offset sub_402030
		mov	dword ptr [ebx+4Ch], offset sub_402020
		mov	[ebx+28h], eax
		mov	eax, [ebp+0]
		mov	dword ptr [ebx+50h], offset sub_402010
		mov	dword ptr [ebx+54h], offset sub_402000
		mov	dword ptr [ebx+24h], offset unk_405030
		mov	[ebx], eax
		mov	dword ptr [ebx+18h], offset loc_401FF0
		mov	dword ptr [ebx+1Ch], offset loc_401FE0
		mov	dword ptr [ebx+20h], offset loc_401FD0
		mov	dword ptr [ebx+44h], offset loc_401FC0
		mov	[esp+8+var_8], 0
		call	j_GetModuleHandleA
		mov	[ebx+7Ch], eax
		sub	esp, 4
		mov	dword ptr [ebx+34h], offset byte_403000
		mov	dword ptr [ebx+38h], offset unk_403010
		mov	dword ptr [ebx+3Ch], offset dword_405000
		mov	dword ptr [ebx+40h], 405070h
		call	sub_401F90
		mov	eax, 1

loc_401EFA:				; CODE XREF: sub_401E10+116j
		mov	ebx, [ebp+var_4]
		leave
		retn	8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401F01:				; CODE XREF: sub_401E10+53j
		mov	edx, [ebx+0A4h]
		mov	eax, ds:_impure_ptr
		mov	[eax], edx
		jmp	loc_401E71
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401F13:				; CODE XREF: sub_401E10+Ej
		mov	[esp+8+var_8], 8
		call	j_cygwin_internal
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 0FFFFFFFFh
		jz	short loc_401EFA
		mov	ebx, edx
		mov	eax, 1
		jmp	loc_401E24
sub_401E10	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:_fopen64
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401F60	proc near		; CODE XREF: sub_401F90+1Fp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	ecx, [ebp+arg_0]
		push	esi
		mov	esi, [ebp+arg_8]
		push	ebx
		mov	ebx, [ebp+arg_4]
		jmp	short loc_401F7C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401F70:				; CODE XREF: sub_401F60+1Ej
		mov	edx, [ecx+4]
		mov	eax, [ecx]
		add	ecx, 8
		add	edx, esi
		add	[edx], eax

loc_401F7C:				; CODE XREF: sub_401F60+Ej
		cmp	ecx, ebx
		jb	short loc_401F70
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_401F60	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401F90	proc near		; CODE XREF: sub_401E10+E0p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	edx, 400000h
		mov	ebp, esp
		mov	eax, offset unk_4042E0
		sub	esp, 0Ch
		mov	[esp+0Ch+var_4], edx
		mov	[esp+0Ch+var_8], eax
		mov	[esp+0Ch+var_C], offset	unk_4042E0
		call	sub_401F60
		leave
		retn
sub_401F90	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401FC0:				; DATA XREF: sub_401E10+ABo
		jmp	ds:calloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401FD0:				; DATA XREF: sub_401E10+A4o
		jmp	ds:realloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401FE0:				; DATA XREF: sub_401E10+9Do
		jmp	ds:free
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401FF0:				; DATA XREF: sub_401E10+96o
		jmp	ds:malloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402000	proc near		; DATA XREF: sub_401E10+86o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_402000	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402010	proc near		; DATA XREF: sub_401E10+7Fo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_402010	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402020	proc near		; DATA XREF: sub_401E10+72o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_402020	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402030	proc near		; DATA XREF: sub_401E10+6Bo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_402030	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_cygwin_internal. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j_GetModuleHandleA. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
dword_402060	dd 0FFFFFFFFh, 0	; DATA XREF: sub_401E10+3Eo
dword_402068	dd 0FFFFFFFFh, 65h dup(0) ; DATA XREF: sub_401E10+45o
_text		ends

; Section 2. (virtual address 00003000)
; Virtual size			: 00000010 (	 16.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00001600
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 403000h
byte_403000	db 1			; DATA XREF: .text:00401BA6r
					; sub_401E10+C4o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
unk_403010	db    0	;		; DATA XREF: sub_401E10+CBo
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_data		ends

; Section 3. (virtual address 00004000)
; Virtual size			: 000002E0 (	736.)
; Section size in file		: 00000400 (   1024.)
; Offset to raw	data for section: 00001800
; Flags	40000040: Data Readable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 404000h
aUsageIconvCSFF	db 'Usage: iconv [-c] [-s] [-f fromcode] [-t tocode] [file ...]',0
					; DATA XREF: sub_401050+6o
aOrIconvL	db 'or:    iconv -l',0  ; DATA XREF: sub_401050+1Do
aSS		db '%s',0Ah             ; DATA XREF: sub_401050+3Do
		db '%s',0Ah,0
		align 4
aIconvSIncomple	db 'iconv: %s: incomplete character or shift sequence',0Ah,0
					; DATA XREF: sub_401140+24Ao
aIconvSCannotCo	db 'iconv: %s: cannot convert',0Ah,0 ; DATA XREF: sub_401140+2E1o
aIconvSIOError	db 'iconv: %s: I/O error',0Ah,0 ; DATA XREF: sub_401140+3A1o
aIconvS		db 'iconv: %s: ',0      ; DATA XREF: sub_401140+3B4o
					; .text:0040182Do
unk_4040C4	db    0	;		; DATA XREF: sub_401140+3E4o
					; .text:004015F9o ...
aUsrShareLocale	db '/usr/share/locale',0 ; DATA XREF: .text:004015D5o
aLibiconv	db 'libiconv',0         ; DATA XREF: .text:00401620o
					; .text:0040162Co
aF		db '-f',0               ; DATA XREF: .text:0040165Co
aIconvIOError	db 'iconv: I/O error',0Ah,0 ; DATA XREF: .text:00401747o
aT		db '-t',0               ; DATA XREF: .text:00401777o
asc_4040F8	db '-l',0               ; DATA XREF: .text:004017B8o
aR		db 'r',0                ; DATA XREF: .text:0040180Fo
aHelp		db '--help',0           ; DATA XREF: .text:0040186Eo
aVersion	db '--version',0        ; DATA XREF: .text:00401883o
aBinary		db '--binary',0         ; DATA XREF: .text:00401898o
aChar		db 'char',0             ; DATA XREF: .text:0040190Ao
					; .text:00401916o
aStdin		db '(stdin)',0          ; DATA XREF: .text:00401931o
aUcs4		db 'UCS-4',0            ; DATA XREF: .text:004019A0o
					; .text:004019BAo
		align 4
aIconvConversio	db 'iconv: conversion from %s to %s unsupported',0Ah,0
					; DATA XREF: .text:004019D5o
aIconvGnuLibico	db 'iconv (GNU libiconv %d.%d)',0Ah,0 ; DATA XREF: .text:00401A44o
		align 4
aCopyrightCSFre	db 'Copyright (C) %s Free Software Foundation, Inc.',0Ah,0
					; DATA XREF: .text:00401A63o
a20002002	db '2000-2002',0        ; DATA XREF: .text:00401A6Ao
		align 4
aThisIsFreeSoft	db 'This is free software; see the source for copying conditions'
					; DATA XREF: .text:00401A78o
		db '.  There is NO',0Ah
		db 'warranty; not even for MERCHANTABILITY or FITNESS FOR A PART'
		db 'ICULAR PURPOSE.',0Ah,0
aWrittenByS_	db 'Written by %s.',0Ah,0 ; DATA XREF: .text:00401A8Co
aBrunoHaible	db 'Bruno Haible',0     ; DATA XREF: .text:00401A9Bo
		align 4
aIconvConvers_0	db 'iconv: conversion from %s unsupported',0Ah,0
					; DATA XREF: .text:00401AB5o
		align 4
aIconvConvers_1	db 'iconv: conversion to %s unsupported',0Ah,0 ; DATA XREF: .text:00401AF2o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
a_libs		db '/.libs/',0          ; DATA XREF: sub_401B10+41o
aLt		db 'lt-',0              ; DATA XREF: sub_401B10+59o
aS		db '%s: ',0             ; DATA XREF: .text:00401BC0o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
unk_4042E0	db    0	;		; DATA XREF: sub_401F90+8o
					; sub_401F90+18o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_rdata		ends

; Section 4. (virtual address 00005000)
; Virtual size			: 00000070 (	112.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0000080: Bss Readable Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 405000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_405000	dd ?			; DATA XREF: start+9r sub_401E10+D2o
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_405010	dd ?			; DATA XREF: sub_401140+212r
					; sub_401140+240r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_405020	dd ?			; DATA XREF: sub_401140+1A7r
					; sub_401140+1F0w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
unk_405030	db    ?	;		; DATA XREF: sub_401E10+8Do
		db    ?	;
		db    ?	;
		db    ?	;
unk_405034	db    ?	;		; DATA XREF: sub_401E10+4Co
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_405040	dd ?			; DATA XREF: sub_401B10+6Aw
					; .text:00401BB6r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
_bss		ends

; Section 5. (virtual address 00006000)
; Virtual size			: 000004B0 (   1200.)
; Section size in file		: 00000600 (   1536.)
; Offset to raw	data for section: 00001C00
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read/Write
_idata		segment	para public 'DATA' use32
		assume cs:_idata
		;org 406000h
		db  7Ch	; |
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  48h	; H
		db  64h	; d
		db    0	;
		db    0	;
		db  34h	; 4
		db  61h	; a
		db    0	;
		db    0	;
		db 0ECh	; ì
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  70h	; p
		db  64h	; d
		db    0	;
		db    0	;
		db 0A4h	; ¤
		db  61h	; a
		db    0	;
		db    0	;
		db  0Ch	;
		db  61h	; a
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  8Ch	; 
		db  64h	; d
		db    0	;
		db    0	;
		db 0C4h	; Ä
		db  61h	; a
		db    0	;
		db    0	;
		db  20h	;
		db  61h	; a
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A0h	;  
		db  64h	; d
		db    0	;
		db    0	;
		db 0D8h	; Ø
		db  61h	; a
		db    0	;
		db    0	;
		db  28h	; (
		db  61h	; a
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  70h	; p
		db  64h	; d
		db    0	;
		db    0	;
		db  4Ch	; L
		db  1Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0E0h	; à
		db  61h	; a
		db    0	;
		db    0	;
		db 0ECh	; ì
		db  61h	; a
		db    0	;
		db    0	;
		db 0FCh	; ü
		db  61h	; a
		db    0	;
		db    0	;
		db    8	;
		db  62h	; b
		db    0	;
		db    0	;
		db  14h	;
		db  62h	; b
		db    0	;
		db    0	;
		db  20h	;
		db  62h	; b
		db    0	;
		db    0	;
		db  30h	; 0
		db  62h	; b
		db    0	;
		db    0	;
		db  3Ch	; <
		db  62h	; b
		db    0	;
		db    0	;
		db  48h	; H
		db  62h	; b
		db    0	;
		db    0	;
		db  5Ch	; \
		db  62h	; b
		db    0	;
		db    0	;
		db  78h	; x
		db  62h	; b
		db    0	;
		db    0	;
		db  80h	; 
		db  62h	; b
		db    0	;
		db    0	;
		db  8Ch	; 
		db  62h	; b
		db    0	;
		db    0	;
		db  98h	; 
		db  62h	; b
		db    0	;
		db    0	;
		db 0A4h	; ¤
		db  62h	; b
		db    0	;
		db    0	;
		db 0ACh	; ¬
		db  62h	; b
		db    0	;
		db    0	;
		db 0B4h	; ´
		db  62h	; b
		db    0	;
		db    0	;
		db 0BCh	; ¼
		db  62h	; b
		db    0	;
		db    0	;
		db 0C8h	; È
		db  62h	; b
		db    0	;
		db    0	;
		db 0D4h	; Ô
		db  62h	; b
		db    0	;
		db    0	;
		db 0E0h	; à
		db  62h	; b
		db    0	;
		db    0	;
		db 0ECh	; ì
		db  62h	; b
		db    0	;
		db    0	;
		db 0F4h	; ô
		db  62h	; b
		db    0	;
		db    0	;
		db    0	;
		db  63h	; c
		db    0	;
		db    0	;
		db  0Ch	;
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  24h	; $
		db  63h	; c
		db    0	;
		db    0	;
		db  38h	; 8
		db  63h	; c
		db    0	;
		db    0	;
		db  44h	; D
		db  63h	; c
		db    0	;
		db    0	;
		db  58h	; X
		db  63h	; c
		db    0	;
		db    0	;
		db  68h	; h
		db  63h	; c
		db    0	;
		db    0	;
		db  78h	; x
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  88h	; 
		db  63h	; c
		db    0	;
		db    0	;
		db 0A4h	; ¤
		db  63h	; c
		db    0	;
		db    0	;
		db 0B8h	; ¸
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0D0h	; Ğ
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  24h	; $
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
;
; Imports from cygwin1
;
__errno		dd ?			; DATA XREF: j___errnor
__getreent	dd ?			; DATA XREF: j___getreentr
__main		dd ?			; DATA XREF: j___mainr
_fileno		dd ?			; DATA XREF: j__filenor
_fopen64	dd ?			; DATA XREF: j__fopen64r
					; .text:00401F50r
_impure_ptr	dd ?			; DATA XREF: sub_401E10+59r
					; sub_401E10+F7r
_setmode	dd ?			; DATA XREF: j__setmoder
calloc		dd ?			; DATA XREF: .text:00401FC0r
cygwin_internal	dd ?			; DATA XREF: j_cygwin_internalr
; dll_crt0(per_process *)
dll_crt0__FP11per_process dd ?		; DATA XREF: sub_401C90+2Br
					; .text:00401F40r
exit		dd ?			; DATA XREF: j_exitr
fclose		dd ?			; DATA XREF: j_fcloser
fflush		dd ?			; DATA XREF: j_fflushr
fprintf		dd ?			; DATA XREF: j_fprintfr
fputs		dd ?			; DATA XREF: j_fputsr
fread		dd ?			; DATA XREF: j_freadr
free		dd ?			; DATA XREF: .text:00401FE0r
fwrite		dd ?			; DATA XREF: j_fwriter
malloc		dd ?			; DATA XREF: .text:00401FF0r
perror		dd ?			; DATA XREF: j_perrorr
printf		dd ?			; DATA XREF: j_printfr
putc		dd ?			; DATA XREF: j_putcr
realloc		dd ?			; DATA XREF: .text:00401FD0r
setlocale	dd ?			; DATA XREF: j_setlocaler
strrchr		dd ?			; DATA XREF: j_strrchrr
		dd 0
		db  18h	;
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
;
; Imports from cygiconv-2
;
_libiconv_version dd ?
libiconv	dd ?			; DATA XREF: j_libiconvr
libiconv_close	dd ?			; DATA XREF: j_libiconv_closer
libiconv_open	dd ?			; DATA XREF: j_libiconv_openr
libiconvctl	dd ?			; DATA XREF: j_libiconvctlr
libiconvlist	dd ?			; DATA XREF: j_libiconvlistr
		dd 0
		db    0	;
		db    0	;
		db    0	;
		db    0	;
;
; Imports from cygintl-3
;
libintl_bindtextdomain dd ?		; DATA XREF: j_libintl_bindtextdomainr
libintl_gettext	dd ?			; DATA XREF: j_libintl_gettextr
libintl_textdomain dd ?			; DATA XREF: j_libintl_textdomainr
		dd 0
		db    0	;
		db    0	;
		db    0	;
		db    0	;
;
; Imports from KERNEL32
;
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
GetModuleHandleA dd ?			; DATA XREF: j_GetModuleHandleAr
		dd 0
		db  1Ah	;
		db    0	;
		db  5Fh	; _
		db  5Fh	; _
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Eh	; n
		db  6Fh	; o
		db    0	;
		db  5Fh	; _
		db    0	;
		db  2Dh	; -
		db    0	;
		db  5Fh	; _
		db  5Fh	; _
		db  67h	; g
		db  65h	; e
		db  74h	; t
		db  72h	; r
		db  65h	; e
		db  65h	; e
		db  6Eh	; n
		db  74h	; t
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Fh	; /
		db    0	;
		db  5Fh	; _
		db  5Fh	; _
		db  6Dh	; m
		db  61h	; a
		db  69h	; i
		db  6Eh	; n
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0D5h	; Õ
		db    0	;
		db  5Fh	; _
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  6Eh	; n
		db  6Fh	; o
		db    0	;
		db    0	;
		db    0	;
		db 0DFh	; ß
		db    0	;
		db  5Fh	; _
		db  66h	; f
		db  6Fh	; o
		db  70h	; p
		db  65h	; e
		db  6Eh	; n
		db  36h	; 6
		db  34h	; 4
		db    0	;
		db    0	;
		db  3Eh	; >
		db    1	;
		db  5Fh	; _
		db  69h	; i
		db  6Dh	; m
		db  70h	; p
		db  75h	; u
		db  72h	; r
		db  65h	; e
		db  5Fh	; _
		db  70h	; p
		db  74h	; t
		db  72h	; r
		db    0	;
		db    0	;
		db    0	;
		db 0DFh	; ß
		db    1	;
		db  5Fh	; _
		db  73h	; s
		db  65h	; e
		db  74h	; t
		db  6Dh	; m
		db  6Fh	; o
		db  64h	; d
		db  65h	; e
		db    0	;
		db    0	;
		db 0B1h	; ±
		db    2	;
		db  63h	; c
		db  61h	; a
		db  6Ch	; l
		db  6Ch	; l
		db  6Fh	; o
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0E7h	; ç
		db    2	;
		db  63h	; c
		db  79h	; y
		db  67h	; g
		db  77h	; w
		db  69h	; i
		db  6Eh	; n
		db  5Fh	; _
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  6Eh	; n
		db  61h	; a
		db  6Ch	; l
		db    0	;
		db    0	;
		db    0	;
		db 0FBh	; û
		db    2	;
		db  64h	; d
		db  6Ch	; l
		db  6Ch	; l
		db  5Fh	; _
		db  63h	; c
		db  72h	; r
		db  74h	; t
		db  30h	; 0
		db  5Fh	; _
		db  5Fh	; _
		db  46h	; F
		db  50h	; P
		db  31h	; 1
		db  31h	; 1
		db  70h	; p
		db  65h	; e
		db  72h	; r
		db  5Fh	; _
		db  70h	; p
		db  72h	; r
		db  6Fh	; o
		db  63h	; c
		db  65h	; e
		db  73h	; s
		db  73h	; s
		db    0	;
		db  25h	; %
		db    3	;
		db  65h	; e
		db  78h	; x
		db  69h	; i
		db  74h	; t
		db    0	;
		db    0	;
		db  32h	; 2
		db    3	;
		db  66h	; f
		db  63h	; c
		db  6Ch	; l
		db  6Fh	; o
		db  73h	; s
		db  65h	; e
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Fh	; ?
		db    3	;
		db  66h	; f
		db  66h	; f
		db  6Ch	; l
		db  75h	; u
		db  73h	; s
		db  68h	; h
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  59h	; Y
		db    3	;
		db  66h	; f
		db  70h	; p
		db  72h	; r
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  66h	; f
		db    0	;
		db    0	;
		db    0	;
		db  5Bh	; [
		db    3	;
		db  66h	; f
		db  70h	; p
		db  75h	; u
		db  74h	; t
		db  73h	; s
		db    0	;
		db  5Ch	; \
		db    3	;
		db  66h	; f
		db  72h	; r
		db  65h	; e
		db  61h	; a
		db  64h	; d
		db    0	;
		db  5Dh	; ]
		db    3	;
		db  66h	; f
		db  72h	; r
		db  65h	; e
		db  65h	; e
		db    0	;
		db    0	;
		db  71h	; q
		db    3	;
		db  66h	; f
		db  77h	; w
		db  72h	; r
		db  69h	; i
		db  74h	; t
		db  65h	; e
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db    4	;
		db  6Dh	; m
		db  61h	; a
		db  6Ch	; l
		db  6Ch	; l
		db  6Fh	; o
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  76h	; v
		db    4	;
		db  70h	; p
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  80h	; 
		db    4	;
		db  70h	; p
		db  72h	; r
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  66h	; f
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0D0h	; Ğ
		db    4	;
		db  70h	; p
		db  75h	; u
		db  74h	; t
		db  63h	; c
		db    0	;
		db    0	;
		db 0E3h	; ã
		db    4	;
		db  72h	; r
		db  65h	; e
		db  61h	; a
		db  6Ch	; l
		db  6Ch	; l
		db  6Fh	; o
		db  63h	; c
		db    0	;
		db    0	;
		db    0	;
		db  31h	; 1
		db    5	;
		db  73h	; s
		db  65h	; e
		db  74h	; t
		db  6Ch	; l
		db  6Fh	; o
		db  63h	; c
		db  61h	; a
		db  6Ch	; l
		db  65h	; e
		db    0	;
		db 0A0h	;  
		db    5	;
		db  73h	; s
		db  74h	; t
		db  72h	; r
		db  72h	; r
		db  63h	; c
		db  68h	; h
		db  72h	; r
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db  5Fh	; _
		db  66h	; f
		db  6Fh	; o
		db  70h	; p
		db  65h	; e
		db  6Eh	; n
		db  36h	; 6
		db  34h	; 4
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  5Fh	; _
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db  76h	; v
		db  5Fh	; _
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db  73h	; s
		db  69h	; i
		db  6Fh	; o
		db  6Eh	; n
		db    0	;
		db    3	;
		db    0	;
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db  76h	; v
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db  76h	; v
		db  5Fh	; _
		db  63h	; c
		db  6Ch	; l
		db  6Fh	; o
		db  73h	; s
		db  65h	; e
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db  76h	; v
		db  5Fh	; _
		db  6Fh	; o
		db  70h	; p
		db  65h	; e
		db  6Eh	; n
		db    0	;
		db    8	;
		db    0	;
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db  76h	; v
		db  63h	; c
		db  74h	; t
		db  6Ch	; l
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db    0	;
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db  76h	; v
		db  6Ch	; l
		db  69h	; i
		db  73h	; s
		db  74h	; t
		db    0	;
		db    0	;
		db  18h	;
		db    0	;
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  6Ch	; l
		db  5Fh	; _
		db  62h	; b
		db  69h	; i
		db  6Eh	; n
		db  64h	; d
		db  74h	; t
		db  65h	; e
		db  78h	; x
		db  74h	; t
		db  64h	; d
		db  6Fh	; o
		db  6Dh	; m
		db  61h	; a
		db  69h	; i
		db  6Eh	; n
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  6Ch	; l
		db  5Fh	; _
		db  67h	; g
		db  65h	; e
		db  74h	; t
		db  74h	; t
		db  65h	; e
		db  78h	; x
		db  74h	; t
		db    0	;
		db    0	;
		db    0	;
		db  2Ah	; *
		db    0	;
		db  6Ch	; l
		db  69h	; i
		db  62h	; b
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  6Ch	; l
		db  5Fh	; _
		db  74h	; t
		db  65h	; e
		db  78h	; x
		db  74h	; t
		db  64h	; d
		db  6Fh	; o
		db  6Dh	; m
		db  61h	; a
		db  69h	; i
		db  6Eh	; n
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db    1	;
		db  47h	; G
		db  65h	; e
		db  74h	; t
		db  4Dh	; M
		db  6Fh	; o
		db  64h	; d
		db  75h	; u
		db  6Ch	; l
		db  65h	; e
		db  48h	; H
		db  61h	; a
		db  6Eh	; n
		db  64h	; d
		db  6Ch	; l
		db  65h	; e
		db  41h	; A
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  63h	; c
		db  79h	; y
		db  67h	; g
		db  77h	; w
		db  69h	; i
		db  6Eh	; n
		db  31h	; 1
		db  2Eh	; .
		db  64h	; d
		db  6Ch	; l
		db  6Ch	; l
		db    0	;
		db    0	;
		db  60h	; `
		db  40h	; @
		db    0	;
		db  14h	;
		db  60h	; `
		db    0	;
		db    0	;
		db  14h	;
		db  60h	; `
		db    0	;
		db    0	;
		db  14h	;
		db  60h	; `
		db    0	;
		db    0	;
		db  14h	;
		db  60h	; `
		db    0	;
		db    0	;
		db  14h	;
		db  60h	; `
		db    0	;
		db    0	;
		db  14h	;
		db  60h	; `
		db    0	;
		db    0	;
		db  63h	; c
		db  79h	; y
		db  67h	; g
		db  69h	; i
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db  76h	; v
		db  2Dh	; -
		db  32h	; 2
		db  2Eh	; .
		db  64h	; d
		db  6Ch	; l
		db  6Ch	; l
		db    0	;
		db    0	;
		db  28h	; (
		db  60h	; `
		db    0	;
		db    0	;
		db  28h	; (
		db  60h	; `
		db    0	;
		db    0	;
		db  28h	; (
		db  60h	; `
		db    0	;
		db    0	;
		db  63h	; c
		db  79h	; y
		db  67h	; g
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  6Ch	; l
		db  2Dh	; -
		db  33h	; 3
		db  2Eh	; .
		db  64h	; d
		db  6Ch	; l
		db  6Ch	; l
		db    0	;
		db    0	;
		db    0	;
		db  3Ch	; <
		db  60h	; `
		db    0	;
		db    0	;
		db  4Bh	; K
		db  45h	; E
		db  52h	; R
		db  4Eh	; N
		db  45h	; E
		db  4Ch	; L
		db  33h	; 3
		db  32h	; 2
		db  2Eh	; .
		db  64h	; d
		db  6Ch	; l
		db  6Ch	; l
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_idata		ends


		end start
