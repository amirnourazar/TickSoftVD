

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2003 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; º Licensed to: Mark Stamp, San Jose State University,	1 user,	academic, 11/2003 º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	C:\Documents and Settings\Fiona\My Documents\CS	298_Metamorphic	virus\HMM\Cygwin\fc-cache.exe
; Format      :	Portable executable for	IBM PC (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00001464 (   5220.)
; Section size in file		: 00001600 (   5632.)
; Offset to raw	data for section: 00000400
; Flags	60000060: Text Data Executable Readable
; Alignment	: 16 bytes ?

		model flat

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 401000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

		public start
start		proc near

var_8		= dword	ptr -8
var_2		= word ptr -2

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, ds:dword_404000
		test	eax, eax
		jz	short loc_401010
		int	3		; Trap to Debugger

loc_401010:				; CODE XREF: start+Dj
		fnstcw	[ebp+var_2]
		movzx	eax, [ebp+var_2]
		and	eax, 0FFFFF0C0h
		mov	[ebp+var_2], ax
		movzx	eax, [ebp+var_2]
		or	eax, 33Fh
		mov	[ebp+var_2], ax
		fldcw	[ebp+var_2]
		mov	[esp+8+var_8], offset sub_401A00
		call	sub_402050
		mov	esp, ebp
		pop	ebp
		retn
start		endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401040:				; CODE XREF: .text:00402444j
		push	ebp
		mov	ebp, esp
		pop	ebp
		jmp	loc_401DB0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8
aForce		db 'force',0            ; DATA XREF: .text:00401090o
aSystemOnly	db 'system-only',0
aVersion	db 'version',0
aVerbose	db 'verbose',0
aHelp		db 'help',0
		dd 6 dup(90909090h)
		align 4
off_401090	dd offset aForce	; DATA XREF: sub_401A00+38o
					; "force"
		dd 2 dup(0), 66h, 401056h, 2 dup(0), 73h, 401062h, 2 dup(0)
		dd 56h,	40106Ah, 2 dup(0), 76h,	401072h, 2 dup(0), 3Fh
		dd 4 dup(0)
aUsageSFvv?Forc	db 'usage: %s [-fvV?] [--force] [--verbose] [--version] [--help]'
					; DATA XREF: sub_401310+Bo
		db ' [dirs]',0Ah,0
		dd 6 dup(90909090h)
		align 4
aBuildFontInfor	db 'Build font information caches in [dirs]',0Ah ; DATA XREF: sub_401310+41o
		db '(all directories in font configuration by default).',0Ah,0
		align 4
aFForceScanDire	db '  -f, --force          scan directories with apparently vali'
					; DATA XREF: sub_401310+81o
		db 'd caches',0Ah,0
		dd 6 dup(90909090h)
		align 4
aSSystemOnlySca	db '  -s, --system-only    scan system-wide directories only',0Ah
					; DATA XREF: sub_401310+A9o
		db 0
		align 8
aVVerboseDispla	db '  -v, --verbose        display status information while busy'
					; DATA XREF: sub_401310+D1o
		db 0Ah,0
		align 4
aVVersionDispla	db '  -V, --version        display font config version and exit',0Ah
					; DATA XREF: sub_401310+F9o
		db 0
		align 4
a?HelpDisplayTh	db '  -?, --help           display this help and exit',0Ah,0
					; DATA XREF: sub_401310+121o
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401310	proc near		; CODE XREF: sub_401A00+71p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	__getreent
		mov	[esp+18h+var_14], offset aUsageSFvv?Forc ; "usage: %s [-fvV?] [--force]	[--verbose]"...
		mov	edx, [ebp+arg_0]
		mov	[esp+18h+var_10], edx
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_18], eax
		call	fprintf
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_10], 5Ch
		mov	[esp+18h+var_14], 1
		mov	[esp+18h+var_C], eax
		mov	[esp+18h+var_18], offset aBuildFontInfor ; "Build font information caches in [dirs]"...
		call	fwrite
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_18], 0Ah
		mov	[esp+18h+var_14], eax
		call	fputc
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_10], 45h
		mov	[esp+18h+var_14], 1
		mov	[esp+18h+var_C], eax
		mov	[esp+18h+var_18], offset aFForceScanDire ; "  -f, --force	   scan	directories"...
		call	fwrite
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_10], 39h
		mov	[esp+18h+var_14], 1
		mov	[esp+18h+var_C], eax
		mov	[esp+18h+var_18], offset aSSystemOnlySca ; "  -s, --system-only	   scan	system-wide"...
		call	fwrite
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_10], 3Dh
		mov	[esp+18h+var_14], 1
		mov	[esp+18h+var_C], eax
		mov	[esp+18h+var_18], offset aVVerboseDispla ; "  -v, --verbose	   display status i"...
		call	fwrite
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_10], 3Ch
		mov	[esp+18h+var_14], 1
		mov	[esp+18h+var_C], eax
		mov	[esp+18h+var_18], offset aVVersionDispla ; "  -V, --version	   display font	con"...
		call	fwrite
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_10], 32h
		mov	[esp+18h+var_14], 1
		mov	[esp+18h+var_C], eax
		mov	[esp+18h+var_18], offset a?HelpDisplayTh ; "  -?, --help	   display this	hel"...
		call	fwrite
		mov	[esp+18h+var_18], 1
		call	exit
		lea	esi, [esi+0]
sub_401310	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401450	proc near		; CODE XREF: sub_4015E0+1AFp
					; sub_4015E0+1EDp

var_18		= dword	ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		xor	esi, esi
		push	ebx
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	FcStrListCreate
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_401489
		lea	esi, [esi+0]

loc_401470:				; CODE XREF: sub_401450+2Dj
		mov	[esp+18h+var_18], ebx
		call	FcStrListNext
		test	eax, eax
		jz	short loc_40147F
		inc	esi
		jmp	short loc_401470
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40147F:				; CODE XREF: sub_401450+2Aj
		mov	[esp+18h+var_18], ebx
		call	FcStrListDone
		mov	eax, esi

loc_401489:				; CODE XREF: sub_401450+1Bj
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_401450	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
aSNotADirectory	db '"%s": not a directory, skipping',0Ah,0 ; DATA XREF: sub_4015E0+A4o
		dd 7 dup(90909090h)
		align 4
aCanTCreateSubd	db 'Can',27h,'t create subdir list in "%s"',0Ah,0
					; DATA XREF: sub_4015E0+16Do
aCanTSaveCacheI	db 'Can',27h,'t save cache in "%s"',0Ah,0 ; DATA XREF: sub_4015E0+191o
aCachingDFontsD	db 'caching, %d fonts, %d dirs',0Ah,0 ; DATA XREF: sub_4015E0+1BAo
aSkippingDFonts	db 'skipping, %d fonts, %d dirs',0Ah,0 ; DATA XREF: sub_4015E0+1F8o
aSErrorScanning	db '"%s": error scanning',0Ah,0 ; DATA XREF: sub_4015E0+219o
aS		db '"%s": ',0           ; DATA XREF: sub_4015E0+22Fo
byte_401562	db 0			; DATA XREF: sub_4015E0+242o
aSkippingNoSuch	db 'skipping, no such directory',0 ; DATA XREF: sub_4015E0+274o
aSkippingNoWrit	db 'skipping, no write access',0 ; DATA XREF: sub_4015E0+29Ao
aCanTCreateDire	db 'Can',27h,'t create directory set',0Ah,0 ; DATA XREF: sub_4015E0+2BFo
aCanTCreateFont	db 'Can',27h,'t create font set',0Ah,0 ; DATA XREF: sub_4015E0+2ECo
aSS		db '%s: "%s": ',0       ; DATA XREF: sub_4015E0+2FCo
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4015E0	proc near		; CODE XREF: sub_4015E0+14Fp
					; sub_401A00+123p

var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_68		= dword	ptr -68h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 9Ch
		mov	[ebp+var_7C], 0
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401600:				; CODE XREF: sub_4015E0+B7j
					; sub_4015E0+15Fj ...
		mov	eax, [ebp+arg_0]
		mov	[esp+0A8h+var_A8], eax
		call	FcStrListNext
		test	eax, eax
		mov	ebx, eax
		jz	loc_401901
		mov	edi, [ebp+arg_10]
		test	edi, edi
		jnz	loc_4018D5

loc_401620:				; CODE XREF: sub_4015E0+31Cj
		call	FcFontSetCreate
		test	eax, eax
		mov	edi, eax
		jz	loc_4018B0
		call	FcStrSetCreate
		test	eax, eax
		mov	esi, eax
		jz	loc_401883
		mov	[esp+0A8h+var_A4], 2
		mov	[esp+0A8h+var_A8], ebx
		call	access
		test	eax, eax
		js	loc_401833
		mov	[esp+0A8h+var_A8], ebx
		lea	eax, [ebp+var_78]
		mov	[esp+0A8h+var_A4], eax
		call	_stat64
		inc	eax
		jz	loc_401806
		mov	eax, [ebp+var_68]
		and	eax, 0F000h
		cmp	eax, 4000h
		jz	short loc_40169C
		call	__getreent
		mov	[esp+0A8h+var_A0], ebx
		mov	[esp+0A8h+var_A4], offset aSNotADirectory ; "\"%s\": not a directory, skipping\n"
		mov	eax, [eax+0Ch]
		mov	[esp+0A8h+var_A8], eax
		call	fprintf
		jmp	loc_401600
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40169C:				; CODE XREF: sub_4015E0+99j
		mov	edx, [ebp+arg_4]
		mov	[esp+0A8h+var_A8], edx
		call	FcConfigGetBlanks
		mov	[esp+0A8h+var_9C], eax
		mov	edx, [ebp+arg_C]
		mov	[esp+0A8h+var_98], ebx
		mov	[esp+0A8h+var_A0], 0
		mov	[esp+0A8h+var_94], edx
		mov	[esp+0A8h+var_A4], esi
		mov	[esp+0A8h+var_A8], edi
		call	FcDirScan
		test	eax, eax
		jz	loc_4017F0
		mov	ecx, [ebp+arg_C]
		test	ecx, ecx
		jz	loc_4017AF

loc_4016DD:				; CODE XREF: sub_4015E0+1D9j
		mov	eax, [ebp+arg_10]
		test	eax, eax
		jnz	loc_40178C

loc_4016E8:				; CODE XREF: sub_4015E0+1CAj
		mov	[esp+0A8h+var_A0], ebx
		mov	[esp+0A8h+var_A4], esi
		mov	[esp+0A8h+var_A8], edi
		call	FcDirSave
		test	eax, eax
		jz	short loc_401768

loc_4016FC:				; CODE XREF: sub_4015E0+1A7j
					; sub_4015E0+1E4j ...
		mov	[esp+0A8h+var_A8], edi
		call	FcFontSetDestroy
		mov	[esp+0A8h+var_A8], esi
		call	FcStrListCreate
		test	eax, eax
		jz	short loc_401744
		mov	[esp+0A8h+var_A8], eax
		mov	edx, [ebp+arg_10]
		mov	[esp+0A8h+var_98], edx
		mov	edx, [ebp+arg_C]
		mov	[esp+0A8h+var_9C], edx
		mov	edx, [ebp+arg_8]
		mov	[esp+0A8h+var_A0], edx
		mov	edx, [ebp+arg_4]
		mov	[esp+0A8h+var_A4], edx
		call	sub_4015E0
		add	[ebp+var_7C], eax
		mov	[esp+0A8h+var_A8], esi
		call	FcStrSetDestroy
		jmp	loc_401600
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401744:				; CODE XREF: sub_4015E0+12Ej
		call	__getreent
		mov	[esp+0A8h+var_A0], ebx
		mov	[esp+0A8h+var_A4], offset aCanTCreateSubd ; "Can't create subdir list in \"%s\"\n"

loc_401755:				; CODE XREF: sub_4015E0+221j
		mov	eax, [eax+0Ch]
		mov	[esp+0A8h+var_A8], eax
		call	fprintf

loc_401760:				; CODE XREF: sub_4015E0+24Ej
					; sub_4015E0+2CBj
		inc	[ebp+var_7C]
		jmp	loc_401600
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401768:				; CODE XREF: sub_4015E0+11Aj
		call	__getreent
		mov	[esp+0A8h+var_A0], ebx
		mov	[esp+0A8h+var_A4], offset aCanTSaveCacheI ; "Can't save cache in \"%s\"\n"
		mov	eax, [eax+0Ch]
		mov	[esp+0A8h+var_A8], eax
		call	fprintf
		inc	[ebp+var_7C]
		jmp	loc_4016FC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40178C:				; CODE XREF: sub_4015E0+102j
		mov	[esp+0A8h+var_A8], esi
		call	sub_401450
		mov	[esp+0A8h+var_A0], eax
		mov	eax, [edi]
		mov	[esp+0A8h+var_A8], offset aCachingDFontsD ; "caching, %d fonts,	%d dirs\n"
		mov	[esp+0A8h+var_A4], eax
		call	printf
		jmp	loc_4016E8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4017AF:				; CODE XREF: sub_4015E0+F7j
		mov	[esp+0A8h+var_A8], ebx
		call	FcDirCacheValid
		test	eax, eax
		jz	loc_4016DD
		mov	edx, [ebp+arg_10]
		test	edx, edx
		jz	loc_4016FC
		mov	[esp+0A8h+var_A8], esi
		call	sub_401450
		mov	[esp+0A8h+var_A0], eax
		mov	eax, [edi]
		mov	[esp+0A8h+var_A8], offset aSkippingDFonts ; "skipping, %d fonts, %d dirs\n"
		mov	[esp+0A8h+var_A4], eax
		call	printf
		jmp	loc_4016FC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_4017F0:				; CODE XREF: sub_4015E0+ECj
		call	__getreent
		mov	[esp+0A8h+var_A0], ebx
		mov	[esp+0A8h+var_A4], offset aSErrorScanning ; "\"%s\": error scanning\n"
		jmp	loc_401755
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401806:				; CODE XREF: sub_4015E0+86j
					; sub_4015E0+267j ...
		call	__getreent
		mov	[esp+0A8h+var_A0], ebx
		mov	[esp+0A8h+var_A4], offset aS ; "\"%s\":	"
		mov	eax, [eax+0Ch]
		mov	[esp+0A8h+var_A8], eax
		call	fprintf
		mov	[esp+0A8h+var_A8], offset byte_401562
		call	perror
		jmp	loc_401760
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401833:				; CODE XREF: sub_4015E0+70j
		call	__errno
		mov	eax, [eax]
		cmp	eax, 0Dh
		jz	short loc_40186F
		cmp	eax, 0Dh
		jg	short loc_401865
		cmp	eax, 2
		jnz	short loc_401806

loc_401849:				; CODE XREF: sub_4015E0+288j
		mov	esi, [ebp+arg_10]
		test	esi, esi
		jz	loc_401600
		mov	[esp+0A8h+var_A8], offset aSkippingNoSuch ; "skipping, no such directory"

loc_40185B:				; CODE XREF: sub_4015E0+2A1j
		call	puts
		jmp	loc_401600
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401865:				; CODE XREF: sub_4015E0+262j
		cmp	eax, 14h
		jz	short loc_401849
		cmp	eax, 1Eh
		jnz	short loc_401806

loc_40186F:				; CODE XREF: sub_4015E0+25Dj
		mov	ebx, [ebp+arg_10]
		test	ebx, ebx
		jz	loc_401600
		mov	[esp+0A8h+var_A8], offset aSkippingNoWrit ; "skipping, no write	access"
		jmp	short loc_40185B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401883:				; CODE XREF: sub_4015E0+58j
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+0A8h+var_A0], 1Bh
		mov	[esp+0A8h+var_A4], 1
		mov	[esp+0A8h+var_9C], eax
		mov	[esp+0A8h+var_A8], offset aCanTCreateDire ; "Can't create directory set\n"

loc_4018A6:				; CODE XREF: sub_4015E0+2F3j
		call	fwrite
		jmp	loc_401760
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4018B0:				; CODE XREF: sub_4015E0+49j
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+0A8h+var_A0], 16h
		mov	[esp+0A8h+var_A4], 1
		mov	[esp+0A8h+var_9C], eax
		mov	[esp+0A8h+var_A8], offset aCanTCreateFont ; "Can't create font set\n"
		jmp	short loc_4018A6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4018D5:				; CODE XREF: sub_4015E0+3Aj
		mov	[esp+0A8h+var_A0], ebx
		mov	eax, [ebp+arg_8]
		mov	[esp+0A8h+var_A8], offset aSS ;	"%s: \"%s\": "
		mov	[esp+0A8h+var_A4], eax
		call	printf
		call	__getreent
		mov	eax, [eax+8]
		mov	[esp+0A8h+var_A8], eax
		call	fflush
		jmp	loc_401620
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401901:				; CODE XREF: sub_4015E0+2Fj
		mov	edx, [ebp+arg_0]
		mov	[esp+0A8h+var_A8], edx
		call	FcStrListDone
		mov	eax, [ebp+var_7C]
		add	esp, 9Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_4015E0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
dword_40191A	dd 3F765666h		; DATA XREF: sub_401A00+40o
		db 0
aFailed		db 'failed',0           ; DATA XREF: sub_401A00+133o
aSucceeded	db 'succeeded',0        ; DATA XREF: sub_401A00+13Ao
aSS_0		db '%s: %s',0Ah,0       ; DATA XREF: sub_401A00+145o
aSCanTAddDirect	db '%s: Can',27h,'t add directory',0Ah,0 ; DATA XREF: sub_401A00+166o
		dd 7 dup(90909090h)
		align 4
aSCanTCreateLis	db '%s: Can',27h,'t create list of directories',0Ah,0
					; DATA XREF: sub_401A00+18Bo
		dd 6 dup(90909090h)
		align 4
aSCanTInitFontC	db '%s: Can',27h,'t init font config library',0Ah,0
					; DATA XREF: sub_401A00+1AEo
aFontconfigVers	db 'fontconfig version %d.%d.%d',0Ah,0 ; DATA XREF: sub_401A00+1E6o
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		jmp	short sub_401A00
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401A00	proc near		; CODE XREF: .text:004019F1j
					; DATA XREF: start+30o

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		push	edi
		xor	edi, edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [ebp+arg_0]
		mov	ebx, [ebp+arg_4]
		and	esp, 0FFFFFFF0h
		call	sub_402020
		call	__main
		mov	[ebp+var_10], 0
		mov	[ebp+var_14], 0
		mov	esi, esi

loc_401A30:				; CODE XREF: sub_401A00+76j
					; sub_401A00+89j ...
		mov	[esp+38h+var_28], 0
		mov	[esp+38h+var_2C], offset off_401090
		mov	[esp+38h+var_30], offset dword_40191A
		mov	[esp+38h+var_34], ebx
		mov	[esp+38h+var_38], esi
		call	getopt_long
		cmp	eax, 0FFFFFFFFh
		jz	short loc_401A9B
		cmp	eax, 66h
		jz	short loc_401A92
		cmp	eax, 66h
		jg	short loc_401A78
		cmp	eax, 56h
		jz	loc_401BC9

loc_401A6C:				; CODE XREF: sub_401A00+80j
		mov	eax, [ebx]
		mov	[esp+38h+var_38], eax
		call	sub_401310
		jmp	short loc_401A30
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401A78:				; CODE XREF: sub_401A00+61j
		cmp	eax, 73h
		jz	short loc_401A8B
		cmp	eax, 76h
		jnz	short loc_401A6C
		mov	[ebp+var_10], 1
		jmp	short loc_401A30
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401A8B:				; CODE XREF: sub_401A00+7Bj
		mov	edi, 1
		jmp	short loc_401A30
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401A92:				; CODE XREF: sub_401A00+5Cj
		mov	[ebp+var_14], 1
		jmp	short loc_401A30
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401A9B:				; CODE XREF: sub_401A00+57j
		mov	eax, ds:optind
		test	edi, edi
		mov	esi, [eax]
		jnz	loc_401BB8

loc_401AAA:				; CODE XREF: sub_401A00+1C4j
		call	FcInitLoadConfig
		mov	[ebp+var_18], eax
		test	eax, eax
		jz	loc_401BA7
		mov	eax, [ebx+esi*4]
		test	eax, eax
		jz	loc_401B95
		call	FcStrSetCreate
		test	eax, eax
		mov	edi, eax
		jz	loc_401B84
		mov	eax, [ebx+esi*4]
		test	eax, eax
		jz	short loc_401AF3

loc_401ADB:				; CODE XREF: sub_401A00+F1j
		mov	[esp+38h+var_34], eax
		mov	[esp+38h+var_38], edi
		call	FcStrSetAdd
		test	eax, eax
		jz	short loc_401B5F
		inc	esi
		mov	eax, [ebx+esi*4]
		test	eax, eax
		jnz	short loc_401ADB

loc_401AF3:				; CODE XREF: sub_401A00+D9j
		mov	[esp+38h+var_38], edi
		call	FcStrListCreate
		mov	[esp+38h+var_38], edi
		mov	esi, eax
		call	FcStrSetDestroy

loc_401B05:				; CODE XREF: sub_401A00+1A2j
		mov	eax, [ebp+var_10]
		mov	[esp+38h+var_28], eax
		mov	eax, [ebp+var_14]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebx]
		mov	[esp+38h+var_38], esi
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+var_18]
		mov	[esp+38h+var_34], eax
		call	sub_4015E0
		mov	esi, eax
		mov	eax, [ebp+var_10]
		test	eax, eax
		jz	short loc_401B55
		test	esi, esi
		mov	eax, offset aFailed ; "failed"
		jnz	short loc_401B3F
		mov	eax, offset aSucceeded ; "succeeded"

loc_401B3F:				; CODE XREF: sub_401A00+138j
		mov	[esp+38h+var_30], eax
		mov	eax, [ebx]
		mov	[esp+38h+var_38], offset aSS_0 ; "%s: %s\n"
		mov	[esp+38h+var_34], eax
		call	printf

loc_401B55:				; CODE XREF: sub_401A00+12Fj
		mov	eax, esi

loc_401B57:				; CODE XREF: sub_401A00+182j
		lea	esp, [ebp+var_C]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B5F:				; CODE XREF: sub_401A00+E9j
		call	__getreent
		mov	edx, [ebx]
		mov	[esp+38h+var_34], offset aSCanTAddDirect ; "%s:	Can't add directory\n"

loc_401B6E:				; CODE XREF: sub_401A00+193j
					; sub_401A00+1B6j
		mov	[esp+38h+var_30], edx
		mov	eax, [eax+0Ch]
		mov	[esp+38h+var_38], eax
		call	fprintf
		mov	eax, 1
		jmp	short loc_401B57
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B84:				; CODE XREF: sub_401A00+CEj
		call	__getreent
		mov	edx, [ebx]
		mov	[esp+38h+var_34], offset aSCanTCreateLis ; "%s:	Can't create list of directories\n"
		jmp	short loc_401B6E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B95:				; CODE XREF: sub_401A00+BFj
		mov	eax, [ebp+var_18]
		mov	[esp+38h+var_38], eax
		call	FcConfigGetConfigDirs
		mov	esi, eax
		jmp	loc_401B05
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401BA7:				; CODE XREF: sub_401A00+B4j
		call	__getreent
		mov	edx, [ebx]
		mov	[esp+38h+var_34], offset aSCanTInitFontC ; "%s:	Can't init font config library\n"
		jmp	short loc_401B6E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401BB8:				; CODE XREF: sub_401A00+A4j
		mov	[esp+38h+var_38], 0
		call	FcConfigEnableHome
		jmp	loc_401AAA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401BC9:				; CODE XREF: sub_401A00+66j
		call	__getreent
		mov	[esp+38h+var_28], 2
		mov	[esp+38h+var_2C], 2
		mov	[esp+38h+var_30], 2
		mov	[esp+38h+var_34], offset aFontconfigVers ; "fontconfig version %d.%d.%d\n"
		mov	eax, [eax+0Ch]
		mov	[esp+38h+var_38], eax
		call	fprintf
		mov	[esp+38h+var_38], 0
		call	exit
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
sub_401A00	endp

; [00000006 BYTES: COLLAPSED FUNCTION FcConfigGetConfigDirs. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcStrSetAdd. PRESS KEYPAD	"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcInitLoadConfig.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcConfigEnableHome. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcStrSetDestroy. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcFontSetDestroy.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcDirSave. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcDirCacheValid. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcConfigGetBlanks. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcDirScan. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcStrSetCreate. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcFontSetCreate. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcStrListDone. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcStrListNext. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcStrListCreate. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
aLibgccw32EhSjl	db '-LIBGCCW32-EH-SJLJ-GTHR-CYGWIN',0 ; DATA XREF: .text:00401DD1o
					; sub_401EF0+32o
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401D20	proc near		; DATA XREF: sub_401D40+3Do
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, ds:dword_404040
		call	dword ptr [eax+4]
		mov	esp, ebp
		pop	ebp
		retn
sub_401D20	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401D40	proc near		; CODE XREF: .text:00401E5Fp

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		cld
		sub	esp, 8
		mov	ecx, 0Ch
		mov	[esp+8+var_8], ebx
		mov	ebx, [ebp+arg_0]
		mov	[esp+8+var_4], edi
		mov	edi, ebx
		rep stosd
		mov	dword ptr [ebx], 30h
		mov	eax, dword_403000
		mov	dword ptr [ebx+24h], 0FFFFFFFFh
		mov	dword ptr [ebx+4], offset abort
		mov	[ebx+14h], eax
		mov	eax, ds:dword_404010
		mov	dword ptr [ebx+8], offset sub_401D20
		mov	edx, dword_403008
		mov	dword ptr [ebx+1Ch], 0
		mov	[ebx+20h], eax
		mov	eax, dword_403004
		mov	[ebx+2Ch], edx
		mov	[ebx+28h], eax
		mov	ebx, [esp+8+var_8]
		mov	edi, [esp+8+var_4]
		mov	esp, ebp
		pop	ebp
		retn
sub_401D40	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_401DB0:				; CODE XREF: .text:00401044j
		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	[ebp-8], esi
		mov	eax, ds:dword_404040
		mov	[ebp-4], edi
		test	eax, eax
		jz	short loc_401DD0

loc_401DC5:				; CODE XREF: .text:00401EA6j
		mov	esi, [ebp-8]
		mov	edi, [ebp-4]
		mov	esp, ebp
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_401DD0:				; CODE XREF: .text:00401DC3j
		cld
		mov	esi, offset aLibgccw32EhSjl ; "-LIBGCCW32-EH-SJLJ-GTHR-CYGWIN"
		mov	dword ptr [ebp-48h], 41414141h
		lea	edi, [ebp-28h]
		mov	ecx, 7
		mov	dword ptr [ebp-44h], 41414141h
		mov	dword ptr [ebp-40h], 41414141h
		mov	dword ptr [ebp-3Ch], 41414141h
		mov	dword ptr [ebp-38h], 41414141h
		mov	dword ptr [ebp-34h], 41414141h
		mov	dword ptr [ebp-30h], 41414141h
		mov	dword ptr [ebp-2Ch], 41414141h
		movzx	eax, word ptr ds:aLibgccw32EhSjl+1Ch
		rep movsd
		mov	[edi], ax
		movzx	eax, byte ptr ds:aLibgccw32EhSjl+1Eh
		mov	[edi+2], al
		lea	edi, [ebp-48h]
		mov	[esp], edi
		call	FindAtomA
		movzx	eax, ax
		sub	esp, 4
		test	ax, ax
		jnz	loc_401ED0
		mov	dword ptr [esp], 30h
		call	malloc
		test	eax, eax
		mov	esi, eax
		jz	loc_401EDC
		mov	[esp], eax
		call	sub_401D40
		mov	[esp], esi
		call	sub_401EF0
		test	ax, ax
		jz	short loc_401EAB
		mov	dword ptr [esp+8], offset sub_401FF0
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0
		call	pthread_atfork
		lea	esi, [esi+0]

loc_401E90:				; CODE XREF: .text:00401EDAj
		mov	ds:dword_404040, esi
		lea	eax, [esi+4]
		mov	ds:dword_404030, eax
		lea	eax, [esi+8]
		mov	ds:dword_404050, eax
		jmp	loc_401DC5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401EAB:				; CODE XREF: .text:00401E6Fj
		mov	[esp], esi
		call	free
		mov	[esp], edi
		call	FindAtomA
		sub	esp, 4
		movzx	eax, ax
		jmp	short loc_401ED0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401ED0:				; CODE XREF: .text:00401E40j
					; .text:00401EC1j
		mov	[esp], eax
		call	sub_401F80
		mov	esi, eax
		jmp	short loc_401E90
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401EDC:				; CODE XREF: .text:00401E56j
		call	abort
		jmp	short sub_401EF0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401EF0	proc near		; CODE XREF: .text:00401E67p
					; .text:00401EE1j ...

var_68		= dword	ptr -68h
var_58		= dword	ptr -58h
var_38		= dword	ptr -38h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	eax, 1Fh
		mov	ebp, esp
		push	edi
		mov	edx, 1
		push	esi
		push	ebx
		sub	esp, 5Ch	; lpString
		mov	ebx, [ebp+arg_0]
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401F10:				; CODE XREF: sub_401EF0+2Fj
		test	edx, ebx
		mov	cl, 41h
		jnz	short loc_401F18
		mov	cl, 61h

loc_401F18:				; CODE XREF: sub_401EF0+24j
		mov	[eax+ebp-58h], cl
		add	edx, edx
		dec	eax
		jns	short loc_401F10
		cld
		mov	esi, offset aLibgccw32EhSjl ; "-LIBGCCW32-EH-SJLJ-GTHR-CYGWIN"
		lea	edi, [ebp+var_38]
		movzx	eax, word ptr ds:aLibgccw32EhSjl+1Ch
		mov	ecx, 7
		rep movsd
		mov	[edi], ax
		movzx	eax, byte ptr ds:aLibgccw32EhSjl+1Eh
		mov	[edi+2], al
		lea	eax, [ebp+var_58]
		mov	[esp+68h+var_68], eax
		call	AddAtomA
		movzx	esi, ax
		sub	esp, 4
		test	si, si
		jnz	short loc_401F67

loc_401F5B:				; CODE XREF: sub_401EF0+83j
		xor	edx, edx

loc_401F5D:				; CODE XREF: sub_401EF0+85j
		lea	esp, [ebp+var_C]
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401F67:				; CODE XREF: sub_401EF0+69j
		mov	[esp+68h+var_68], esi
		call	sub_401F80
		cmp	eax, ebx
		mov	edx, esi
		jnz	short loc_401F5B
		jmp	short loc_401F5D
sub_401EF0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401F80	proc near		; CODE XREF: .text:00401ED3p
					; sub_401EF0+7Ap

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_48		= dword	ptr -48h
var_4		= dword	ptr -4
arg_0		= word ptr  8

		push	ebp
		mov	ebp, esp
		lea	edx, [ebp+var_48]
		push	ebx
		sub	esp, 54h	; nAtom
		xor	ebx, ebx
		movzx	eax, [ebp+arg_0]
		mov	[esp+58h+var_50], 3Fh
		mov	[esp+58h+var_54], edx
		mov	[esp+58h+var_58], eax
		call	GetAtomNameA
		sub	esp, 0Ch
		test	eax, eax
		jz	short loc_401FDC
		mov	eax, 1Fh
		mov	edx, 1
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401FC0:				; CODE XREF: sub_401F80+4Aj
		cmp	byte ptr [eax+ebp-48h],	41h
		jz	short loc_401FD8

loc_401FC7:				; CODE XREF: sub_401F80+5Aj
		add	edx, edx
		dec	eax
		jns	short loc_401FC0
		cmp	dword ptr [ebx], 30h
		jnz	short loc_401FDC
		mov	eax, ebx
		mov	ebx, [ebp+var_4]
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401FD8:				; CODE XREF: sub_401F80+45j
		or	ebx, edx
		jmp	short loc_401FC7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401FDC:				; CODE XREF: sub_401F80+29j
					; sub_401F80+4Fj
		call	abort
		jmp	short sub_401FF0
sub_401F80	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401FF0	proc near		; CODE XREF: sub_401F80+61j
					; DATA XREF: .text:00401E71o

var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, ds:dword_404040
		mov	[esp+8+var_8], eax
		call	sub_401EF0
		test	ax, ax
		jz	short loc_40200C
		mov	esp, ebp
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40200C:				; CODE XREF: sub_401FF0+16j
		call	abort
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
sub_401FF0	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_402020	proc near		; CODE XREF: sub_401A00+16p
		push	ecx
		mov	ecx, esp
		add	ecx, 8

loc_402026:				; CODE XREF: sub_402020+1Bj
		cmp	eax, 1000h
		jb	short loc_40203D
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		jmp	short loc_402026
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40203D:				; CODE XREF: sub_402020+Bj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		jmp	eax
sub_402020	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402050	proc near		; CODE XREF: start+37p

var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_4], esi
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_8], ebx
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], esi
		call	sub_4021D0
		sub	esp, 8
		test	eax, eax
		jz	short loc_402083
		mov	[esp+18h+var_18], 0

loc_40207D:				; CODE XREF: sub_402050+57j
		call	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)

loc_402083:				; CODE XREF: sub_402050+24j
		sub	esp, 0B0h
		lea	ebx, [esp+0C8h+var_C0]
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], ebx
		mov	[esp+0C8h+var_C8], esi
		call	sub_4021D0
		sub	esp, 8
		mov	[esp+0C8h+var_C8], ebx
		jmp	short loc_40207D
sub_402050	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8
; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION getopt_long. PRESS KEYPAD	"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION puts. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _stat64. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION perror. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __errno. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION access. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fflush. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fputc. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fwrite. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION exit. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __getreent. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fprintf. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION free. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pthread_atfork. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION malloc. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION abort. PRESS KEYPAD "+" TO EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4021D0	proc near		; CODE XREF: sub_402050+1Ap
					; sub_402050+4Cp

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		push	ebx
		sub	esp, 4		; lpModuleName
		mov	ebx, [ebp+arg_4]
		test	ebx, ebx
		jz	loc_4022D0

loc_4021E4:				; CODE XREF: sub_4021D0+11Cj
		mov	dword ptr [ebx+4], 0A8h
		xor	ecx, ecx
		mov	edx, 6Dh
		mov	dword ptr [ebx+8], 3EDh
		test	eax, eax
		mov	dword ptr [ebx+0Ch], 7
		mov	[ebx+80h], ecx
		mov	[ebx+84h], edx
		mov	dword ptr [ebx+2Ch], offset dword_402450
		mov	dword ptr [ebx+30h], offset dword_40245C
		mov	dword ptr [ebx+14h], offset unk_404020
		jz	loc_4022C4
		mov	eax, [ebx+0A4h]
		mov	ds:dword_404024, eax

loc_402234:				; CODE XREF: sub_4021D0+FBj
		mov	dword ptr [ebx+78h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [ebx+48h], offset sub_4023E0
		mov	dword ptr [ebx+4Ch], offset sub_4023D0
		mov	[ebx+28h], eax
		mov	eax, [ebp+0]
		mov	dword ptr [ebx+50h], offset sub_4023C0
		mov	dword ptr [ebx+54h], offset sub_4023B0
		mov	dword ptr [ebx+24h], offset unk_404028
		mov	[ebx], eax
		mov	dword ptr [ebx+18h], offset malloc
		mov	dword ptr [ebx+1Ch], offset free
		mov	dword ptr [ebx+20h], offset loc_4023A0
		mov	dword ptr [ebx+44h], offset loc_402390
		mov	[esp+8+var_8], 0
		call	GetModuleHandleA
		mov	[ebx+7Ch], eax
		sub	esp, 4
		mov	dword ptr [ebx+34h], offset dword_403000
		mov	dword ptr [ebx+38h], offset unk_403010
		mov	dword ptr [ebx+3Ch], offset dword_404000
		mov	dword ptr [ebx+40h], 404080h
		call	sub_402360
		mov	eax, 1

loc_4022BD:				; CODE XREF: sub_4021D0+113j
		mov	ebx, [ebp+var_4]
		leave
		retn	8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4022C4:				; CODE XREF: sub_4021D0+53j
		mov	dword ptr [ebx+10h], offset dword_404024
		jmp	loc_402234
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4022D0:				; CODE XREF: sub_4021D0+Ej
		mov	[esp+8+var_8], 8
		call	cygwin_internal
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 0FFFFFFFFh
		jz	short loc_4022BD
		mov	ebx, edx
		mov	eax, 1
		jmp	loc_4021E4
sub_4021D0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:__imp__stat64
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402320	proc near		; CODE XREF: sub_402360+1Dp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	ecx, [ebp+arg_0]
		push	esi
		mov	esi, [ebp+arg_8]
		push	ebx
		mov	ebx, [ebp+arg_4]
		cmp	ecx, ebx
		jnb	short loc_402352
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_402340:				; CODE XREF: sub_402320+30j
		mov	eax, [ecx+4]
		mov	edx, esi
		add	edx, eax
		mov	eax, [ecx]
		add	ecx, 8
		add	[edx], eax
		cmp	ecx, ebx
		jb	short loc_402340

loc_402352:				; CODE XREF: sub_402320+10j
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_402320	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402360	proc near		; CODE XREF: sub_4021D0+E3p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+var_10], 400000h
		mov	[esp+18h+var_14], offset dword_404000
		mov	[esp+18h+var_18], offset dword_404000
		call	sub_402320
		mov	esp, ebp
		pop	ebp
		retn
sub_402360	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_402390:				; DATA XREF: sub_4021D0+AEo
		jmp	ds:calloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_4023A0:				; DATA XREF: sub_4021D0+A7o
		jmp	ds:realloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4023B0	proc near		; DATA XREF: sub_4021D0+89o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_4023B0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4023C0	proc near		; DATA XREF: sub_4021D0+82o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_4023C0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4023D0	proc near		; DATA XREF: sub_4021D0+75o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_4023D0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4023E0	proc near		; DATA XREF: sub_4021D0+6Eo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_4023E0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FindAtomA. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION AddAtomA.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetAtomNameA. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		jmp	loc_401040
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8
dword_402450	dd 0FFFFFFFFh, 402440h,	0 ; DATA XREF: sub_4021D0+3Eo
dword_40245C	dd 0FFFFFFFFh, 68h dup(0) ; DATA XREF: sub_4021D0+45o
_text		ends

; Section 2. (virtual address 00003000)
; Virtual size			: 00000010 (	 16.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00001A00
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 403000h
dword_403000	dd 14h			; DATA XREF: sub_401D40+22r
					; sub_4021D0+C7o
dword_403004	dd 14h			; DATA XREF: sub_401D40+54r
dword_403008	dd 0			; DATA XREF: sub_401D40+44r
		db    0	;
		db    0	;
		db    0	;
		db    0	;
unk_403010	db    0	;		; DATA XREF: sub_4021D0+CEo
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_data		ends

; Section 3. (virtual address 00004000)
; Virtual size			: 00000080 (	128.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0000080: Bss Readable Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 404000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_404000	dd ?			; DATA XREF: start+6r sub_4021D0+D5o ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404010	dd ?			; DATA XREF: sub_401D40+38r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
unk_404020	db    ?	;		; DATA XREF: sub_4021D0+4Co
		db    ?	;
		db    ?	;
		db    ?	;
dword_404024	dd ?			; DATA XREF: sub_4021D0+5Fw
					; sub_4021D0+F4o
unk_404028	db    ?	;		; DATA XREF: sub_4021D0+90o
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404030	dd ?			; DATA XREF: .text:00401E99w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404040	dd ?			; DATA XREF: sub_401D20+6r
					; .text:00401DB9r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404050	dd ?			; DATA XREF: .text:00401EA1w
		align 40h
_bss		ends

;
; Imports from cygfontconfig-1
;
; Section 4. (virtual address 00005000)
; Virtual size			: 0000053C (   1340.)
; Section size in file		: 00000600 (   1536.)
; Offset to raw	data for section: 00001C00
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Externs
; _idata
		extrn __imp_FcConfigEnableHome:dword ; DATA XREF: FcConfigEnableHomer
		extrn __imp_FcConfigGetBlanks:dword ; DATA XREF: FcConfigGetBlanksr
		extrn __imp_FcConfigGetConfigDirs:dword	; DATA XREF: FcConfigGetConfigDirsr
		extrn __imp_FcDirCacheValid:dword ; DATA XREF: FcDirCacheValidr
		extrn __imp_FcDirSave:dword ; DATA XREF: FcDirSaver
		extrn __imp_FcDirScan:dword ; DATA XREF: FcDirScanr
		extrn __imp_FcFontSetCreate:dword ; DATA XREF: FcFontSetCreater
		extrn __imp_FcFontSetDestroy:dword ; DATA XREF:	FcFontSetDestroyr
		extrn __imp_FcInitLoadConfig:dword ; DATA XREF:	FcInitLoadConfigr
		extrn __imp_FcStrListCreate:dword ; DATA XREF: FcStrListCreater
		extrn __imp_FcStrListDone:dword	; DATA XREF: FcStrListDoner
		extrn __imp_FcStrListNext:dword	; DATA XREF: FcStrListNextr
		extrn __imp_FcStrSetAdd:dword ;	DATA XREF: FcStrSetAddr
		extrn __imp_FcStrSetCreate:dword ; DATA	XREF: FcStrSetCreater
		extrn __imp_FcStrSetDestroy:dword ; DATA XREF: FcStrSetDestroyr


;
; Imports from cygwin1
;
		extrn __imp___errno:dword ; DATA XREF: __errnor
		extrn __imp___getreent:dword ; DATA XREF: __getreentr
		extrn __imp___main:dword ; DATA	XREF: __mainr
		extrn __imp__stat64:dword ; DATA XREF: _stat64r
					; .text:00402310r
; void _imp_abort(void)
		extrn __imp_abort:dword	; DATA XREF: abortr
		extrn __imp_access:dword ; DATA	XREF: accessr
; void *__cdecl	calloc(size_t,size_t)
		extrn calloc:dword	; DATA XREF: .text:00402390r
		extrn __imp_cygwin_internal:dword ; DATA XREF: cygwin_internalr
; dll_crt0(per_process *)
		extrn dll_crt0__FP11per_process:dword ;	DATA XREF: sub_402050+2Dr
					; .text:00402300r
; void __cdecl _imp_exit(int)
		extrn __imp_exit:dword	; DATA XREF: exitr
		extrn __imp_fflush:dword ; DATA	XREF: fflushr
		extrn __imp_fprintf:dword ; DATA XREF: fprintfr
		extrn __imp_fputc:dword	; DATA XREF: fputcr
; void __cdecl _imp_free(void *)
		extrn __imp_free:dword	; DATA XREF: freer
		extrn __imp_fwrite:dword ; DATA	XREF: fwriter
		extrn __imp_getopt_long:dword ;	DATA XREF: getopt_longr
; void *__cdecl	_imp_malloc(size_t)
		extrn __imp_malloc:dword ; DATA	XREF: mallocr
		extrn optind:dword	; DATA XREF: sub_401A00+9Br
; void __cdecl _imp_perror(const char *)
		extrn __imp_perror:dword ; DATA	XREF: perrorr
		extrn __imp_printf:dword ; DATA	XREF: printfr
		extrn __imp_pthread_atfork:dword ; DATA	XREF: pthread_atforkr
		extrn __imp_puts:dword	; DATA XREF: putsr
; void *__cdecl	realloc(void *,size_t)
		extrn realloc:dword	; DATA XREF: .text:004023A0r


;
; Imports from KERNEL32
;
; ATOM __stdcall __imp_AddAtomA(LPCSTR lpString)
		extrn __imp_AddAtomA:dword ; DATA XREF:	AddAtomAr
; ATOM __stdcall __imp_FindAtomA(LPCSTR	lpString)
		extrn __imp_FindAtomA:dword ; DATA XREF: FindAtomAr
; UINT __stdcall __imp_GetAtomNameA(ATOM nAtom,LPSTR lpBuffer,int nSize)
		extrn __imp_GetAtomNameA:dword ; DATA XREF: GetAtomNameAr
; HMODULE __stdcall __imp_GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp_GetModuleHandleA:dword ; DATA XREF:	GetModuleHandleAr



		end start
