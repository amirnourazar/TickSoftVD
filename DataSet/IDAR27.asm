

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2003 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; º Licensed to: Mark Stamp, San Jose State University,	1 user,	academic, 11/2003 º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	C:\Documents and Settings\Fiona\My Documents\CS	298_Metamorphic	virus\HMM\Cygwin\mpto.exe
; Format      :	Portable executable for	IBM PC (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00000DB0 (   3504.)
; Section size in file		: 00000E00 (   3584.)
; Offset to raw	data for section: 00000400
; Flags	60000020: Text Executable Readable
; Alignment	: 16 bytes ?

		model flat

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 401000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

		public start
start		proc near

var_8		= dword	ptr -8
var_2		= word ptr -2

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		and	esp, 0FFFFFFF0h
		mov	eax, ds:dword_404000
		test	eax, eax
		jz	short loc_401013
		int	3		; Trap to Debugger

loc_401013:				; CODE XREF: start+10j
		fnstcw	[ebp+var_2]
		movzx	eax, [ebp+var_2]
		and	eax, 0FFFFF0C0h
		mov	[ebp+var_2], ax
		movzx	eax, [ebp+var_2]
		or	eax, 33Fh
		mov	[ebp+var_2], ax
		fldcw	[ebp+var_2]
		mov	[esp+8+var_8], offset sub_401590
		call	sub_401A30
		mov	esp, ebp
		pop	ebp
		retn
start		endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401050	proc near		; CODE XREF: sub_4010A0+4Ep
					; sub_401260+E1p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	__getreent
		mov	edx, [ebp+arg_0]
		mov	[esp+18h+var_8], edx
		mov	edx, ds:dword_40401C
		mov	[esp+18h+var_C], edx
		mov	edx, ds:dword_4040B0
		mov	[esp+18h+var_10], edx
		mov	edx, offset aMptoSDS ; "mpto: %s:%d: %s\n"
		mov	[esp+18h+var_14], edx
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_18], eax
		call	fprintf
		mov	[esp+18h+var_18], 1
		call	exit
		lea	esi, [esi+0]
		lea	edi, [edi+0]
sub_401050	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4010A0	proc near		; CODE XREF: sub_401260+CCp
					; sub_401260+19Ep ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		xor	ebx, ebx
		lea	esi, [esi+0]

loc_4010B0:				; CODE XREF: sub_4010A0+45j
		mov	eax, ds:dword_4040E0
		mov	[esp+18h+var_18], eax
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	ecx, eax
		jz	short loc_401107

loc_4010C4:				; CODE XREF: sub_4010A0+65j
		cmp	eax, 0Ah
		setnz	al
		xor	edx, edx
		cmp	ecx, 0Dh
		setnz	dl
		test	eax, edx
		jz	short loc_40110F
		mov	eax, ds:dword_404040
		mov	[ebx+eax], cl
		inc	ebx
		cmp	ds:dword_404010, ebx
		jnz	short loc_4010B0
		mov	[esp+18h+var_18], offset aLineIsTooLong	; "Line	is too long"
		call	sub_401050
		mov	eax, ds:dword_4040E0
		mov	[esp+18h+var_18], eax
		call	getc
		cmp	eax, 0FFFFFFFFh
		mov	ecx, eax
		jnz	short loc_4010C4

loc_401107:				; CODE XREF: sub_4010A0+22j
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40110F:				; CODE XREF: sub_4010A0+34j
		mov	eax, ds:dword_404040
		cmp	ecx, 0Dh
		mov	byte ptr [eax+ebx], 0
		jz	short loc_40112E

loc_40111D:				; CODE XREF: sub_4010A0+A0j
					; sub_4010A0+B3j
		inc	ds:dword_40401C
		mov	eax, ds:dword_404040
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40112E:				; CODE XREF: sub_4010A0+7Bj
		mov	eax, ds:dword_4040E0
		mov	[esp+18h+var_18], eax
		call	getc
		cmp	eax, 0Ah
		mov	ecx, eax
		jz	short loc_40111D
		mov	[esp+18h+var_18], ecx
		mov	eax, ds:dword_4040E0
		mov	[esp+18h+var_14], eax
		call	ungetc
		jmp	short loc_40111D
sub_4010A0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401160	proc near		; CODE XREF: sub_4011A0+60p
					; sub_4011A0+84p

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		mov	ecx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		movzx	edx, byte ptr [ecx]
		test	dl, dl
		jz	short loc_40117D

loc_401170:				; CODE XREF: sub_401160+1Bj
		cmp	[eax], dl
		jnz	short loc_40118F
		inc	eax
		inc	ecx
		movzx	edx, byte ptr [ecx]
		test	dl, dl
		jnz	short loc_401170

loc_40117D:				; CODE XREF: sub_401160+Ej
		movsx	eax, byte ptr [eax]
		cmp	eax, 5Fh
		jz	short loc_40118F
		jg	short loc_40119A
		sub	eax, 41h

loc_40118A:				; CODE XREF: sub_401160+3Dj
		cmp	eax, 19h
		ja	short loc_401193

loc_40118F:				; CODE XREF: sub_401160+12j
					; sub_401160+23j
		pop	ebp
		xor	eax, eax
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401193:				; CODE XREF: sub_401160+2Dj
		pop	ebp
		mov	eax, 1
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40119A:				; CODE XREF: sub_401160+25j
		sub	eax, 61h
		jmp	short loc_40118A
sub_401160	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4011A0	proc near		; CODE XREF: sub_401260+63p
					; sub_401260+EFp ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ecx, 1
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		mov	edx, eax
		mov	ds:dword_404070, eax
		mov	ds:dword_4040C0, eax
		cmp	byte ptr [eax],	0
		jz	short loc_4011E6
		nop

loc_4011C0:				; CODE XREF: sub_4011A0+44j
		movsx	eax, byte ptr [edx]
		sub	eax, 22h	; switch 89 cases
		cmp	eax, 58h
		ja	short loc_4011D2 ; default
		jmp	ds:off_4031C8[eax*4] ; switch jump

loc_4011D2:				; CODE XREF: sub_4011A0+29j
					; DATA XREF: .rdata:004031C8o
		mov	ecx, 1		; default

loc_4011D7:				; CODE XREF: sub_4011A0+72j
					; sub_4011A0+A2j
		mov	eax, edx
		inc	edx
		mov	ds:dword_4040C0, edx
		cmp	byte ptr [eax+1], 0
		jnz	short loc_4011C0

loc_4011E6:				; CODE XREF: sub_4011A0+1Dj
		mov	ds:dword_4040A0, edx
		xor	eax, eax
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4011F0:				; CODE XREF: sub_4011A0+2Bj
					; DATA XREF: .rdata:004031C8o
		test	ecx, ecx	; case 0x65
		jz	short loc_401210 ; case	0x41
		mov	eax, offset aEtex ; "etex"

loc_4011F9:				; CODE XREF: sub_4011A0+9Ej
		mov	[esp+8+var_4], eax
		mov	[esp+8+var_8], edx
		call	sub_401160
		test	eax, eax
		jnz	short loc_401253

loc_401209:				; CODE XREF: sub_4011A0+8Bj
		mov	edx, ds:dword_4040C0
		nop

loc_401210:				; CODE XREF: sub_4011A0+2Bj
					; sub_4011A0+52j ...
		xor	ecx, ecx	; case 0x41
		jmp	short loc_4011D7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401214:				; CODE XREF: sub_4011A0+2Bj
					; DATA XREF: .rdata:004031C8o
		test	ecx, ecx	; case 0x76
		jz	short loc_401210 ; case	0x41
		mov	[esp+8+var_8], edx
		mov	ecx, offset aVerbatimtex ; "verbatimtex"
		mov	[esp+8+var_4], ecx
		call	sub_401160
		test	eax, eax
		jz	short loc_401209
		mov	eax, ds:dword_4040C0
		add	eax, 0Bh
		jmp	short loc_401247
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401237:				; CODE XREF: sub_4011A0+2Bj
					; DATA XREF: .rdata:004031C8o
		test	ecx, ecx	; case 0x62
		mov	eax, offset aBtex ; "btex"
		jnz	short loc_4011F9
		xor	ecx, ecx
		jmp	short loc_4011D7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401244:				; CODE XREF: sub_4011A0+2Bj
					; DATA XREF: .rdata:004031C8o
		lea	eax, [edx+1]	; case 0x22

loc_401247:				; CODE XREF: sub_4011A0+95j
					; sub_4011A0+BBj
		mov	ds:dword_4040A0, eax
		mov	eax, 1
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401253:				; CODE XREF: sub_4011A0+67j
		mov	eax, ds:dword_4040C0
		add	eax, 4
		jmp	short loc_401247
sub_4011A0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401260	proc near		; CODE XREF: sub_401430+4Cp
					; sub_401430+10Dp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ecx, ds:dword_4040A0
		movzx	eax, byte ptr [ecx]
		cmp	al, 20h
		setz	dl
		cmp	al, 9
		setz	al
		or	eax, edx
		test	al, 1
		jz	short loc_4012AF
		lea	ebx, [ecx+1]
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401290:				; CODE XREF: sub_401260+4Dj
		mov	ds:dword_4040A0, ebx
		mov	ecx, ebx
		lea	ebx, [ebx+1]
		movzx	eax, byte ptr [ebx-1]
		cmp	al, 20h
		setz	dl
		cmp	al, 9
		setz	al
		or	eax, edx
		test	al, 1
		jnz	short loc_401290

loc_4012AF:				; CODE XREF: sub_401260+1Fj
		cmp	byte ptr [ecx],	0
		jz	loc_4013FE
		nop
		lea	esi, [esi+0]

loc_4012C0:				; CODE XREF: sub_401260+CAj
		mov	[esp+18h+var_18], ecx
		call	sub_4011A0
		test	eax, eax
		jz	loc_401360

loc_4012D0:				; CODE XREF: sub_401260+F6j
		mov	eax, ds:dword_4040C0
		cmp	byte ptr [eax],	65h
		jz	loc_4013B0
		cmp	byte ptr [eax],	62h
		jz	loc_40136E

loc_4012E7:				; CODE XREF: sub_401260+108j
		cmp	byte ptr [eax],	76h
		jz	loc_401390

loc_4012F0:				; CODE XREF: sub_401260+122j
					; sub_401260+13Cj
		mov	esi, ds:dword_4040A0

loc_4012F6:				; CODE XREF: sub_401260+199j
		movzx	ebx, byte ptr [esi]
		mov	byte ptr [esi],	0
		mov	eax, ds:dword_404070
		mov	[esp+18h+var_18], offset unk_40332C
		mov	[esp+18h+var_14], eax
		call	printf
		mov	[esi], bl
		mov	eax, ds:dword_4040C0
		cmp	byte ptr [eax],	65h
		jz	loc_401423

loc_401321:				; CODE XREF: sub_401260+1BEj
		mov	ecx, ds:dword_4040A0

loc_401327:				; CODE XREF: sub_401260+1ACj
		cmp	byte ptr [ecx],	0
		jnz	short loc_4012C0
		call	sub_4010A0
		mov	ds:dword_4040A0, eax
		test	eax, eax
		jnz	short loc_4013A1
		mov	[esp+18h+var_18], offset aBtexSectionDoe ; "btex section does not end"
		call	sub_401050

loc_401346:				; CODE XREF: sub_401260+14Dj
		mov	ecx, ds:dword_4040A0
		mov	[esp+18h+var_18], ecx
		call	sub_4011A0
		test	eax, eax
		jnz	loc_4012D0
		lea	esi, [esi+0]

loc_401360:				; CODE XREF: sub_401260+6Aj
		mov	eax, ds:dword_4040C0
		cmp	byte ptr [eax],	62h
		jnz	loc_4012E7

loc_40136E:				; CODE XREF: sub_401260+81j
		mov	[esp+18h+var_18], offset aBtexInTexMode	; "btex	in TeX mode"
		call	sub_401050
		mov	eax, ds:dword_4040C0
		cmp	byte ptr [eax],	76h
		jnz	loc_4012F0
		nop
		lea	esi, [esi+0]

loc_401390:				; CODE XREF: sub_401260+8Aj
		mov	[esp+18h+var_18], offset aVerbatimtexInT ; "verbatimtex	in TeX mode"
		call	sub_401050
		jmp	loc_4012F0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4013A1:				; CODE XREF: sub_401260+D8j
		mov	[esp+18h+var_18], 0Ah
		call	putchar
		jmp	short loc_401346
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_4013B0:				; CODE XREF: sub_401260+78j
		mov	ecx, ds:dword_404070
		lea	esi, [eax-1]
		cmp	esi, ecx
		jb	short loc_4013F8
		movzx	eax, byte ptr [eax-1]
		cmp	al, 20h
		setz	dl
		cmp	al, 9
		setz	al
		or	eax, edx
		test	al, 1
		jz	short loc_4013F8
		jmp	short loc_4013E0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_4013E0:				; CODE XREF: sub_401260+171j
					; sub_401260+196j
		dec	esi
		cmp	esi, ecx
		jb	short loc_4013F8
		movzx	eax, byte ptr [esi]
		cmp	al, 20h
		setz	dl
		cmp	al, 9
		setz	al
		or	eax, edx
		test	al, 1
		jnz	short loc_4013E0

loc_4013F8:				; CODE XREF: sub_401260+15Bj
					; sub_401260+16Fj ...
		inc	esi
		jmp	loc_4012F6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4013FE:				; CODE XREF: sub_401260+52j
		call	sub_4010A0
		mov	ds:dword_4040A0, eax
		test	eax, eax
		mov	ecx, eax
		jnz	loc_401327
		mov	[esp+18h+var_18], offset aBtexSectionDoe ; "btex section does not end"
		call	sub_401050
		jmp	loc_401321
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401423:				; CODE XREF: sub_401260+BBj
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_401260	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401430	proc near		; CODE XREF: sub_401590+2CAp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, ds:dword_404040
		mov	ds:dword_4040A0, eax
		jmp	short loc_40149B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401442:				; CODE XREF: sub_401430+95j
		mov	eax, ds:dword_404014
		inc	eax
		mov	ds:dword_404014, eax
		dec	eax
		jnz	short loc_40145D
		mov	eax, ds:dword_404018
		test	eax, eax
		jz	loc_401567

loc_40145D:				; CODE XREF: sub_401430+1Ej
		mov	eax, ds:dword_4040B0
		mov	[esp+18h+var_10], eax
		mov	eax, ds:dword_40401C
		mov	[esp+18h+var_14], eax
		mov	eax, ds:dword_404030

loc_401474:				; CODE XREF: sub_401430+14Ej
		mov	[esp+18h+var_18], eax
		call	printf
		call	sub_401260
		mov	eax, ds:dword_404100

loc_401486:				; CODE XREF: sub_401430+117j
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], offset unk_40332C
		call	printf

loc_401496:				; CODE XREF: sub_401430+A7j
					; sub_401430+C8j
		mov	eax, ds:dword_4040A0

loc_40149B:				; CODE XREF: sub_401430+10j
		mov	[esp+18h+var_18], eax
		call	sub_4011A0
		test	eax, eax
		jz	locret_40154C
		mov	eax, ds:dword_4040C0
		movzx	eax, byte ptr [eax]
		cmp	al, 25h
		jz	locret_40154C
		cmp	al, 22h
		jz	short loc_4014FA
		cmp	al, 62h
		jz	short loc_401510
		cmp	al, 76h
		jz	loc_401442
		mov	[esp+18h+var_18], offset aUnmatchedEtex	; "unmatched etex"
		call	sub_401050
		jmp	short loc_401496
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_4014E0:				; CODE XREF: sub_401430+DBj
		mov	[esp+18h+var_18], offset aStringDoesNotE ; "string does	not end"
		call	sub_401050
		lea	esi, [esi+0]

loc_4014F0:				; CODE XREF: sub_401430+D9j
		mov	eax, ds:dword_4040C0
		cmp	byte ptr [eax],	22h
		jz	short loc_401496

loc_4014FA:				; CODE XREF: sub_401430+8Dj
		mov	eax, ds:dword_4040A0
		mov	[esp+18h+var_18], eax
		call	sub_4011A0
		test	eax, eax
		jnz	short loc_4014F0
		jmp	short loc_4014E0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_401510:				; CODE XREF: sub_401430+91j
		mov	eax, ds:dword_404018
		inc	eax
		mov	ds:dword_404018, eax
		dec	eax
		jz	short loc_40154E
		mov	eax, ds:dword_4040B0
		mov	[esp+18h+var_10], eax
		mov	eax, ds:dword_40401C
		mov	[esp+18h+var_14], eax
		mov	eax, ds:dword_404090

loc_401535:				; CODE XREF: sub_401430+135j
		mov	[esp+18h+var_18], eax
		call	printf
		call	sub_401260
		mov	eax, ds:dword_404060
		jmp	loc_401486
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_40154C:				; CODE XREF: sub_401430+75j
					; sub_401430+85j
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40154E:				; CODE XREF: sub_401430+ECj
		mov	eax, ds:dword_4040B0
		mov	[esp+18h+var_10], eax
		mov	eax, ds:dword_40401C
		mov	[esp+18h+var_14], eax
		mov	eax, ds:dword_4040D0
		jmp	short loc_401535
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401567:				; CODE XREF: sub_401430+27j
		mov	eax, ds:dword_4040B0
		mov	[esp+18h+var_10], eax
		mov	eax, ds:dword_40401C
		mov	[esp+18h+var_14], eax
		mov	eax, ds:dword_404080
		jmp	loc_401474
sub_401430	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401590	proc near		; DATA XREF: start+33o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	eax, 10h
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [ebp+arg_0]
		and	esp, 0FFFFFFF0h
		call	sub_401A00
		call	__main
		mov	edx, [ebp+arg_4]
		xor	eax, eax
		mov	[esp+28h+var_24], eax
		mov	eax, [edx]
		mov	[esp+28h+var_28], eax
		call	ds:kpse_set_program_name
		cmp	ebx, 1
		jz	loc_401739
		jg	short loc_401623

loc_4015CD:				; CODE XREF: sub_401590+C2j
		cmp	ebx, 2
		jz	loc_4016F0
		cmp	ebx, 3
		jnz	loc_401680
		cld
		mov	ecx, [ebp+arg_4]
		mov	edi, offset aTex ; "-tex"
		mov	ebx, [ecx+4]
		mov	ecx, 5
		mov	esi, ebx
		repe cmpsb
		jz	loc_401704
		cld
		mov	edi, offset aTroff ; "-troff"
		mov	ecx, 7
		mov	esi, ebx
		repe cmpsb
		jnz	loc_401727
		mov	[ebp+var_10], 1

loc_401616:				; CODE XREF: sub_401590+17Bj
					; sub_401590+1A4j
		mov	ecx, [ebp+arg_4]
		mov	eax, [ecx+8]
		mov	ds:dword_4040B0, eax
		jmp	short loc_401692
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401623:				; CODE XREF: sub_401590+3Bj
		cld
		mov	ecx, [ebp+arg_4]
		mov	edi, offset aHelp ; "--help"
		mov	ecx, [ecx+4]
		mov	[ebp+var_14], ecx
		mov	esi, [ebp+var_14]
		mov	ecx, 7
		repe cmpsb
		jz	loc_401710
		cld
		mov	esi, [ebp+var_14]
		mov	edi, offset aVersion ; "--version"
		mov	ecx, 0Ah
		repe cmpsb
		jnz	loc_4015CD
		mov	[esp+28h+var_28], offset aMptoS0_63Copyr ; "mpto%s 0.63\nCopyright (C) 1996 AT&T Bel"...
		mov	ebx, offset aWeb2c7_5_4	; " (Web2C 7.5.4)"
		mov	[esp+28h+var_24], ebx
		call	printf

loc_40166D:				; CODE XREF: sub_401590+2FAj
		mov	[esp+28h+var_28], 0
		call	exit
		lea	esi, [esi+0]

loc_401680:				; CODE XREF: sub_401590+49j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[esp+28h+var_28], eax
		call	sub_401900

loc_40168D:				; CODE XREF: sub_401590+192j
		mov	eax, ds:dword_4040B0

loc_401692:				; CODE XREF: sub_401590+91j
					; sub_401590+172j
		mov	[esp+28h+var_28], eax
		mov	ecx, offset aR	; "r"
		mov	[esp+28h+var_24], ecx
		call	ds:kpse_fopen_trace
		mov	ds:dword_4040E0, eax
		test	eax, eax
		jnz	loc_401792
		call	__getreent
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	[esp+28h+var_20], edx
		mov	edx, offset aS	; "%s: "
		mov	[esp+28h+var_24], edx
		mov	eax, [eax+0Ch]
		mov	[esp+28h+var_28], eax
		call	fprintf
		mov	eax, ds:dword_4040B0
		mov	[esp+28h+var_28], eax
		call	perror

loc_4016E0:				; CODE XREF: sub_401590+1FDj
		mov	[esp+28h+var_28], 1
		call	exit
		lea	esi, [esi+0]

loc_4016F0:				; CODE XREF: sub_401590+40j
		mov	[ebp+var_10], 0
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]
		mov	ds:dword_4040B0, eax
		jmp	short loc_401692
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401704:				; CODE XREF: sub_401590+64j
		mov	[ebp+var_10], 0
		jmp	loc_401616
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401710:				; CODE XREF: sub_401590+ACj
		mov	[esp+28h+var_28], offset off_402040
		xor	esi, esi
		mov	[esp+28h+var_24], esi
		call	sub_401940
		jmp	loc_40168D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401727:				; CODE XREF: sub_401590+79j
		mov	edx, [ebp+arg_4]
		mov	eax, [edx]
		mov	[esp+28h+var_28], eax
		call	sub_401900
		jmp	loc_401616
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401739:				; CODE XREF: sub_401590+35j
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+28h+var_28], offset aMptoNeedExactl ; "mpto: Need exactly one file	argument.\n"
		mov	edi, 1
		mov	[esp+28h+var_1C], eax
		mov	eax, 26h
		mov	[esp+28h+var_20], eax
		mov	eax, 1
		mov	[esp+28h+var_24], eax
		call	fwrite
		call	__getreent
		mov	eax, [eax+0Ch]
		mov	[esp+28h+var_24], edi
		mov	[esp+28h+var_28], offset aTryMptoHelpFor ; "Try	`mpto --help' for more information."...
		mov	[esp+28h+var_1C], eax
		mov	eax, 28h
		mov	[esp+28h+var_20], eax
		call	fwrite
		jmp	loc_4016E0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401792:				; CODE XREF: sub_401590+11Bj
		mov	[esp+28h+var_28], offset aBuf_size ; "buf_size"
		call	ds:kpse_var_value
		test	eax, eax
		mov	ebx, eax
		jz	short loc_4017B2
		mov	[esp+28h+var_28], eax
		call	atoi
		mov	ds:dword_404010, eax

loc_4017B2:				; CODE XREF: sub_401590+213j
		mov	eax, ds:dword_404010
		cmp	eax, 1F3h
		jg	loc_4018E1
		mov	eax, 1F4h
		mov	ds:dword_404010, eax
		mov	eax, 1F4h

loc_4017D1:				; CODE XREF: sub_401590+356j
					; sub_401590+36Bj
		mov	[esp+28h+var_28], eax
		call	ds:xmalloc
		test	ebx, ebx
		mov	ds:dword_404040, eax
		jz	short loc_4017EB
		mov	[esp+28h+var_28], ebx
		call	free

loc_4017EB:				; CODE XREF: sub_401590+251j
		mov	eax, [ebp+var_10]
		test	eax, eax
		jnz	loc_40188F
		mov	eax, dword_402038
		mov	edx, dword_40203C
		mov	ds:dword_4040F0, eax
		mov	eax, dword_402034
		mov	ds:dword_404050, edx
		mov	ds:dword_4040D0, eax
		mov	eax, dword_402030
		mov	ds:dword_404090, eax
		mov	eax, dword_40202C
		mov	ds:dword_404060, eax
		mov	eax, dword_402028
		mov	ds:dword_404080, eax
		mov	eax, dword_402024
		mov	ds:dword_404030, eax
		mov	eax, dword_402020

loc_401843:				; CODE XREF: sub_401590+34Cj
		mov	[esp+28h+var_24], edx
		mov	[esp+28h+var_28], offset unk_40332C
		mov	ds:dword_404100, eax
		call	printf
		jmp	short loc_40185F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40185A:				; CODE XREF: sub_401590+2D6j
		call	sub_401430

loc_40185F:				; CODE XREF: sub_401590+2C8j
		call	sub_4010A0
		test	eax, eax
		jnz	short loc_40185A
		mov	[esp+28h+var_28], offset unk_40332C
		mov	eax, ds:dword_4040F0
		mov	[esp+28h+var_24], eax
		call	printf
		mov	eax, ds:dword_404040
		mov	[esp+28h+var_28], eax
		call	free
		jmp	loc_40166D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40188F:				; CODE XREF: sub_401590+260j
		mov	eax, dword_402018
		mov	edx, dword_40201C
		mov	ds:dword_4040F0, eax
		mov	eax, dword_402014
		mov	ds:dword_404050, edx
		mov	ds:dword_4040D0, eax
		mov	eax, dword_402010
		mov	ds:dword_404090, eax
		mov	eax, dword_40200C
		mov	ds:dword_404060, eax
		mov	eax, dword_402008
		mov	ds:dword_404080, eax
		mov	eax, dword_402004
		mov	ds:dword_404030, eax
		mov	eax, dword_402000
		jmp	loc_401843
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4018E1:				; CODE XREF: sub_401590+22Cj
		cmp	eax, 493E0h
		jle	loc_4017D1
		mov	eax, 493E0h
		mov	ds:dword_404010, eax
		mov	eax, 493E0h
		jmp	loc_4017D1
sub_401590	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401900	proc near		; CODE XREF: sub_401590+F8p
					; sub_401590+19Fp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		call	__getreent
		mov	edx, offset aTrySHelpForMor ; "Try `%s --help' for more information.\n"
		mov	[esp+18h+var_10], ebx
		mov	[esp+18h+var_14], edx
		mov	eax, [eax+0Ch]
		mov	[esp+18h+var_18], eax
		call	fprintf
		mov	[ebp+arg_0], 1
		add	esp, 14h
		pop	ebx
		pop	ebp
		jmp	loc_4019A0
sub_401900	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401940	proc near		; CODE XREF: sub_401590+18Dp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [ebp+arg_4]
		mov	ebx, [ebp+arg_0]
		test	esi, esi
		jz	short loc_401993

loc_401952:				; CODE XREF: sub_401940+58j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_401971
		nop
		lea	esi, [esi+0]

loc_401960:				; CODE XREF: sub_401940+2Fj
		mov	[esp+18h+var_18], eax
		add	ebx, 4
		call	puts
		mov	eax, [ebx]
		test	eax, eax
		jnz	short loc_401960

loc_401971:				; CODE XREF: sub_401940+16j
		mov	[esp+18h+var_14], esi
		mov	[esp+18h+var_18], offset aEmailBugReport ; "\nEmail bug	reports	to %s.\n"
		call	printf
		mov	[ebp+arg_0], 0
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	ebp
		jmp	loc_4019A0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401993:				; CODE XREF: sub_401940+10j
		mov	esi, offset aTexK@mail_tug_ ; "tex-k@mail.tug.org"
		jmp	short loc_401952
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8

loc_4019A0:				; CODE XREF: sub_401900+33j
					; sub_401940+4Ej
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		mov	[esp+8+var_8], eax
		call	exit
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		jmp	ds:kpse_set_program_name
sub_401940	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:kpse_fopen_trace
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:kpse_var_value
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:xmalloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_401A00	proc near		; CODE XREF: sub_401590+14p
		push	ecx
		mov	ecx, esp
		add	ecx, 8

loc_401A06:				; CODE XREF: sub_401A00+1Bj
		cmp	eax, 1000h
		jb	short loc_401A1D
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		jmp	short loc_401A06
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401A1D:				; CODE XREF: sub_401A00+Bj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		jmp	eax
sub_401A00	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401A30	proc near		; CODE XREF: start+3Ap

var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_4], esi
		mov	esi, [ebp+arg_0]
		mov	[ebp+var_8], ebx
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], esi
		call	sub_401B60
		sub	esp, 8
		test	eax, eax
		jz	short loc_401A63
		mov	[esp+18h+var_18], 0

loc_401A5D:				; CODE XREF: sub_401A30+57j
		call	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)

loc_401A63:				; CODE XREF: sub_401A30+24j
		sub	esp, 0B0h
		lea	ebx, [esp+0C8h+var_C0]
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], ebx
		mov	[esp+0C8h+var_C8], esi
		call	sub_401B60
		sub	esp, 8
		mov	[esp+0C8h+var_C8], ebx
		jmp	short loc_401A5D
sub_401A30	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 8
; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fwrite. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION putchar. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION free. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION atoi. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION perror. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION getc. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION exit. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __getreent. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fprintf. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ungetc. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION puts. PRESS KEYPAD "+" TO	EXPAND]
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401B60	proc near		; CODE XREF: sub_401A30+1Ap
					; sub_401A30+4Cp

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		push	ebx
		sub	esp, 4		; lpModuleName
		mov	ebx, [ebp+arg_4]
		test	ebx, ebx
		jz	loc_401C63

loc_401B74:				; CODE XREF: sub_401B60+11Fj
		mov	dword ptr [ebx+4], 0A8h
		xor	ecx, ecx
		mov	edx, 80h
		mov	dword ptr [ebx+8], 3EDh
		test	eax, eax
		mov	dword ptr [ebx+0Ch], 10h
		mov	[ebx+80h], ecx
		mov	[ebx+84h], edx
		mov	dword ptr [ebx+2Ch], offset dword_401DA0
		mov	dword ptr [ebx+30h], offset dword_401DA8
		mov	dword ptr [ebx+14h], offset unk_404020
		jz	loc_401C56
		mov	edx, [ebx+0A4h]
		mov	eax, ds:_impure_ptr
		mov	[eax], edx

loc_401BC6:				; CODE XREF: sub_401B60+FEj
		mov	dword ptr [ebx+78h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [ebx+48h], offset sub_401D70
		mov	dword ptr [ebx+4Ch], offset sub_401D60
		mov	[ebx+28h], eax
		mov	eax, [ebp+0]
		mov	dword ptr [ebx+50h], offset sub_401D50
		mov	dword ptr [ebx+54h], offset sub_401D40
		mov	dword ptr [ebx+24h], offset unk_404024
		mov	[ebx], eax
		mov	dword ptr [ebx+18h], offset loc_401D30
		mov	dword ptr [ebx+1Ch], offset free
		mov	dword ptr [ebx+20h], offset loc_401D20
		mov	dword ptr [ebx+44h], offset loc_401D10
		mov	[esp+8+var_8], 0
		call	GetModuleHandleA
		mov	[ebx+7Ch], eax
		sub	esp, 4
		mov	dword ptr [ebx+34h], offset dword_402000
		mov	dword ptr [ebx+38h], offset unk_402060
		mov	dword ptr [ebx+3Ch], offset dword_404000
		mov	dword ptr [ebx+40h], 404130h
		call	sub_401CE0
		mov	eax, 1

loc_401C4F:				; CODE XREF: sub_401B60+116j
		mov	ebx, [ebp+var_4]
		leave
		retn	8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401C56:				; CODE XREF: sub_401B60+53j
		mov	eax, ds:_impure_ptr
		mov	[ebx+10h], eax
		jmp	loc_401BC6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401C63:				; CODE XREF: sub_401B60+Ej
		mov	[esp+8+var_8], 8
		call	cygwin_internal
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 0FFFFFFFFh
		jz	short loc_401C4F
		mov	ebx, edx
		mov	eax, 1
		jmp	loc_401B74
sub_401B60	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
		jmp	ds:dll_crt0__FP11per_process ; dll_crt0(per_process *)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401CA0	proc near		; CODE XREF: sub_401CE0+1Dp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	ecx, [ebp+arg_0]
		push	esi
		mov	esi, [ebp+arg_8]
		push	ebx
		mov	ebx, [ebp+arg_4]
		cmp	ecx, ebx
		jnb	short loc_401CD2
		lea	esi, [esi+0]
		lea	edi, [edi+0]

loc_401CC0:				; CODE XREF: sub_401CA0+30j
		mov	eax, [ecx+4]
		mov	edx, esi
		add	edx, eax
		mov	eax, [ecx]
		add	ecx, 8
		add	[edx], eax
		cmp	ecx, ebx
		jb	short loc_401CC0

loc_401CD2:				; CODE XREF: sub_401CA0+10j
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_401CA0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401CE0	proc near		; CODE XREF: sub_401B60+E5p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+var_10], 400000h
		mov	[esp+18h+var_14], offset unk_4035BC
		mov	[esp+18h+var_18], offset unk_4035BC
		call	sub_401CA0
		mov	esp, ebp
		pop	ebp
		retn
sub_401CE0	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401D10:				; DATA XREF: sub_401B60+B0o
		jmp	ds:calloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401D20:				; DATA XREF: sub_401B60+A9o
		jmp	ds:realloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_401D30:				; DATA XREF: sub_401B60+9Bo
		jmp	ds:malloc
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401D40	proc near		; DATA XREF: sub_401B60+8Bo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401D40	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401D50	proc near		; DATA XREF: sub_401B60+84o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401D50	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401D60	proc near		; DATA XREF: sub_401B60+77o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401D60	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401D70	proc near		; DATA XREF: sub_401B60+70o
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_401D70	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
dword_401DA0	dd 0FFFFFFFFh, 0	; DATA XREF: sub_401B60+3Eo
dword_401DA8	dd 0FFFFFFFFh, 15h dup(0) ; DATA XREF: sub_401B60+45o
_text		ends

; Section 2. (virtual address 00002000)
; Virtual size			: 00000060 (	 96.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00001200
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 402000h
dword_402000	dd 403000h		; DATA XREF: sub_401590+347r
					; sub_401B60+C9o
dword_402004	dd 403002h		; DATA XREF: sub_401590+33Dr
dword_402008	dd 403002h		; DATA XREF: sub_401590+333r
dword_40200C	dd 403000h		; DATA XREF: sub_401590+329r
dword_402010	dd 40300Dh		; DATA XREF: sub_401590+31Fr
dword_402014	dd 403002h		; DATA XREF: sub_401590+30Fr
dword_402018	dd 40301Ch		; DATA XREF: sub_401590+2FFr
dword_40201C	dd 40301Dh		; DATA XREF: sub_401590+304r
dword_402020	dd 403024h		; DATA XREF: sub_401590+2AEr
dword_402024	dd 403027h		; DATA XREF: sub_401590+2A4r
dword_402028	dd 40301Ch		; DATA XREF: sub_401590+29Ar
dword_40202C	dd 403036h		; DATA XREF: sub_401590+290r
dword_402030	dd 40304Ch		; DATA XREF: sub_401590+286r
dword_402034	dd 40304Ch		; DATA XREF: sub_401590+276r
dword_402038	dd 40307Ch		; DATA XREF: sub_401590+266r
dword_40203C	dd 40301Ch		; DATA XREF: sub_401590+26Br
off_402040	dd offset aUsageMptoTexTr ; DATA XREF: sub_401590+180o
					; "Usage: mpto [-tex|-troff] MPFILE"
		dd offset aStripBtex__ete ; "  Strip btex..etex	and verbatimtex...et"...
		dd offset aFileMpfileConv ; "  file MPFILE, converting to either TeX"...
		dd offset unk_40301C
		dd offset aHelpDisplayThi ; "--help	 display this help and exit"
		dd offset aVersionOutputV ; "--version	 output	version	information "...
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
unk_402060	db    0	;		; DATA XREF: sub_401B60+D0o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_data		ends

; Section 3. (virtual address 00003000)
; Virtual size			: 000005BC (   1468.)
; Section size in file		: 00000600 (   1536.)
; Offset to raw	data for section: 00001400
; Flags	40000040: Data Readable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 403000h
		db  0Ah	;
		db    0	;
		db  2Eh	; .
		db  6Ch	; l
		db  66h	; f
		db  20h	;
		db  25h	; %
		db  64h	; d
		db  20h	;
		db  25h	; %
		db  73h	; s
		db  0Ah	;
		db    0	;
		db  2Eh	; .
		db  62h	; b
		db  70h	; p
		db  0Ah	;
		db  2Eh	; .
		db  6Ch	; l
		db  66h	; f
		db  20h	;
		db  25h	; %
		db  64h	; d
		db  20h	;
		db  25h	; %
		db  73h	; s
		db  0Ah	;
		db    0	;
unk_40301C	db    0	;		; DATA XREF: .data:0040204Co
		db  2Eh	; .
		db  70h	; p
		db  6Fh	; o
		db  20h	;
		db  30h	; 0
		db  0Ah	;
		db    0	;
		db  25h	; %
		db  0Ah	;
		db    0	;
		db  25h	; %
		db  25h	; %
		db  20h	;
		db  6Ch	; l
		db  69h	; i
		db  6Eh	; n
		db  65h	; e
		db  20h	;
		db  25h	; %
		db  64h	; d
		db  20h	;
		db  25h	; %
		db  73h	; s
		db  0Ah	;
		db    0	;
		db  7Dh	; }
		db  5Ch	; \
		db  76h	; v
		db  72h	; r
		db  75h	; u
		db  6Ch	; l
		db  65h	; e
		db  20h	;
		db  77h	; w
		db  69h	; i
		db  64h	; d
		db  74h	; t
		db  68h	; h
		db  31h	; 1
		db  73h	; s
		db  70h	; p
		db  7Dh	; }
		db  7Dh	; }
		db  7Dh	; }
		db  0Ah	;
		db    0	;
		db    0	;
		db  5Ch	; \
		db  73h	; s
		db  68h	; h
		db  69h	; i
		db  70h	; p
		db  6Fh	; o
		db  75h	; u
		db  74h	; t
		db  5Ch	; \
		db  68h	; h
		db  62h	; b
		db  6Fh	; o
		db  78h	; x
		db  7Bh	; {
		db  5Ch	; \
		db  73h	; s
		db  6Dh	; m
		db  61h	; a
		db  73h	; s
		db  68h	; h
		db  7Bh	; {
		db  5Ch	; \
		db  68h	; h
		db  62h	; b
		db  6Fh	; o
		db  78h	; x
		db  7Bh	; {
		db  5Ch	; \
		db  68h	; h
		db  62h	; b
		db  6Fh	; o
		db  78h	; x
		db  7Bh	; {
		db  25h	; %
		db  25h	; %
		db  20h	;
		db  6Ch	; l
		db  69h	; i
		db  6Eh	; n
		db  65h	; e
		db  20h	;
		db  25h	; %
		db  64h	; d
		db  20h	;
		db  25h	; %
		db  73h	; s
		db  0Ah	;
		db    0	;
		db  5Ch	; \
		db  65h	; e
		db  6Eh	; n
		db  64h	; d
		db  7Bh	; {
		db  64h	; d
		db  6Fh	; o
		db  63h	; c
		db  75h	; u
		db  6Dh	; m
		db  65h	; e
		db  6Eh	; n
		db  74h	; t
		db  7Dh	; }
		db  0Ah	;
		db    0	;
aUsageMptoTexTr	db 'Usage: mpto [-tex|-troff] MPFILE',0 ; DATA XREF: .data:00402040o
		align 4
aStripBtex__ete	db '  Strip btex..etex and verbatimtex...etex parts from MetaPos'
					; DATA XREF: .data:00402044o
		db 't input',0
aFileMpfileConv	db '  file MPFILE, converting to either TeX or troff (TeX by def'
					; DATA XREF: .data:00402048o
		db 'ault).',0
		align 4
aHelpDisplayThi	db '--help      display this help and exit',0 ; DATA XREF: .data:00402050o
		align 4
aVersionOutputV	db '--version   output version information and exit',0
					; DATA XREF: .data:00402054o
aMptoSDS	db 'mpto: %s:%d: %s',0Ah,0 ; DATA XREF: sub_401050+26o
aLineIsTooLong	db 'Line is too long',0 ; DATA XREF: sub_4010A0+47o
aEtex		db 'etex',0             ; DATA XREF: sub_4011A0+54o
aVerbatimtex	db 'verbatimtex',0      ; DATA XREF: sub_4011A0+7Bo
aBtex		db 'btex',0             ; DATA XREF: sub_4011A0+99o
off_4031C8	dd offset loc_401244, offset loc_4011D2, offset	loc_4011D2
					; DATA XREF: sub_4011A0+2Br
		dd offset loc_401244, offset loc_4011D2, offset	loc_4011D2 ; jump table	for switch statement
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_4011D2, offset loc_4011D2, offset	loc_4011D2
		dd offset loc_4011D2, offset loc_401210, offset	loc_4011D2
		dd offset loc_401210, offset loc_401237, offset	loc_401210
		dd offset loc_401210, offset loc_4011F0, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210, offset	loc_401210
		dd offset loc_401214, offset loc_401210, offset	loc_401210
		dd offset loc_401210, offset loc_401210
unk_40332C	db  25h	; %		; DATA XREF: sub_401260+A1o
					; sub_401430+5Ao ...
		db  73h	; s
		db    0	;
aBtexSectionDoe	db 'btex section does not end',0 ; DATA XREF: sub_401260+DAo
					; sub_401260+1B2o
aBtexInTexMode	db 'btex in TeX mode',0 ; DATA XREF: sub_401260+10Eo
aVerbatimtexInT	db 'verbatimtex in TeX mode',0 ; DATA XREF: sub_401260+130o
aUnmatchedEtex	db 'unmatched etex',0   ; DATA XREF: sub_401430+9Bo
aStringDoesNotE	db 'string does not end',0 ; DATA XREF: sub_401430+B0o
aTex		db '-tex',0             ; DATA XREF: sub_401590+53o
aTroff		db '-troff',0           ; DATA XREF: sub_401590+6Bo
aHelp		db '--help',0           ; DATA XREF: sub_401590+97o
aVersion	db '--version',0        ; DATA XREF: sub_401590+B6o
		align 4
aMptoS0_63Copyr	db 'mpto%s 0.63',0Ah    ; DATA XREF: sub_401590+C8o
		db 'Copyright (C) 1996 AT&T Bell Laboratories.',0Ah
		db 'There is NO warranty.  You may redistribute this software',0Ah
		db 'under the terms of the GNU General Public License',0Ah
		db 'and the mpto copyright.',0Ah
		db 'For more information about these matters, see the files',0Ah
		db 'named COPYING and the mpto source.',0Ah
		db 'Primary author of mpto: John Hobby.',0Ah,0
aWeb2c7_5_4	db ' (Web2C 7.5.4)',0   ; DATA XREF: sub_401590+CFo
aR		db 'r',0                ; DATA XREF: sub_401590+105o
aS		db '%s: ',0             ; DATA XREF: sub_401590+12Fo
		align 4
aMptoNeedExactl	db 'mpto: Need exactly one file argument.',0Ah,0
					; DATA XREF: sub_401590+1B1o
		align 4
aTryMptoHelpFor	db 'Try `mpto --help',27h,' for more information.',0Ah,0
					; DATA XREF: sub_401590+1E4o
aBuf_size	db 'buf_size',0         ; DATA XREF: sub_401590+202o
		align 4
aTrySHelpForMor	db 'Try `%s --help',27h,' for more information.',0Ah,0
					; DATA XREF: sub_401900+Fo
aEmailBugReport	db 0Ah			; DATA XREF: sub_401940+35o
		db 'Email bug reports to %s.',0Ah,0
aTexK@mail_tug_	db 'tex-k@mail.tug.org',0 ; DATA XREF: sub_401940+53o
		align 4
unk_4035BC	db    0	;		; DATA XREF: sub_401CE0+Eo
					; sub_401CE0+16o
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
_rdata		ends

; Section 4. (virtual address 00004000)
; Virtual size			: 00000130 (	304.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0000080: Bss Readable Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 404000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_404000	dd ?			; DATA XREF: start+9r sub_401B60+D7o
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404010	dd ?			; DATA XREF: sub_4010A0+3Fr
					; sub_401590+21Dw ...
dword_404014	dd ?			; DATA XREF: sub_401430+12r
					; sub_401430+18w
dword_404018	dd ?			; DATA XREF: sub_401430+20r
					; sub_401430+E0r ...
dword_40401C	dd ?			; DATA XREF: sub_401050+12r
					; sub_4010A0+7Dw ...
unk_404020	db    ?	;		; DATA XREF: sub_401B60+4Co
		db    ?	;
		db    ?	;
		db    ?	;
unk_404024	db    ?	;		; DATA XREF: sub_401B60+92o
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404030	dd ?			; DATA XREF: sub_401430+3Fr
					; sub_401590+2A9w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404040	dd ?			; DATA XREF: sub_4010A0+36r
					; sub_4010A0+6Fr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404050	dd ?			; DATA XREF: sub_401590+27Bw
					; sub_401590+314w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404060	dd ?			; DATA XREF: sub_401430+112r
					; sub_401590+295w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404070	dd ?			; DATA XREF: sub_4011A0+10w
					; sub_401260+9Cr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404080	dd ?			; DATA XREF: sub_401430+149r
					; sub_401590+29Fw ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404090	dd ?			; DATA XREF: sub_401430+100r
					; sub_401590+28Bw ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4040A0	dd ?			; DATA XREF: sub_4011A0+46w
					; sub_4011A0+A7w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4040B0	dd ?			; DATA XREF: sub_401050+1Cr
					; sub_401430+2Dr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4040C0	dd ?			; DATA XREF: sub_4011A0+15w
					; sub_4011A0+3Aw ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4040D0	dd ?			; DATA XREF: sub_401430+130r
					; sub_401590+281w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4040E0	dd ?			; DATA XREF: sub_4010A0+10r
					; sub_4010A0+53r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4040F0	dd ?			; DATA XREF: sub_401590+271w
					; sub_401590+2DFr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_404100	dd ?			; DATA XREF: sub_401430+51r
					; sub_401590+2BEw
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
_bss		ends

;
; Imports from cygkpathsea-4
;
; Section 5. (virtual address 00005000)
; Virtual size			: 00000320 (	800.)
; Section size in file		: 00000400 (   1024.)
; Offset to raw	data for section: 00001A00
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Externs
; _idata
		extrn kpse_fopen_trace:dword ; DATA XREF: sub_401590+10Er
					; .text:004019D0r
		extrn kpse_set_program_name:dword ; DATA XREF: sub_401590+2Cr
					; sub_401940+80r
		extrn kpse_var_value:dword ; DATA XREF:	sub_401590+209r
					; .text:004019E0r
		extrn xmalloc:dword	; DATA XREF: sub_401590+244r
					; .text:004019F0r


;
; Imports from KERNEL32
;
; HMODULE __stdcall __imp_GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp_GetModuleHandleA:dword ; DATA XREF:	GetModuleHandleAr


;
; Imports from cygwin1
;
		extrn __imp___getreent:dword ; DATA XREF: __getreentr
		extrn __imp___main:dword ; DATA	XREF: __mainr
		extrn _impure_ptr:dword	; DATA XREF: sub_401B60+5Fr
					; sub_401B60+F6r
; int __cdecl _imp_atoi(const char *)
		extrn __imp_atoi:dword	; DATA XREF: atoir
; void *__cdecl	calloc(size_t,size_t)
		extrn calloc:dword	; DATA XREF: .text:00401D10r
		extrn __imp_cygwin_internal:dword ; DATA XREF: cygwin_internalr
; dll_crt0(per_process *)
		extrn dll_crt0__FP11per_process:dword ;	DATA XREF: sub_401A30+2Dr
					; .text:00401C90r
; void __cdecl _imp_exit(int)
		extrn __imp_exit:dword	; DATA XREF: exitr
		extrn __imp_fprintf:dword ; DATA XREF: fprintfr
; void __cdecl _imp_free(void *)
		extrn __imp_free:dword	; DATA XREF: freer
		extrn __imp_fwrite:dword ; DATA	XREF: fwriter
		extrn __imp_getc:dword	; DATA XREF: getcr
; void *__cdecl	malloc(size_t)
		extrn malloc:dword	; DATA XREF: .text:00401D30r
; void __cdecl _imp_perror(const char *)
		extrn __imp_perror:dword ; DATA	XREF: perrorr
		extrn __imp_printf:dword ; DATA	XREF: printfr
		extrn __imp_putchar:dword ; DATA XREF: putcharr
		extrn __imp_puts:dword	; DATA XREF: putsr
; void *__cdecl	realloc(void *,size_t)
		extrn realloc:dword	; DATA XREF: .text:00401D20r
		extrn __imp_ungetc:dword ; DATA	XREF: ungetcr



		end start
